var data =
[
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Tooling \u0026 workflows for HK Twitter analysis",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmp3_qdotm3/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "m0namon/hk-twitter",
    "latest_release": null,
    "linting": "Lints for snakefile /tmp/tmp3_qdotm3/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule fetch_and_process_archive (line 23, /tmp/tmp3_qdotm3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1641161062.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Single cell data from Germinal Center B cell paper",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpnbwg6r6w/workflow/rules/download_remote.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpnbwg6r6w/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpnbwg6r6w/workflow/rules/stellarscope.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpnbwg6r6w/workflow/rules/starsolo_alignment_gdc.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpnbwg6r6w/workflow/rules/fasterq_dump.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpnbwg6r6w/workflow/rules/star_index_gdc38_gencode38.smk\":  Formatted content is different from original\n[INFO] 6 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "nixonlab/HERV_scGCB",
    "latest_release": null,
    "linting": "Lints for rule fasterq_dump (line 8, /tmp/tmpnbwg6r6w/workflow/rules/fasterq_dump.smk):\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule gzip (line 46, /tmp/tmpnbwg6r6w/workflow/rules/fasterq_dump.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_remote (line 6, /tmp/tmpnbwg6r6w/workflow/rules/download_remote.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule extract_genome (line 40, /tmp/tmpnbwg6r6w/workflow/rules/download_remote.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule extract_transcriptome (line 76, /tmp/tmpnbwg6r6w/workflow/rules/download_remote.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule id_mapping (line 116, /tmp/tmpnbwg6r6w/workflow/rules/download_remote.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule telescope_annotation (line 163, /tmp/tmpnbwg6r6w/workflow/rules/download_remote.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule star_index_gdc38_gencode38 (line 4, /tmp/tmpnbwg6r6w/workflow/rules/star_index_gdc38_gencode38.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable rule from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule starsolo_alignment (line 10, /tmp/tmpnbwg6r6w/workflow/rules/starsolo_alignment_gdc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param out_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule samtools_collate (line 83, /tmp/tmpnbwg6r6w/workflow/rules/starsolo_alignment_gdc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule stellarscope (line 4, /tmp/tmpnbwg6r6w/workflow/rules/stellarscope.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Param out is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule stellarscope_individual (line 121, /tmp/tmpnbwg6r6w/workflow/rules/stellarscope.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Param out is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1641065050.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "General rules could be used for specific purpose",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpeb0ecday/rules/merge.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpeb0ecday/rules/bwa.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpeb0ecday/rules/coverage.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpeb0ecday/rules/download.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpeb0ecday/rules/global.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpeb0ecday/rules/fastp.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpeb0ecday/rules/bowtie2.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpeb0ecday/rules/trim.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpeb0ecday/rules/qc.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpeb0ecday/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpeb0ecday/rules/filter.smk\":  Formatted content is different from original\n[INFO] 11 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "yztxwd/snakemake-pipeline-general",
    "latest_release": null,
    "linting": "TypeError in line 9 of /tmp/tmpeb0ecday/Snakefile:\nunhashable type: \u0027collections.OrderedDict\u0027\n  File \"/tmp/tmpeb0ecday/Snakefile\", line 9, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/yaml/__init__.py\", line 81, in load\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/yaml/constructor.py\", line 51, in get_single_data\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/yaml/constructor.py\", line 55, in construct_document\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/yaml/constructor.py\", line 100, in construct_object\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/yaml/constructor.py\", line 155, in construct_pairs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/yaml/constructor.py\", line 100, in construct_object\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1641016846.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "snakemake workflow using R scripts to pull precipitation/climate data for Davis",
    "formatting": "[DEBUG] \n[WARNING] In file \"/tmp/tmpd3zn7bhp/Snakefile\":  Keyword \"input\" at line 18 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[DEBUG] In file \"/tmp/tmpd3zn7bhp/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "ryanpeek/r_with_snakemake",
    "latest_release": null,
    "linting": "Lints for snakefile /tmp/tmpd3zn7bhp/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_metadata (line 28, /tmp/tmpd3zn7bhp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_clim_data (line 48, /tmp/tmpd3zn7bhp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule merge_clim_data (line 71, /tmp/tmpd3zn7bhp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule viz_data (line 98, /tmp/tmpd3zn7bhp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule clean_zips (line 118, /tmp/tmpd3zn7bhp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable ZIPS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule clean_all (line 132, /tmp/tmpd3zn7bhp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable ZIPS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable DATA_CLEAN from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1640896950.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Snakemake workflow to analyze bulk RNA-seq ",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmp08kjkj2u/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp08kjkj2u/workflow/rules/common.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp08kjkj2u/workflow/rules/splicing.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp08kjkj2u/workflow/rules/mapping.smk\":  Formatted content is different from original\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "khayer/rna_seq_standard_pipeline",
    "latest_release": null,
    "linting": "KeyError in line 4 of /tmp/tmp08kjkj2u/workflow/rules/common.smk:\n\u0027samples\u0027\n  File \"/tmp/tmp08kjkj2u/workflow/Snakefile\", line 5, in \u003cmodule\u003e\n  File \"/tmp/tmp08kjkj2u/workflow/rules/common.smk\", line 4, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1640881947.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": null,
    "formatting": "[DEBUG] \n[WARNING] In file \"/tmp/tmp6745u_ai/Snakefile\":  Keyword \"input\" at line 170 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp6745u_ai/Snakefile\":  Keyword \"input\" at line 183 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp6745u_ai/Snakefile\":  Keyword \"input\" at line 196 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp6745u_ai/Snakefile\":  Keyword \"input\" at line 209 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp6745u_ai/Snakefile\":  Keyword \"input\" at line 224 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp6745u_ai/Snakefile\":  Keyword \"input\" at line 237 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp6745u_ai/Snakefile\":  Keyword \"input\" at line 251 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp6745u_ai/Snakefile\":  Keyword \"input\" at line 265 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp6745u_ai/Snakefile\":  Keyword \"input\" at line 279 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[DEBUG] In file \"/tmp/tmp6745u_ai/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "pmalonis/lfads_analysis",
    "latest_release": null,
    "linting": "ModuleNotFoundError in line 7 of /tmp/tmp6745u_ai/Snakefile:\nNo module named \u0027parse\u0027\n  File \"/tmp/tmp6745u_ai/Snakefile\", line 7, in \u003cmodule\u003e\n  File \"/tmp/tmp6745u_ai/src/get_lfads_filepaths.py\", line 2, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1640822299.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": null,
    "formatting": "[DEBUG] \n[ERROR] In file \"/tmp/tmp1tjcpzdm/workflow/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 1:33: \"mkdir -p \" + BINEXTRA + \" \u0026\u0026 \" +\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmp1tjcpzdm/workflow/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n\nsnakefmt version: 0.4.4",
    "full_name": "frankier/vocabaqdata",
    "latest_release": null,
    "linting": "Lints for snakefile /tmp/tmp1tjcpzdm/workflow/Snakefile:\n    * Absolute path \"/does/not/exist\" in line 31:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 85:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 15:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp1tjcpzdm/workflow/datasets/evkd1.smk:\n    * Absolute path \"/does/not/exist\" in line 6:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp1tjcpzdm/workflow/datasets/svl12k.smk:\n    * Absolute path \"/does/not/exist\" in line 1:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmp1tjcpzdm/workflow/datasets/testyourvocab.smk:\n    * Absolute path \"/does/not/exist\" in line 2:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/does/not/exist\" in line 3:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/does/not/exist\" in line 4:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmp1tjcpzdm/workflow/datasets/ecp.smk:\n    * Absolute path \"/..\" in line 32:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 23:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp1tjcpzdm/workflow/datasets/elp.smk:\n    * Path composition with \u0027+\u0027 in line 2:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp1tjcpzdm/workflow/datasets/flp.smk:\n    * Path composition with \u0027+\u0027 in line 29:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp1tjcpzdm/workflow/datasets/spalex.smk:\n    * Path composition with \u0027+\u0027 in line 24:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp1tjcpzdm/workflow/datasets/dcp.smk:\n    * Absolute path \"/..\" in line 33:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 24:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule download_tabula (line 93, /tmp/tmp1tjcpzdm/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_and_convert_evkd1_test_qa (line 32, /tmp/tmp1tjcpzdm/workflow/datasets/evkd1.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule evkd1_convert_gold_answers (line 104, /tmp/tmp1tjcpzdm/workflow/datasets/evkd1.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule evkd1_process_responses (line 124, /tmp/tmp1tjcpzdm/workflow/datasets/evkd1.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule import_svl12k (line 24, /tmp/tmp1tjcpzdm/workflow/datasets/svl12k.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mk_svl12k_wordlist (line 44, /tmp/tmp1tjcpzdm/workflow/datasets/svl12k.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule enrich_svl12k (line 64, /tmp/tmp1tjcpzdm/workflow/datasets/svl12k.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean_svl12k (line 84, /tmp/tmp1tjcpzdm/workflow/datasets/svl12k.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule enrich_clean_svl12k (line 104, /tmp/tmp1tjcpzdm/workflow/datasets/svl12k.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule import_testyourvocab (line 14, /tmp/tmp1tjcpzdm/workflow/datasets/testyourvocab.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_ecp (line 19, /tmp/tmp1tjcpzdm/workflow/datasets/ecp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule extract_ecp (line 38, /tmp/tmp1tjcpzdm/workflow/datasets/ecp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule import_ecp (line 67, /tmp/tmp1tjcpzdm/workflow/datasets/ecp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ecp_inventory (line 87, /tmp/tmp1tjcpzdm/workflow/datasets/ecp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_and_export_elp (line 10, /tmp/tmp1tjcpzdm/workflow/datasets/elp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule import_elp (line 40, /tmp/tmp1tjcpzdm/workflow/datasets/elp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule elp_inventory (line 60, /tmp/tmp1tjcpzdm/workflow/datasets/elp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_flp (line 23, /tmp/tmp1tjcpzdm/workflow/datasets/flp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule extract_flp (line 59, /tmp/tmp1tjcpzdm/workflow/datasets/flp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule import_flp_decisions (line 91, /tmp/tmp1tjcpzdm/workflow/datasets/flp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule import_flp_psuedowords (line 111, /tmp/tmp1tjcpzdm/workflow/datasets/flp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule import_flp_words (line 131, /tmp/tmp1tjcpzdm/workflow/datasets/flp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule import_flp_db (line 151, /tmp/tmp1tjcpzdm/workflow/datasets/flp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule flp_inventory (line 179, /tmp/tmp1tjcpzdm/workflow/datasets/flp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_and_export_wordbank (line 5, /tmp/tmp1tjcpzdm/workflow/datasets/wordbank.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_blp (line 17, /tmp/tmp1tjcpzdm/workflow/datasets/blp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule extract_blp (line 37, /tmp/tmp1tjcpzdm/workflow/datasets/blp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule import_blp (line 57, /tmp/tmp1tjcpzdm/workflow/datasets/blp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule blp_inventory (line 84, /tmp/tmp1tjcpzdm/workflow/datasets/blp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_spalex (line 16, /tmp/tmp1tjcpzdm/workflow/datasets/spalex.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule import_spalex (line 33, /tmp/tmp1tjcpzdm/workflow/datasets/spalex.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule spalex_inventory (line 60, /tmp/tmp1tjcpzdm/workflow/datasets/spalex.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_dcp (line 20, /tmp/tmp1tjcpzdm/workflow/datasets/dcp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule extract_dcp (line 39, /tmp/tmp1tjcpzdm/workflow/datasets/dcp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule import_dcp (line 68, /tmp/tmp1tjcpzdm/workflow/datasets/dcp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dcp_inventory (line 100, /tmp/tmp1tjcpzdm/workflow/datasets/dcp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_dlp (line 16, /tmp/tmp1tjcpzdm/workflow/datasets/dlp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule extract_dlp (line 36, /tmp/tmp1tjcpzdm/workflow/datasets/dlp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule import_dlp (line 56, /tmp/tmp1tjcpzdm/workflow/datasets/dlp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dlp_inventory (line 82, /tmp/tmp1tjcpzdm/workflow/datasets/dlp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_dlp2 (line 15, /tmp/tmp1tjcpzdm/workflow/datasets/dlp2.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule extract_dlp2 (line 35, /tmp/tmp1tjcpzdm/workflow/datasets/dlp2.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule import_dlp2 (line 55, /tmp/tmp1tjcpzdm/workflow/datasets/dlp2.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dlp2_inventory (line 80, /tmp/tmp1tjcpzdm/workflow/datasets/dlp2.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1640790642.0
  },
  {
    "config_readme": "\u003ch1\u003e\n\u003ca id=\"user-content-configuration-options\" class=\"anchor\" href=\"#configuration-options\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eConfiguration options\u003c/h1\u003e\n\u003cp\u003eA description of every valid option in \u003ccode\u003econfig.yaml\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003ee.g.\u003c/p\u003e\n\u003cp\u003eA prefix for outputs.\u003c/p\u003e\n\u003cdiv class=\"highlight highlight-source-yaml\"\u003e\u003cpre\u003e\u003cspan class=\"pl-ent\"\u003emanifest\u003c/span\u003e: \u003cspan class=\"pl-c\"\u003e\u003cspan class=\"pl-c\"\u003e#\u003c/span\u003e Manifest file location (OPTIONAL)\u003c/span\u003e\n\u003cspan class=\"pl-ent\"\u003eREADS\u003c/span\u003e: \u003cspan class=\"pl-c\"\u003e\u003cspan class=\"pl-c\"\u003e#\u003c/span\u003e Dictionary for indexed alignments of raw reads\u003c/span\u003e\n  \u003cspan class=\"pl-ent\"\u003eONT\u003c/span\u003e: \u003cspan class=\"pl-c\"\u003e\u003cspan class=\"pl-c\"\u003e#\u003c/span\u003e Example name, can be anything\u003c/span\u003e\n\u003cspan class=\"pl-ent\"\u003eASM\u003c/span\u003e: \u003cspan class=\"pl-c\"\u003e\u003cspan class=\"pl-c\"\u003e#\u003c/span\u003e Dictionary for indexed alignments of assemblies\u003c/span\u003e\n  \u003cspan class=\"pl-ent\"\u003eHIFIASM\u003c/span\u003e: \u003cspan class=\"pl-c\"\u003e\u003cspan class=\"pl-c\"\u003e#\u003c/span\u003e Example name, could be anything\u003c/span\u003e\n\u003cspan class=\"pl-ent\"\u003eSVPOP\u003c/span\u003e: \u003cspan class=\"pl-c\"\u003e\u003cspan class=\"pl-c\"\u003e#\u003c/span\u003e Dictionary for intersect.tab produced by svpop (https://github.com/EichlerLab/svpop)\u003c/span\u003e\n  \u003cspan class=\"pl-ent\"\u003ePBSV\u003c/span\u003e: \u003cspan class=\"pl-c\"\u003e\u003cspan class=\"pl-c\"\u003e#\u003c/span\u003e Example name, could be anything\u003c/span\u003e\n\u003cspan class=\"pl-ent\"\u003eCALLABLE\u003c/span\u003e: \u003cspan class=\"pl-c\"\u003e\u003cspan class=\"pl-c\"\u003e#\u003c/span\u003e Location of callable regions\u003c/span\u003e\n  \u003cspan class=\"pl-ent\"\u003ePAV\u003c/span\u003e: \u003cspan class=\"pl-c\"\u003e\u003cspan class=\"pl-c\"\u003e#\u003c/span\u003e Bed file locations of valid regions per haplotype in the parents\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n",
    "data_format": 2,
    "description": "Pipeline for validation of de novo SVs",
    "formatting": "[DEBUG] \n[ERROR] In file \"/tmp/tmp9aiyl5tq/workflow/rules/combine.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 4:0: elif val_method == \u0027CALLABLE\u0027:\n```\nwhile formatting code with black.\u0027\n[DEBUG] In file \"/tmp/tmp9aiyl5tq/workflow/rules/combine.smk\":  \n[ERROR] In file \"/tmp/tmp9aiyl5tq/workflow/rules/callable.smk\":  \u0027NoParametersError: L16: In input definition.\u0027\n[DEBUG] In file \"/tmp/tmp9aiyl5tq/workflow/rules/callable.smk\":  \n[DEBUG] In file \"/tmp/tmp9aiyl5tq/workflow/rules/common.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp9aiyl5tq/workflow/rules/subseq.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp9aiyl5tq/workflow/rules/msa.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp9aiyl5tq/workflow/Snakefile\":  Formatted content is different from original\n[INFO] 2 file(s) raised parsing errors \ud83e\udd15\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "wharvey31/denovo_sv_validation",
    "latest_release": null,
    "linting": "ModuleNotFoundError in line 8 of /tmp/tmp9aiyl5tq/workflow/Snakefile:\nNo module named \u0027Bio\u0027\n  File \"/tmp/tmp9aiyl5tq/workflow/Snakefile\", line 8, in \u003cmodule\u003e\n",
    "mandatory_flags": null,
    "report": true,
    "software_stack_deployment": {
      "conda": true
    },
    "standardized": true,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1640724207.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "qiime2 asd scripts",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpuapee_hg/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "Pinjontall94/asd-q2",
    "latest_release": null,
    "linting": "FileNotFoundError in line 22 of /tmp/tmpuapee_hg/Snakefile:\n[Errno 2] No such file or directory: \u0027SRR_Acc_List.txt\u0027\n  File \"/tmp/tmpuapee_hg/Snakefile\", line 22, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1640722978.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "snakemake-workflow for SARS-CoV2 reads generate with Nanopore+Artic for later integration into UnCoVar",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpa9s3vxfb/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] \n[DEBUG] In file \"/tmp/tmpa9s3vxfb/workflow/rules/common.smk\":  Formatted content is different from original\n[INFO] 2 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n\nsnakefmt version: 0.4.4",
    "full_name": "simakro/smk-artic-ont",
    "latest_release": null,
    "linting": "Lints for snakefile /tmp/tmpa9s3vxfb/workflow/Snakefile:\n    * Deprecated singularity directive used for container definition in line 8.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule porechop_adapter_barcode_trimming (line 61, /tmp/tmpa9s3vxfb/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule customize_primer_porechop (line 89, /tmp/tmpa9s3vxfb/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule porechop_primer_trimming (line 119, /tmp/tmpa9s3vxfb/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule convert2fasta (line 209, /tmp/tmpa9s3vxfb/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule medaka_polish_reference (line 233, /tmp/tmpa9s3vxfb/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule canu_correct (line 262, /tmp/tmpa9s3vxfb/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule spades_assemble (line 296, /tmp/tmpa9s3vxfb/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ragoo (line 324, /tmp/tmpa9s3vxfb/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1640623927.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Interpretation of Pathogenicity of Copy Number Variants",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpcgnqsrh7/rules/plots.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpcgnqsrh7/rules/tables.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpcgnqsrh7/rules/model_gridsearch.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpcgnqsrh7/rules/classifycnv.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpcgnqsrh7/rules/annotsv.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpcgnqsrh7/Snakefile\":  Formatted content is different from original\n[INFO] 6 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "tsladecek/isv_cnv",
    "latest_release": null,
    "linting": "The flag \u0027temp\u0027 used in rule clean_annotsv_file is only valid for outputs, not inputs.\nModuleNotFoundError in line 7 of /tmp/tmpcgnqsrh7/Snakefile:\nNo module named \u0027sklearn\u0027\n  File \"/tmp/tmpcgnqsrh7/Snakefile\", line 7, in \u003cmodule\u003e\n  File \"/tmp/tmpcgnqsrh7/scripts/ml/gridsearch.py\", line 8, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1640618412.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Snakemake Workflow of Master\u0027s Thesis",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmp4wdjczjm/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "sschmutz/thesis-workflow",
    "latest_release": null,
    "linting": "Lints for rule get_quality_filtered_sequences (line 24, /tmp/tmp4wdjczjm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule metagenome_assembly (line 59, /tmp/tmp4wdjczjm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule read_mapping (line 88, /tmp/tmp4wdjczjm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_virmet_labels (line 110, /tmp/tmp4wdjczjm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule infer_class_labels (line 161, /tmp/tmp4wdjczjm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_quality_metrics (line 196, /tmp/tmp4wdjczjm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "bioinformatics",
      "metagenomics"
    ],
    "updated_at": 1640518751.0
  },
  {
    "config_readme": "\u003ch1\u003e\n\u003ca id=\"user-content-configuration-settings\" class=\"anchor\" href=\"#configuration-settings\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eConfiguration Settings\u003c/h1\u003e\n\u003cp\u003eTo configure this workflow, you need to edit \u003ccode\u003econfig/config.yaml\u003c/code\u003e file based on your needs. The explanation for each parameter is provided in the \u003ccode\u003econfig.yaml\u003c/code\u003e file. Below parameters has to be set in order to run this workflow:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003esamples\u003c/code\u003e: the path of the sample sheet\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ephenotype\u003c/code\u003e: the path of the phenotype sheet\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eref:\u003c/code\u003e \u003ccode\u003efasta:\u003c/code\u003e the path of the refrence genome fasta file (Required for alignment step)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1\u003e\n\u003ca id=\"user-content-sample-sheet-samplestsv\" class=\"anchor\" href=\"#sample-sheet-samplestsv\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eSample Sheet (samples.tsv)\u003c/h1\u003e\n\u003cp\u003eAdd samples to \u003ccode\u003econfig/samples.tsv\u003c/code\u003e. For each sample, you need to specify the library name under \u003ccode\u003elibrary_name\u003c/code\u003e column. You can add one or more libraries for each sample. You also need to add either one (column \u003ccode\u003efq1\u003c/code\u003e) or two (columns \u003ccode\u003efq1\u003c/code\u003e, \u003ccode\u003efq2\u003c/code\u003e) FASTQ file path (can be any path in your csystem) for each sample-library combination.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e \u003ccode\u003eSRA\u003c/code\u003e option currently is not available therefore it can be left blank.\u003c/p\u003e\n\u003ch1\u003e\n\u003ca id=\"user-content-phenotype-sheet-phenostsv\" class=\"anchor\" href=\"#phenotype-sheet-phenostsv\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003ePhenotype Sheet (phenos.tsv)\u003c/h1\u003e\n\u003cp\u003eAdd phenotype information to \u003ccode\u003econfig/phenos.tsv\u003c/code\u003e. For each phenotype you need to specify the name of the phenotype (column \u003ccode\u003epheno_name\u003c/code\u003e) and the path of the  correspondig phenotype file (column \u003ccode\u003epheno_path\u003c/code\u003e).\u003c/p\u003e\n\u003cp\u003eThe format of the phenotye file has to match the description in \u003ca href=\"https://github.com/voichek/kmersGWAS/blob/master/manual.pdf\"\u003ethe kmersGWAS manual\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe phenotype file should be with two columns separated by tabs (\\t), with \u201caccession_id\u201d and \u201cphenotype_value\u201d in the header. The first column lists the name of the individuals, as in the kmers_table, and the second, phenotype_value, the phenotypic values in numerical form.\u003c/p\u003e\n\u003c/blockquote\u003e\n",
    "data_format": 2,
    "description": "kGWASflow is a Snakemake workflow for performing k-mers-based GWAS.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/align_reads.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/generate_kinship_matrix.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/kmers_gwas.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/combine_and_filter_kmers.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/align_kmers.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/generate_kmers_table.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/summarize_results.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/filter_kmers.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/ref.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/fetch_reads.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/qc.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/build_kmers_gwas.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/common.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/trimming.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/count_kmers.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp7jkkigk/workflow/rules/fetch_kmers.smk\":  Formatted content is different from original\n[INFO] 17 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "akcorut/kGWASflow",
    "latest_release": null,
    "linting": "WorkflowError in line 13 of /tmp/tmpp7jkkigk/workflow/Snakefile:\nWorkflow defines configfile ../config/config.yaml but it is not present or accessible.\n  File \"/tmp/tmpp7jkkigk/workflow/Snakefile\", line 13, in \u003cmodule\u003e\n",
    "mandatory_flags": null,
    "report": false,
    "software_stack_deployment": {
      "conda": true
    },
    "standardized": true,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "snakemake",
      "genomics",
      "gwas",
      "gwas-pipeline",
      "kmers",
      "bioinformatics-pipeline",
      "ngs",
      "sciworkflows",
      "bioinformatics",
      "conda",
      "pipeline"
    ],
    "updated_at": 1640386970.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Snakemake version of purge_tips",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmp8c4_n0ri/workflow/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "yoshihikosuzuki/purge_tips_smk",
    "latest_release": null,
    "linting": "Lints for snakefile /tmp/tmp8c4_n0ri/workflow/Snakefile:\n    * Absolute path \"/^S/ \u0026\u0026 int(substr($5,6)) \u003c= thres_cov {{print $2}}\" in line 79:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp8c4_n0ri/workflow/common.smk:\n    * Absolute path \"/path/to\" in line 17:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmp8c4_n0ri/workflow/hifiasm/../common.smk:\n    * Absolute path \"/path/to\" in line 17:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmp8c4_n0ri/workflow/winnowmap/../common.smk:\n    * Absolute path \"/path/to\" in line 17:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule ln_input (line 35, /tmp/tmp8c4_n0ri/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule hifiasm (line 29, /tmp/tmp8c4_n0ri/workflow/hifiasm/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule winnowmap (line 31, /tmp/tmp8c4_n0ri/workflow/winnowmap/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule purge_tips (line 97, /tmp/tmp8c4_n0ri/workflow/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1640320026.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": null,
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmptvejnii2/workflow/rules/05_virus_quality.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmptvejnii2/workflow/rules/09_virus_clustering.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmptvejnii2/workflow/rules/03_virus_enrichment.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmptvejnii2/workflow/rules/06_virus_taxonomy.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmptvejnii2/workflow/rules/02_read_assembly.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmptvejnii2/workflow/rules/04_virus_identification.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmptvejnii2/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmptvejnii2/workflow/rules/01_read_preprocessing.smk\":  Formatted content is different from original\n[INFO] 8 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "CarsonJM/phide_piper",
    "latest_release": null,
    "linting": "KeyError in line 8 of /tmp/tmptvejnii2/workflow/Snakefile:\n\u0027sample_info\u0027\n  File \"/tmp/tmptvejnii2/workflow/Snakefile\", line 8, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1640308835.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Collection of rules used to create references, panel of normals (PoN), and background filters.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpwq6ze9k2/workflow/rules/gatk_cnv_panel_of_normal.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpwq6ze9k2/workflow/rules/create_background_file.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpwq6ze9k2/workflow/rules/create_artifact_file.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpwq6ze9k2/workflow/rules/cnvkit_panel_of_normal.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpwq6ze9k2/workflow/rules/common.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpwq6ze9k2/workflow/rules/msi_sensor_pro_panel_of_normal.smk\":  Formatted content is different from original\n[DEBUG] \n[INFO] 6 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n\nsnakefmt version: 0.4.4",
    "full_name": "hydra-genetics/references",
    "latest_release": null,
    "linting": "ModuleNotFoundError in line 13 of /tmp/tmpwq6ze9k2/workflow/rules/common.smk:\nNo module named \u0027hydra_genetics\u0027\n  File \"/tmp/tmpwq6ze9k2/workflow/Snakefile\", line 10, in \u003cmodule\u003e\n  File \"/tmp/tmpwq6ze9k2/workflow/rules/common.smk\", line 13, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 4,
    "topics": [],
    "updated_at": 1640253948.0
  },
  {
    "config_readme": "\u003ch1\u003e\n\u003ca id=\"user-content-workflow-configuration\" class=\"anchor\" href=\"#workflow-configuration\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eWorkflow configuration\u003c/h1\u003e\n\u003ch2\u003e\n\u003ca id=\"user-content-configuration\" class=\"anchor\" href=\"#configuration\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eConfiguration\u003c/h2\u003e\n\u003cp\u003eTo configure the workflow, modifiy \u003ccode\u003econfig/config.yaml\u003c/code\u003e according\nto your needs.\u003c/p\u003e\n\u003cp\u003eFor specific details about the parameters\ncheck the main README.\u003c/p\u003e\n\u003ch2\u003e\n\u003ca id=\"user-content-sample-sheet\" class=\"anchor\" href=\"#sample-sheet\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eSample sheet\u003c/h2\u003e\n\u003cp\u003eAdd your samples to \u003ccode\u003econfig/samples.tsv\u003c/code\u003e or use the\nthe helper script from Bundes Insitut f\u00fcr Risikobewertung in\n\u003ccode\u003eressources/creat_sampleSheet.sh\u003c/code\u003e.\u003c/p\u003e\n",
    "data_format": 2,
    "description": "A pipeline for Food DNA Metabarcoding analysis",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/reports.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/vsearch.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] \n[DEBUG] In file \"/tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/trimming.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] \n[DEBUG] In file \"/tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/blast.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/dada2.smk\":  Formatted content is different from original\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n[INFO] 2 file(s) would be left unchanged \ud83c\udf89\n\nsnakefmt version: 0.4.4",
    "full_name": "CVUA-RRW/FooDMe",
    "latest_release": "1.4.2",
    "linting": "Lints for snakefile /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/reports.smk:\n    * Absolute path \"/\" -f1)\" in line 55:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule get_primer_revcomp (line 11, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/trimming.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule primer_trimming_stats (line 166, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/trimming.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule parse_fastp (line 304, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/trimming.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule trimming_stats (line 345, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/trimming.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule collect_trimming_stats (line 374, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/trimming.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule unpack_fastq (line 8, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/dada2.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule denoise (line 40, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/dada2.smk):\n    * Param sample_name is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule collect_denoising_stats (line 93, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/dada2.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule prep_taxonomy (line 10, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_taxid_from_db (line 36, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule create_blast_mask (line 75, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule apply_blocklist (line 108, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule no_masking (line 133, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule no_blocklist (line 157, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter_blast (line 274, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule find_consensus (line 321, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule blast_stats (line 353, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule collect_blast_stats (line 452, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule tax_stats (line 488, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule collect_tax_stats (line 558, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule summarize_results (line 597, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule collect_results (line 644, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule krona_table (line 8, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/reports.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule krona (line 33, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/reports.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule krona_all (line 64, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/reports.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule summary_report (line 120, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/reports.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule collect_summaries (line 226, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/reports.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule report_sample (line 265, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/reports.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param sample is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule report_all (line 316, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/reports.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule software_versions (line 370, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/reports.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule database_version (line 463, /tmp/tmpnv02r1mw/CVUA-RRW-FooDMe-f638487/workflow/rules/reports.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "mandatory_flags": null,
    "report": true,
    "software_stack_deployment": {
      "conda": true
    },
    "standardized": true,
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [
      "ngs",
      "ngs-pipeline",
      "metabarcoding",
      "targeted-sequencing",
      "snakemake",
      "food-monitoring",
      "public-health",
      "food-authenticity",
      "workflow",
      "pipeline"
    ],
    "updated_at": 1640171673.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Data and code associated with the upcoming manuscript on killifish microbiota",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpzzs1wakw/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "microlei/killifish_microbiome",
    "latest_release": null,
    "linting": "WorkflowError in line 40 of /tmp/tmpzzs1wakw/Snakefile:\nDuplicate output file pattern in rule plotQP. First two duplicate for entries R1 and R2\n  File \"/tmp/tmpzzs1wakw/Snakefile\", line 40, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1640148266.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": null,
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpj29rg4io/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "BeeCSI-Microbiome/taxonomic_profiling_pipeline",
    "latest_release": null,
    "linting": "KeyError in line 13 of /tmp/tmpj29rg4io/Snakefile:\n\"None of [\u0027sample\u0027] are in the columns\"\n  File \"/tmp/tmpj29rg4io/Snakefile\", line 13, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/core/frame.py\", line 5451, in set_index\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1640127261.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": null,
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpqksejsi1/workflow/rules/background_filter.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpqksejsi1/workflow/rules/tabix_vcf.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpqksejsi1/workflow/rules/bgzip_vcf.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] \n[DEBUG] In file \"/tmp/tmpqksejsi1/workflow/rules/add_multi_snv_in_codon.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpqksejsi1/workflow/rules/artifact_filter.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpqksejsi1/workflow/rules/sort_vcf.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpqksejsi1/workflow/rules/common.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpqksejsi1/workflow/rules/filter_vcf_on_format.smk\":  Formatted content is different from original\n[INFO] 8 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n\nsnakefmt version: 0.4.4",
    "full_name": "hydra-genetics/filtering",
    "latest_release": null,
    "linting": "ModuleNotFoundError in line 13 of /tmp/tmpqksejsi1/workflow/rules/common.smk:\nNo module named \u0027hydra_genetics\u0027\n  File \"/tmp/tmpqksejsi1/workflow/Snakefile\", line 10, in \u003cmodule\u003e\n  File \"/tmp/tmpqksejsi1/workflow/rules/common.smk\", line 13, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 4,
    "topics": [],
    "updated_at": 1640087793.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Collections of rules to annotate vcf files.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpdmzt_awi/workflow/rules/common.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] \n[DEBUG] In file \"/tmp/tmpdmzt_awi/workflow/rules/calculate_seqrun_background.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpdmzt_awi/workflow/rules/vep.smk\":  Formatted content is different from original\n[INFO] 3 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n\nsnakefmt version: 0.4.4",
    "full_name": "hydra-genetics/annotation",
    "latest_release": null,
    "linting": "ModuleNotFoundError in line 13 of /tmp/tmpdmzt_awi/workflow/rules/common.smk:\nNo module named \u0027hydra_genetics\u0027\n  File \"/tmp/tmpdmzt_awi/workflow/Snakefile\", line 10, in \u003cmodule\u003e\n  File \"/tmp/tmpdmzt_awi/workflow/rules/common.smk\", line 13, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1640087596.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "A Snakemake workflow for visualising UK Covid-19 data",
    "formatting": null,
    "full_name": "rbpatt2019/uk_covid_data",
    "latest_release": "v0.1.0",
    "linting": null,
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1640076249.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Pipeline to process duplex sequencing data.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpvz8mk19r/workflow/rules/align.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpvz8mk19r/workflow/rules/common.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpvz8mk19r/workflow/rules/variants.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpvz8mk19r/workflow/rules/umi.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpvz8mk19r/workflow/rules/consensus.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpvz8mk19r/workflow/rules/umi_correct.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpvz8mk19r/workflow/rules/preprocess.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpvz8mk19r/workflow/rules/qc.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpvz8mk19r/workflow/Snakefile\":  Formatted content is different from original\n[INFO] 9 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "WEHIGenomicsRnD/duplex-seq-pipeline",
    "latest_release": null,
    "linting": "Lints for rule align (line 51, /tmp/tmpvz8mk19r/workflow/rules/align.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule merge_bam_alignment (line 95, /tmp/tmpvz8mk19r/workflow/rules/align.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule remap_align (line 208, /tmp/tmpvz8mk19r/workflow/rules/align.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule remap_merge_bam_alignment (line 252, /tmp/tmpvz8mk19r/workflow/rules/align.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule call_duplex_consensus (line 1, /tmp/tmpvz8mk19r/workflow/rules/consensus.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule filter_consensus_reads (line 53, /tmp/tmpvz8mk19r/workflow/rules/consensus.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule clip_bam (line 1, /tmp/tmpvz8mk19r/workflow/rules/variants.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule varscan (line 53, /tmp/tmpvz8mk19r/workflow/rules/variants.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule extract_umis (line 1, /tmp/tmpvz8mk19r/workflow/rules/umi_correct.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule correct_umis (line 51, /tmp/tmpvz8mk19r/workflow/rules/umi_correct.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule group_reads_by_umi (line 102, /tmp/tmpvz8mk19r/workflow/rules/umi_correct.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1640045410.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "genome tRNA annotation",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmppvsqv69e/workflow/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "ibmp-bip/tRNAflow",
    "latest_release": null,
    "linting": "FileNotFoundError in line 24 of /tmp/tmppvsqv69e/workflow/Snakefile:\n[Errno 2] No such file or directory: \u0027Genome_description.txt\u0027\n  File \"/tmp/tmppvsqv69e/workflow/Snakefile\", line 24, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 683, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 482, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 811, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 1040, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 51, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/base_parser.py\", line 222, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/common.py\", line 702, in get_handle\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1640004486.0
  },
  {
    "config_readme": "\u003cp\u003ePlease follow the instructions in the template config.yaml that is copied to your deployment via snakedeploy.\u003c/p\u003e\n",
    "data_format": 2,
    "description": "A snakemake workflow for benchmarking variant calling approaches with Genome in a Bottle (GIAB)",
    "formatting": "[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] In file \"/tmp/tmp9e3zpp4r/snakemake-workflows-benchmark-giab-97c0b1b/workflow/rules/common.smk\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n[INFO] 3 file(s) would be left unchanged \ud83c\udf89\n\nsnakefmt version: 0.4.4",
    "full_name": "snakemake-workflows/benchmark-giab",
    "latest_release": "v1.0.1",
    "linting": null,
    "mandatory_flags": {
      "desc": null,
      "flags": null
    },
    "report": true,
    "software_stack_deployment": {
      "conda": true,
      "singularity": false,
      "singularity+conda": false
    },
    "standardized": true,
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1640001126.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Snakemake workflow for generating read count data from CRISPR screens.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpdzjvxcsy/workflow/rules/guide_mapping.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpdzjvxcsy/workflow/rules/read_counts.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpdzjvxcsy/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpdzjvxcsy/workflow/rules/gene_essentiality.smk\":  Formatted content is different from original\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "david-a-parry/perturbseq_workflow",
    "latest_release": null,
    "linting": "Lints for snakefile /tmp/tmpdzjvxcsy/workflow/Snakefile:\n    * Path composition with \u0027+\u0027 in line 32:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpdzjvxcsy/workflow/rules/guide_mapping.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 53:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpdzjvxcsy/workflow/rules/read_counts.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpdzjvxcsy/workflow/rules/gene_essentiality.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule bt_index_reference (line 71, /tmp/tmpdzjvxcsy/workflow/rules/guide_mapping.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule bowtie_map (line 161, /tmp/tmpdzjvxcsy/workflow/rules/guide_mapping.smk):\n    * Param ref_idx is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule combine_read_counts (line 37, /tmp/tmpdzjvxcsy/workflow/rules/read_counts.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_guide_counts (line 63, /tmp/tmpdzjvxcsy/workflow/rules/read_counts.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule run_bagel_fc (line 59, /tmp/tmpdzjvxcsy/workflow/rules/gene_essentiality.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule run_bagel_bf (line 95, /tmp/tmpdzjvxcsy/workflow/rules/gene_essentiality.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n\nLints for rule regression_analysis (line 306, /tmp/tmpdzjvxcsy/workflow/rules/gene_essentiality.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639958104.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Phylogeography of SARS-CoV-2",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpy_w3jo35/workflow/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "ktmeaton/ncov-phylogeography",
    "latest_release": null,
    "linting": "Lints for snakefile /tmp/tmpy_w3jo35/workflow/Snakefile:\n    * Absolute path \"/workflow.rst\" in line 47:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/metadata/{reads_origin}/metadata.tsv\" in line 105:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/data/{reads_origin}/{sample}/{sample}.{ext}\" in line 129:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/data/{reads_origin}/{sample}/{sample}.fna\" in line 167:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/data/reference/{sample}/{sample}.gbff\" in line 168:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.tab\" in line 174:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.txt\" in line 175:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.aligned.fa\" in line 176:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.subs.vcf\" in line 177:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.raw.vcf\" in line 178:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.log\" in line 179:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/\" + \" in line 213:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/data/reference/{sample}/{sample}.fna\" in line 218:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/snippy-multi.full.aln\" in line 222:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/snippy-multi.log\" in line 223:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/snippy-multi.constant_sites.txt\" in line 224:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/snippy-multi.filter.aln\" in line 225:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/snippy-multi.filter.log\" in line 226:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/snippy-multi.filter.aln\" in line 270:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/snippy-multi.constant_sites.txt\" in line 271:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/iqtree.nwk\" in line 274:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/iqtree.iqtree\" in line 275:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/iqtree.log\" in line 276:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/iqtree\" in line 283:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/iqtree.nwk\" in line 320:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/snippy-multi.full.aln\" in line 321:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/data/reference/{sample}/{sample}.gff\" in line 322:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/augur/{reads_origin}/augur.nwk\" in line 327:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/augur/{reads_origin}/nt_muts.json\" in line 328:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/augur/{reads_origin}/aa_muts.json\" in line 329:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/iqtree.nwk\" in line 364:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/metadata/{reads_origin}/metadata.tsv\" in line 365:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/augur/{reads_origin}/nt_muts.json\" in line 366:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/augur/{reads_origin}/aa_muts.json\" in line 367:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/config/colors.tsv\" in line 368:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/auspice/{reads_origin}/iqtree.json\" in line 371:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/metadata/nucleotide/metadata.tsv\" in line 394:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/nucleotide/snippy-multi.log\" in line 438:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/nucleotide/iqtree.nwk\" in line 445:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lsd2/nucleotide/lsd.log\" in line 447:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/augur/nucleotide/nt_muts.json\" in line 452:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/auspice/nucleotide/iqtree.json\" in line 457:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Environment variable CONDA_CACHEDIR used but not asserted with envvars directive in line 60.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable NXF_CONDA_CACHEDIR used but not asserted with envvars directive in line 61.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable CONDA_CACHEDIR used but not asserted with envvars directive in line 63.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable NXF_CONDA_CACHEDIR used but not asserted with envvars directive in line 64.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable LANGUAGE used but not asserted with envvars directive in line 68.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable LANG used but not asserted with envvars directive in line 70.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable LC_ALL used but not asserted with envvars directive in line 72.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 47:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 105:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 129:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 167:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 168:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 173:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 175:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 176:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 177:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 178:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 179:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 213:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 218:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 222:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 223:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 224:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 225:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 226:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 270:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 271:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 274:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 275:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 276:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 282:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 320:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 321:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 322:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 327:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 328:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 329:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 364:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 365:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 366:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 367:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 368:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 371:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 373:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 394:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 438:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 445:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 447:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 452:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 457:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule metadata (line 101, /tmp/tmpy_w3jo35/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule download_nucleotide (line 140, /tmp/tmpy_w3jo35/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule snippy_pairwise (line 203, /tmp/tmpy_w3jo35/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule snippy_multi (line 281, /tmp/tmpy_w3jo35/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable results_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule iqtree (line 377, /tmp/tmpy_w3jo35/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule augur (line 461, /tmp/tmpy_w3jo35/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule auspice (line 535, /tmp/tmpy_w3jo35/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639941631.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": null,
    "formatting": "[DEBUG] \n[ERROR] In file \"/tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/05_F2_recomb_blocks.smk\":  \u0027NoParametersError: L129: In output definition.\u0027\n[DEBUG] In file \"/tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/05_F2_recomb_blocks.smk\":  \n[DEBUG] In file \"/tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/04_F2_mapping.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/00_common.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/01_ref.smk\":  Formatted content is different from original\n[DEBUG] \n[ERROR] In file \"/tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/02_F0_mapping.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 3:7: params:\n```\nwhile formatting code with black.\u0027\n[DEBUG] In file \"/tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/02_F0_mapping.smk\":  \n[DEBUG] In file \"/tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/03_F0_calling.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/Snakefile\":  Formatted content is different from original\n[INFO] 2 file(s) raised parsing errors \ud83e\udd15\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "brettellebi/somites",
    "latest_release": "v0.0.1",
    "linting": "Lints for snakefile /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/02_F0_mapping.smk:\n    * Path composition with \u0027+\u0027 in line 29:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 48:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 70:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/03_F0_calling.smk:\n    * Path composition with \u0027+\u0027 in line 11:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/04_F2_mapping.smk:\n    * Path composition with \u0027+\u0027 in line 76:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 97:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/05_F2_recomb_blocks.smk:\n    * Absolute path \"/|\\|\" in line 40:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/hps/nobackup/birney/users/ian/somites/dp4s/batch_01/bwamem2/11.dp4.txt\" in line 93:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/hps/nobackup/birney/users/ian/somites/data/sites_files/F0_Cab_Kaga/final/all.txt\" in line 97:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_genome (line 1, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/01_ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule genome_faidx (line 23, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/01_ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule genome_dict (line 42, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/01_ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bwa_mem2_index (line 77, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/01_ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule map_reads (line 1, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/02_F0_mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule replace_rg (line 28, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/02_F0_mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sort_sam (line 61, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/02_F0_mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mark_duplicates (line 95, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/02_F0_mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule merge_bams (line 132, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/02_F0_mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 167, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/02_F0_mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule haplotype_caller (line 1, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/03_F0_calling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule combine_calls (line 32, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/03_F0_calling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule genotype_variants (line 55, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/03_F0_calling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule merge_variants (line 75, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/03_F0_calling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bwa_mem2_mem (line 66, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/04_F2_mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sort_sam_f2 (line 112, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/04_F2_mapping.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mark_duplicates_f2 (line 158, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/04_F2_mapping.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index_f2 (line 204, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/04_F2_mapping.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_homozygous_sites (line 2, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/05_F2_recomb_blocks.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_divergent_sites (line 51, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/05_F2_recomb_blocks.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule bind_divergent_sites (line 81, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/05_F2_recomb_blocks.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule bam_readcount (line 105, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/05_F2_recomb_blocks.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule make_dp_AB (line 144, /tmp/tmp88wuqmx3/brettellebi-somites-f9896e9/workflow/rules/05_F2_recomb_blocks.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639915479.0
  },
  {
    "config_readme": "\u003ch1\u003e\n\u003ca id=\"user-content-general-settings\" class=\"anchor\" href=\"#general-settings\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eGeneral settings\u003c/h1\u003e\n\u003cp\u003eTo configure this workflow, modify \u003ccode\u003econfig/config.yaml\u003c/code\u003e according to your needs, following the explanations provided in the file.\u003c/p\u003e\n\u003ch1\u003e\n\u003ca id=\"user-content-sample-and-unit-sheet\" class=\"anchor\" href=\"#sample-and-unit-sheet\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eSample and unit sheet\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eAdd samples to \u003ccode\u003econfig/samples.tsv\u003c/code\u003e. For each sample, the columns \u003ccode\u003esample_name\u003c/code\u003e, and \u003ccode\u003econdition\u003c/code\u003e have to be defined. The \u003ccode\u003econdition\u003c/code\u003e (healthy/tumor, before Treatment / after Treatment) will be used as contrast for the DEG analysis in DESeq2. To include other relevant variables such as batches, add a new column to the sheet.\u003c/li\u003e\n\u003cli\u003eFor each sample, add one or more sequencing units (runs, lanes or replicates) to the unit sheet \u003ccode\u003econfig/units.tsv\u003c/code\u003e. By activating or deactivating \u003ccode\u003emergeReads\u003c/code\u003e in the \u003ccode\u003econfig/config.yaml\u003c/code\u003e, you can decide wether to merge replicates or run them individually. For each unit, define adapters, and either one (column \u003ccode\u003efq1\u003c/code\u003e) or two (columns \u003ccode\u003efq1\u003c/code\u003e, \u003ccode\u003efq2\u003c/code\u003e) FASTQ files (these can point to anywhere in your system). Alternatively, you can define an SRA (sequence read archive) accession (starting with e.g. ERR or SRR) by using a column \u003ccode\u003esra\u003c/code\u003e. In the latter case, the pipeline will automatically download the corresponding paired end reads from SRA. If both local files and SRA accession are available, the local files will be preferred.\nTo choose the correct geneCounts produced by STAR, you can define the strandedness of a unit. STAR produces counts for unstranded (\u0027None\u0027 - default), forward oriented (\u0027yes\u0027) and reverse oriented (\u0027reverse\u0027) protocols.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMissing values can be specified by empty columns or by writing \u003ccode\u003eNA\u003c/code\u003e.\u003c/p\u003e\n\u003ch1\u003e\n\u003ca id=\"user-content-deseq-scenario\" class=\"anchor\" href=\"#deseq-scenario\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eDESeq scenario\u003c/h1\u003e\n\u003cp\u003eTo initialize the DEG analysis, you need to define a model in the \u003ccode\u003econfig/config.yaml\u003c/code\u003e. The model can include all variables introduced as columns in \u003ccode\u003econfig/samples.tsv\u003c/code\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe standard model is \u003ccode\u003e~condition\u003c/code\u003e - to include a batch variable, write \u003ccode\u003e~batch + condition\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n",
    "data_format": 2,
    "description": null,
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpp39inf0q/workflow/rules/Strelka.smk\":  Formatted content is different from original\n[DEBUG] \n[ERROR] In file \"/tmp/tmpp39inf0q/workflow/rules/vcftoMAFsnv.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 3:7: output:\n```\nwhile formatting code with black.\u0027\n[DEBUG] In file \"/tmp/tmpp39inf0q/workflow/rules/vcftoMAFsnv.smk\":  \n[DEBUG] In file \"/tmp/tmpp39inf0q/workflow/rules/vcftoMAFindel.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp39inf0q/workflow/rules/haplogatk.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp39inf0q/workflow/rules/common.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp39inf0q/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp39inf0q/workflow/rules/varscan.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp39inf0q/workflow/rules/mutect2.smk\":  Formatted content is different from original\n[DEBUG] \n[ERROR] In file \"/tmp/tmpp39inf0q/workflow/rules/mutect1.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 3:6: shell:\n```\nwhile formatting code with black.\u0027\n[DEBUG] In file \"/tmp/tmpp39inf0q/workflow/rules/mutect1.smk\":  \n[DEBUG] In file \"/tmp/tmpp39inf0q/workflow/rules/VCFIntersect.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp39inf0q/workflow/rules/Sequenza.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpp39inf0q/workflow/rules/SequenzaFromVarscan.smk\":  Formatted content is different from original\n[DEBUG] \n[ERROR] In file \"/tmp/tmpp39inf0q/workflow/rules/align.smk\":  \u0027NoParametersError: L8: In params definition.\u0027\n[INFO] In file \"/tmp/tmpp39inf0q/workflow/rules/align.smk\":  3 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmpp39inf0q/workflow/rules/align.smk\":  10 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "elsamah/ExomeSeq_wNorm",
    "latest_release": null,
    "linting": "PermissionError in line 5 of /tmp/tmpp39inf0q/workflow/Snakefile:\n[Errno 13] Permission denied: \u0027/cluster\u0027\n  File \"/tmp/tmpp39inf0q/workflow/Snakefile\", line 5, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/os.py\", line 225, in makedirs\n",
    "mandatory_flags": null,
    "report": true,
    "software_stack_deployment": {
      "conda": true
    },
    "standardized": true,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639769220.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Build resitance gene catelogue based the RGI output from CARD, and do alignements (packed in the Snakemake workflow) ",
    "formatting": "[DEBUG] \n[WARNING] In file \"/tmp/tmpuhcoledb/Snakefile\":  Inline-formatted keyword \"threads\" at line 122 had its comments relocated above it.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[DEBUG] In file \"/tmp/tmpuhcoledb/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "yanhui09/RGIcat",
    "latest_release": null,
    "linting": "Lints for snakefile /tmp/tmpuhcoledb/Snakefile:\n    * Absolute path \"/{dir}/{file}.fastq.gz\" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/count_matrix.tsv\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/AMG/AMG.fasta\" in line 25:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/AMG/kept.tsv\" in line 26:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/AMG\" in line 28:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/extract_AMG.log\" in line 32:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/AMG/AMG.fasta\" in line 43:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/AMG/AMG.cdhit.fasta\" in line 45:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/cdhit.log\" in line 49:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/AMG/AMG.cdhit.fasta\" in line 56:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/AMG/AMG.cdhit\" in line 59:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/bowtie2_build/build.log\" in line 63:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}\" in line 74:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}/{sample}_R1.fastq.gz\" in line 76:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}/{sample}_R2.fastq.gz\" in line 77:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}/{sample}_R1.fastq.gz\" in line 87:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}/{sample}_R2.fastq.gz\" in line 87:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mapped/{sample}.bam\" in line 89:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/bowtie2/{sample}.log\" in line 91:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/AMG/AMG.cdhit\" in line 95:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mapped/{sample}.bam\" in line 103:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mapped/{sample}.sorted.bam\" in line 105:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/samtools/sorted/{sample}.log\" in line 109:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mapped/{sample}.sorted.bam\" in line 115:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mapped/{sample}.sorted.bam.bai\" in line 117:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/samtools_index/{sample}.log\" in line 119:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mapped/{sample}.sorted.bam\" in line 129:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mapped/{sample}.sorted.bam.bai\" in line 130:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/gene_names\" in line 132:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/gene_names.log\" in line 136:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mapped/{sample}.sorted.bam\" in line 145:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mapped/{sample}.sorted.bam.bai\" in line 146:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/counts/{sample}.count\" in line 148:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/counts/{sample}.log\" in line 152:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/gene_names\" in line 161:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/counts/{sample}.count\" in line 162:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/count_matrix.tsv\" in line 164:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/count_matrix.log\" in line 166:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 10:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 26:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 28:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 32:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 43:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 45:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 49:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 56:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 59:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 74:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 77:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 87:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 87:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 89:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 91:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 95:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 103:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 105:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 109:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 115:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 117:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 119:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 129:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 130:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 132:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 136:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 145:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 146:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 148:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 152:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 161:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 164:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Deprecated singularity directive used for container definition in line 15.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cleanup_fq_names (line 134, /tmp/tmpuhcoledb/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bwt2_map (line 160, /tmp/tmpuhcoledb/Snakefile):\n    * Param index is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule count_matrix (line 322, /tmp/tmpuhcoledb/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639760540.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Snakemake workflow to run pangolin on all SARS-CoV-2 sequences in ENA",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpb4sz8_df/workflow/rules/split_embl_file.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpb4sz8_df/workflow/rules/run_pangolin.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpb4sz8_df/workflow/rules/copy_embl_file.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpb4sz8_df/workflow/rules/join_json.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpb4sz8_df/workflow/rules/convert_to_json.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpb4sz8_df/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpb4sz8_df/workflow/rules/make_json_header_footer.smk\":  Formatted content is different from original\n[INFO] 7 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "carlacummins/cv19-lineages-workflow",
    "latest_release": null,
    "linting": "KeyError in line 2 of /tmp/tmpb4sz8_df/workflow/Snakefile:\n\u0027embl_input\u0027\n  File \"/tmp/tmpb4sz8_df/workflow/Snakefile\", line 2, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639754114.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Multiple sequence alignment pipeline",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpqesxc8nb/workflow/rules/align.smk\":  Formatted content is different from original\n[DEBUG] \n[ERROR] In file \"/tmp/tmpqesxc8nb/workflow/rules/call_conservation.smk\":  \u0027SyntaxError: L164: Colon (not \u0027maf_split\u0027) expected after \u0027checkpoint rule\u0027\u0027\n[DEBUG] In file \"/tmp/tmpqesxc8nb/workflow/rules/call_conservation.smk\":  \n[DEBUG] In file \"/tmp/tmpqesxc8nb/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpqesxc8nb/workflow/rules/roast.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpqesxc8nb/workflow/rules/chain_and_net.smk\":  Formatted content is different from original\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "ascheben/msa_pipeline",
    "latest_release": null,
    "linting": "Lints for snakefile /tmp/tmpqesxc8nb/workflow/./rules/call_conservation.smk:\n    * Absolute path \"/^\u003e/! s/N/-/g\" in line 101:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule lastdb_index (line 62, /tmp/tmpqesxc8nb/workflow/./rules/align.smk):\n    * Param indexBase is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule build_index (line 123, /tmp/tmpqesxc8nb/workflow/./rules/align.smk):\n    * Param speciesSizeFile is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule align_single (line 232, /tmp/tmpqesxc8nb/workflow/./rules/align.smk):\n    * Param speciesPath is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param speciesSizeFile is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule align_split (line 307, /tmp/tmpqesxc8nb/workflow/./rules/align.smk):\n    * Param splitDir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param speciesPath is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule fa_to_2bit (line 25, /tmp/tmpqesxc8nb/workflow/./rules/chain_and_net.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule axt_chain_prenet (line 53, /tmp/tmpqesxc8nb/workflow/./rules/chain_and_net.smk):\n    * Param pslFiles is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule write_tree (line 35, /tmp/tmpqesxc8nb/workflow/./rules/roast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule run_roast (line 137, /tmp/tmpqesxc8nb/workflow/./rules/roast.smk):\n    * Param inputDir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param outputDir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule clean_maf (line 123, /tmp/tmpqesxc8nb/workflow/./rules/call_conservation.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule raxml (line 258, /tmp/tmpqesxc8nb/workflow/./rules/call_conservation.smk):\n    * Param workDir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule phylofit (line 305, /tmp/tmpqesxc8nb/workflow/./rules/call_conservation.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule wig2bed (line 468, /tmp/tmpqesxc8nb/workflow/./rules/call_conservation.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule add_phylop_header (line 498, /tmp/tmpqesxc8nb/workflow/./rules/call_conservation.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule gerp2bed (line 524, /tmp/tmpqesxc8nb/workflow/./rules/call_conservation.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule maf2cov (line 558, /tmp/tmpqesxc8nb/workflow/./rules/call_conservation.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule add_cov (line 584, /tmp/tmpqesxc8nb/workflow/./rules/call_conservation.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule add_gerp_header (line 615, /tmp/tmpqesxc8nb/workflow/./rules/call_conservation.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule gerp_clean (line 655, /tmp/tmpqesxc8nb/workflow/./rules/call_conservation.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule phylop_clean (line 685, /tmp/tmpqesxc8nb/workflow/./rules/call_conservation.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639751355.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Collection of scripts for the Bayesian GGM project",
    "formatting": "[DEBUG] \n[ERROR] In file \"/tmp/tmpy8bo1img/Snakefile\":  \u0027SyntaxError: L594: Unrecognised keyword \u0027snp_summary\u0027 in rule definition\u0027\n[INFO] In file \"/tmp/tmpy8bo1img/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n\nsnakefmt version: 0.4.4",
    "full_name": "jhawe/bggm",
    "latest_release": null,
    "linting": "ValueError in line 85 of /tmp/tmpy8bo1img/workflows/2_2_simulation.sm:\nlist.remove(x): x not in list\n  File \"/tmp/tmpy8bo1img/Snakefile\", line 64, in \u003cmodule\u003e\n  File \"/tmp/tmpy8bo1img/workflows/2_2_simulation.sm\", line 85, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1639745132.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": null,
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmp3bbdtvcq/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "nioo-knaw/orochi",
    "latest_release": null,
    "linting": "KeyError in line 3 of /tmp/tmp3bbdtvcq/src/rules/core/taxonomic-annotation/cat.smk:\n\u0027assembler\u0027\n  File \"/tmp/tmp3bbdtvcq/Snakefile\", line 15, in \u003cmodule\u003e\n  File \"/tmp/tmp3bbdtvcq/src/rules/core/taxonomic-annotation/cat.smk\", line 3, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1639734772.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "miRNA analysis pipeline",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpcgsigr9u/rules/count_mirna.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpcgsigr9u/rules/umi_and_trimming.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpcgsigr9u/rules/delivery.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpcgsigr9u/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpcgsigr9u/rules/qc.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpcgsigr9u/rules/samtools.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpcgsigr9u/rules/mapping.smk\":  Formatted content is different from original\n[INFO] 7 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "solida-core/miRNA",
    "latest_release": null,
    "linting": "KeyError in line 4 of /tmp/tmpcgsigr9u/Snakefile:\n\u0027samples\u0027\n  File \"/tmp/tmpcgsigr9u/Snakefile\", line 4, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1639730787.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Analysis code for Olink CVD1 - HF analysis",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmp1vj_vs3j/workflow/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "alhenry/cvd1-hf",
    "latest_release": null,
    "linting": "Lints for rule obs_analysis (line 21, /tmp/tmp1vj_vs3j/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule MR_analysis (line 44, /tmp/tmp1vj_vs3j/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule aggregate_MR (line 69, /tmp/tmp1vj_vs3j/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639711032.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Mapping mutations to the SARS-CoV-2 B.1.351 RBD that reduce binding of polyclonal plasmas from B.1.351-convalescent individuals",
    "formatting": "[DEBUG] \n[WARNING] In file \"/tmp/tmpk8ezxznr/Snakefile\":  Keyword \"input\" at line 265 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmpk8ezxznr/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 1:0: elif config[\u0027seqdata_source\u0027] == \u0027SRA\u0027:\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmpk8ezxznr/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n\nsnakefmt version: 0.4.4",
    "full_name": "jbloomlab/SARS-CoV-2-RBD_B.1.351",
    "latest_release": null,
    "linting": "ModuleNotFoundError in line 10 of /tmp/tmpk8ezxznr/Snakefile:\nNo module named \u0027Bio\u0027\n  File \"/tmp/tmpk8ezxznr/Snakefile\", line 10, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1639709375.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "A Snakemake pipeline for variant calling of genomic FASTQ data using GATK",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmp6jo9s_za/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp6jo9s_za/workflow/rules/relations.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp6jo9s_za/workflow/rules/phasing.smk\":  Formatted content is different from original\n[DEBUG] \n[WARNING] In file \"/tmp/tmp6jo9s_za/workflow/rules/variant_calling.smk\":  Keyword \"shell\" at line 156 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[DEBUG] In file \"/tmp/tmp6jo9s_za/workflow/rules/variant_calling.smk\":  Formatted content is different from original\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "allytrope/variant-analysis",
    "latest_release": null,
    "linting": "KeyError in line 130 of /tmp/tmp6jo9s_za/workflow/rules/variant_calling.smk:\n\u0027map\u0027\n  File \"/tmp/tmp6jo9s_za/workflow/Snakefile\", line 6, in \u003cmodule\u003e\n  File \"/tmp/tmp6jo9s_za/workflow/rules/variant_calling.smk\", line 130, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639690550.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "A RNA-seq workflow.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmplbgwfwrt/workflow/rules/cutadapt.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmplbgwfwrt/workflow/rules/trim.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmplbgwfwrt/workflow/rules/fastqc.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmplbgwfwrt/workflow/rules/hisat2.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmplbgwfwrt/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmplbgwfwrt/workflow/rules/featureCounts.smk\":  Formatted content is different from original\n[INFO] 6 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "zerostwo/rna-seq",
    "latest_release": null,
    "linting": "Lints for snakefile /tmp/tmplbgwfwrt/workflow/rules/featureCounts.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "snakemake",
      "snakemake-workflows",
      "rna-seq"
    ],
    "updated_at": 1639685188.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Create metamers using models of the ventral stream and run experiments to validate them",
    "formatting": "[DEBUG] \n[WARNING] In file \"/tmp/tmpyi4sgrqj/Snakefile\":  Inline-formatted keyword \"configfile\" at line 14 had its comments relocated above it.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[DEBUG] In file \"/tmp/tmpyi4sgrqj/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "billbrod/foveated-metamers",
    "latest_release": null,
    "linting": "ModuleNotFoundError in line 5 of /tmp/tmpyi4sgrqj/Snakefile:\nNo module named \u0027imageio\u0027\n  File \"/tmp/tmpyi4sgrqj/Snakefile\", line 5, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1639678496.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Workflow that processes and annotates ParlaCLARIN corpus files",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpuenuov1t/workflow/rules/extract_speeches.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpuenuov1t/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpuenuov1t/workflow/rules/help.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpuenuov1t/workflow/rules/update_repository.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpuenuov1t/workflow/rules/compute_frequency.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpuenuov1t/workflow/rules/tag_protocols.smk\":  Formatted content is different from original\n[INFO] 6 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "welfare-state-analytics/pyriksprot_tagger",
    "latest_release": null,
    "linting": "ModuleNotFoundError in line 15 of /tmp/tmpuenuov1t/workflow/Snakefile:\nNo module named \u0027loguru\u0027\n  File \"/tmp/tmpuenuov1t/workflow/Snakefile\", line 15, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1639667899.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Workflow for functional annotation of a set of bacterial genomes",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpdqoa_ep4/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "alexmsalmeida/genome-funcs",
    "latest_release": null,
    "linting": "FileNotFoundError in line 14 of /tmp/tmpdqoa_ep4/Snakefile:\n[Errno 2] No such file or directory: \u0027/hps/research/finn/aalmeida/scripts/snakemake/genome-funcs_test/test/input_files.txt\u0027\n  File \"/tmp/tmpdqoa_ep4/Snakefile\", line 14, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639667784.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": null,
    "formatting": "[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] In file \"/tmp/tmpl9ndtnqe/workflow/rules/original.smk\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n[INFO] 2 file(s) would be left unchanged \ud83c\udf89\n\nsnakefmt version: 0.4.4",
    "full_name": "maarten-k/realignment",
    "latest_release": null,
    "linting": "FileNotFoundError in line 21 of /tmp/tmpl9ndtnqe/workflow/Snakefile:\n[Errno 2] No such file or directory: \u0027resources/minitest.list\u0027\n  File \"/tmp/tmpl9ndtnqe/workflow/Snakefile\", line 21, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639599810.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Internal imputation pipeline using snakemake",
    "formatting": "[DEBUG] \n[WARNING] In file \"/tmp/tmpsr1lm1t4/rules/chunker.smk\":  Keyword \"output\" at line 9 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpsr1lm1t4/rules/chunker.smk\":  Keyword \"params\" at line 20 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpsr1lm1t4/rules/chunker.smk\":  Keyword \"output\" at line 35 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpsr1lm1t4/rules/chunker.smk\":  Keyword \"input\" at line 39 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[DEBUG] In file \"/tmp/tmpsr1lm1t4/rules/chunker.smk\":  Formatted content is different from original\n[DEBUG] \n[WARNING] In file \"/tmp/tmpsr1lm1t4/rules/phasing.smk\":  Keyword \"input\" at line 61 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[DEBUG] In file \"/tmp/tmpsr1lm1t4/rules/phasing.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpsr1lm1t4/rules/postproc.smk\":  Formatted content is different from original\n[DEBUG] \n[WARNING] In file \"/tmp/tmpsr1lm1t4/rules/impute_auto.smk\":  Keyword \"input\" at line 11 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[DEBUG] In file \"/tmp/tmpsr1lm1t4/rules/impute_auto.smk\":  Formatted content is different from original\n[DEBUG] \n[ERROR] In file \"/tmp/tmpsr1lm1t4/rules/impute_x.smk\":  \u0027NameError: name \u0027output_folder\u0027 is not defined\u0027\n[DEBUG] In file \"/tmp/tmpsr1lm1t4/rules/impute_x.smk\":  \n[WARNING] In file \"/tmp/tmpsr1lm1t4/Snakefile\":  Keyword \"input\" at line 94 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[DEBUG] In file \"/tmp/tmpsr1lm1t4/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[WARNING] In file \"/tmp/tmpsr1lm1t4/rules/preproc.smk\":  Keyword \"output\" at line 15 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpsr1lm1t4/rules/preproc.smk\":  Keyword \"output\" at line 269 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpsr1lm1t4/rules/preproc.smk\":  Keyword \"output\" at line 364 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpsr1lm1t4/rules/preproc.smk\":  Keyword \"output\" at line 386 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpsr1lm1t4/rules/preproc.smk\":  Keyword \"input\" at line 393 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpsr1lm1t4/rules/preproc.smk\":  Keyword \"input\" at line 459 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[DEBUG] In file \"/tmp/tmpsr1lm1t4/rules/preproc.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpsr1lm1t4/rules/stats.smk\":  Formatted content is different from original\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 7 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "macsx82/ImputationPipeline-snakemake",
    "latest_release": null,
    "linting": "KeyError in line 12 of /tmp/tmpsr1lm1t4/Snakefile:\n\u0027paths\u0027\n  File \"/tmp/tmpsr1lm1t4/Snakefile\", line 12, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639590073.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "circularRNA Detection Annotation Quantification",
    "formatting": "[DEBUG] \n[ERROR] In file \"/tmp/tmpcnzhpavn/CCBR-CCBR_circRNA_DAQ-875bd23/workflow/Snakefile\":  \u0027EmptyContextError: L608: rule has no keywords attached to it.\u0027\n[INFO] In file \"/tmp/tmpcnzhpavn/CCBR-CCBR_circRNA_DAQ-875bd23/workflow/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n\nsnakefmt version: 0.4.4",
    "full_name": "CCBR/CCBR_circRNA_DAQ",
    "latest_release": "v0.6.5",
    "linting": "KeyError in line 86 of /tmp/tmpcnzhpavn/CCBR-CCBR_circRNA_DAQ-875bd23/workflow/Snakefile:\n\u0027workdir\u0027\n  File \"/tmp/tmpcnzhpavn/CCBR-CCBR_circRNA_DAQ-875bd23/workflow/Snakefile\", line 86, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [
      "circrna",
      "circularrna-detection",
      "ngs-analysis",
      "ngs-pipeline"
    ],
    "updated_at": 1639579568.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Collection of rules used to calculate biomarkers like MSI, TMB and HRD.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpnq9b5xth/workflow/rules/common.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpnq9b5xth/workflow/rules/tmb.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpnq9b5xth/workflow/rules/msisensor_pro.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] \n[DEBUG] In file \"/tmp/tmpnq9b5xth/workflow/rules/hrd.smk\":  Formatted content is different from original\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n\nsnakefmt version: 0.4.4",
    "full_name": "hydra-genetics/biomarker",
    "latest_release": null,
    "linting": "ModuleNotFoundError in line 13 of /tmp/tmpnq9b5xth/workflow/rules/common.smk:\nNo module named \u0027hydra_genetics\u0027\n  File \"/tmp/tmpnq9b5xth/workflow/Snakefile\", line 10, in \u003cmodule\u003e\n  File \"/tmp/tmpnq9b5xth/workflow/rules/common.smk\", line 13, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 4,
    "topics": [],
    "updated_at": 1639568657.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": null,
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpv7a8h6qb/workflow/rules/build_site.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpv7a8h6qb/workflow/rules/salmon.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpv7a8h6qb/workflow/rules/reference.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpv7a8h6qb/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpv7a8h6qb/workflow/rules/process_raw.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpv7a8h6qb/workflow/rules/dge.smk\":  Formatted content is different from original\n[INFO] 6 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "steveped/snakemake-salmon",
    "latest_release": null,
    "linting": "Viable git repository detected. Files will be added when created\nKeyError in line 85 of /tmp/tmpv7a8h6qb/workflow/Snakefile:\n\u0027tag\u0027\n  File \"/tmp/tmpv7a8h6qb/workflow/Snakefile\", line 85, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639532487.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "General snakemake pipeline to generate cell matrices for single-cell analysis and .loom files to assess cell development",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmplzvpz9xk/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "nasiegel88/10x-snake",
    "latest_release": null,
    "linting": "Lints for snakefile /tmp/tmplzvpz9xk/Snakefile:\n    * Absolute path \"/{sample}_S{num1}_{seq}_{num2}\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule download_tar (line 40, /tmp/tmplzvpz9xk/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule transcriptome (line 54, /tmp/tmplzvpz9xk/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mask_off (line 84, /tmp/tmplzvpz9xk/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule run_cellranger (line 105, /tmp/tmplzvpz9xk/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable CELL_NUMBER from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639509699.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Pipeline implementing the MERIDA logical modelling method using Snakemake to dispatch hyperparmeter tuning on a Slurm based HPC cluster.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpnk2wzxsc/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "bhklab/MERIDA_snakemake_pipeline",
    "latest_release": null,
    "linting": "FileNotFoundError in line 58 of /tmp/tmpnk2wzxsc/Snakefile:\n[Errno 2] No such file or directory: \u0027/home/ceeles/development/MERIDA_snakemake_pipeline/procdata/CCLE_bimodal_genes.txt\u0027\n  File \"/tmp/tmpnk2wzxsc/Snakefile\", line 58, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 586, in read_csv\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 482, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 811, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 1040, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 51, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/base_parser.py\", line 222, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/common.py\", line 702, in get_handle\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1639504379.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "A simple and entertaining introduction to Snakemake workflows.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpjhqnsulk/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "lisakmalins/Snakespeare",
    "latest_release": null,
    "linting": "Lints for rule count_dialogue_chunks (line 61, /tmp/tmpjhqnsulk/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule count_total_lines (line 82, /tmp/tmpjhqnsulk/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule calculate_chunk_lengths (line 105, /tmp/tmpjhqnsulk/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_dialogue_chunks (line 125, /tmp/tmpjhqnsulk/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_total_lines (line 148, /tmp/tmpjhqnsulk/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_chunk_lengths (line 171, /tmp/tmpjhqnsulk/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule join_metrics (line 194, /tmp/tmpjhqnsulk/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_all_metrics (line 214, /tmp/tmpjhqnsulk/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean (line 236, /tmp/tmpjhqnsulk/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 1,
    "subscribers_count": 0,
    "topics": [
      "snakemake",
      "shakespeare",
      "fun"
    ],
    "updated_at": 1641097383.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": null,
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpj1x_ui9v/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "ys-lim/cryptex-snakemake",
    "latest_release": null,
    "linting": "WorkflowError in line 7 of /tmp/tmpj1x_ui9v/Snakefile:\nWorkflow defines configfile /mnt/cbis/home/yongshan/20211201_cnp_hippocampus_p60_snakemake/config/config.yaml but it is not present or accessible.\n  File \"/tmp/tmpj1x_ui9v/Snakefile\", line 7, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1640101315.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "A meta-repository to organize my public projects.",
    "formatting": "Usage: snakefmt [OPTIONS] [SRC]...\n\nError: Invalid value for \u0027[SRC]...\u0027: Path \u0027/tmp/tmpzeij5lwk/kelly-sovacool-meta-repo-06e35f6/Snakefile\u0027 does not exist.\n\nsnakefmt version: 0.4.4",
    "full_name": "kelly-sovacool/meta-repo",
    "latest_release": "v0.1",
    "linting": "",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639978272.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Annotates sequences with Eggnog-mapper and hhblits against PDB70",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpffcn5wup/rules/get_prot_seqs.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpffcn5wup/rules/clustering.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpffcn5wup/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpffcn5wup/rules/hhblits_to_ko.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpffcn5wup/rules/eggmapper.smk\":  Formatted content is different from original\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "matrs/Annotating_from_PDB",
    "latest_release": null,
    "linting": "Lints for snakefile /tmp/tmpffcn5wup/rules/hhblits_to_ko.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule build_index (line 8, /tmp/tmpffcn5wup/rules/get_prot_seqs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule write_multi_fasta (line 26, /tmp/tmpffcn5wup/rules/get_prot_seqs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule mmseqs_db (line 1, /tmp/tmpffcn5wup/rules/clustering.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mmseqs_clustering (line 33, /tmp/tmpffcn5wup/rules/clustering.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mmseqs_createsubdb (line 81, /tmp/tmpffcn5wup/rules/clustering.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mmseqs_repr_seqs (line 117, /tmp/tmpffcn5wup/rules/clustering.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mmseqs_createtsv (line 149, /tmp/tmpffcn5wup/rules/clustering.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule count_seqs (line 184, /tmp/tmpffcn5wup/rules/clustering.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule eggnog_mapper (line 3, /tmp/tmpffcn5wup/rules/eggmapper.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param out_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule select_no_kos (line 51, /tmp/tmpffcn5wup/rules/eggmapper.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule write_no_ko_seqs (line 74, /tmp/tmpffcn5wup/rules/eggmapper.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule write_subset_seqs (line 98, /tmp/tmpffcn5wup/rules/eggmapper.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule select_by_size (line 146, /tmp/tmpffcn5wup/rules/eggmapper.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule hhblits_msa (line 9, /tmp/tmpffcn5wup/rules/hhblits_to_ko.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule hhblits_pdb (line 48, /tmp/tmpffcn5wup/rules/hhblits_to_ko.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule select_pdbs (line 88, /tmp/tmpffcn5wup/rules/hhblits_to_ko.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule pdb_to_ko (line 117, /tmp/tmpffcn5wup/rules/hhblits_to_ko.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param out_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule propagate_annotations (line 148, /tmp/tmpffcn5wup/rules/hhblits_to_ko.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param out_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule make_ko_list (line 177, /tmp/tmpffcn5wup/rules/hhblits_to_ko.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param out_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule ko_completness (line 209, /tmp/tmpffcn5wup/rules/hhblits_to_ko.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable py_komapper from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param out_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639779762.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Phylogeography of Yersinia pestis.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/functions.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/download.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/filter_mask.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/plot.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/alignment.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/qc.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/metadata.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/phylogeny.smk\":  Formatted content is different from original\n[DEBUG] \n[ERROR] In file \"/tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/targets.smk\":  \u0027SyntaxError: \u003cfunction line_nb at 0x7f75588701f0\u003eNewline expected after keyword \u0027rule locus_coverage_collect_all\u0027\u0027\n[INFO] In file \"/tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/targets.smk\":  1 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/targets.smk\":  9 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "ktmeaton/plague-phylogeography",
    "latest_release": "v0.3.0",
    "linting": "Multiple includes of /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/functions.smk ignored\nMultiple includes of /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/functions.smk ignored\nMultiple includes of /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/functions.smk ignored\nMultiple includes of /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/functions.smk ignored\nLints for snakefile /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/Snakefile:\n    * Absolute path \"/download.smk\" in line 46:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/alignment.smk\" in line 47:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/phylogeny.smk\" in line 48:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/qc.smk\" in line 49:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/filter_mask.smk\" in line 50:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/plot.smk\" in line 51:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/metadata.smk\" in line 52:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/functions.smk\" in line 53:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/targets.smk\" in line 54:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/workflow.rst\" in line 57:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Environment variable SINGULARITY_CACHEDIR used but not asserted with envvars directive in line 70.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable NXF_SINGULARITY_CACHEDIR used but not asserted with envvars directive in line 71.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable SINGULARITY_CACHEDIR used but not asserted with envvars directive in line 73.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable NXF_SINGULARITY_CACHEDIR used but not asserted with envvars directive in line 74.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable CONDA_CACHEDIR used but not asserted with envvars directive in line 77.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable NXF_CONDA_CACHEDIR used but not asserted with envvars directive in line 78.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable CONDA_CACHEDIR used but not asserted with envvars directive in line 80.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable NXF_CONDA_CACHEDIR used but not asserted with envvars directive in line 81.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable LANGUAGE used but not asserted with envvars directive in line 84.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable LANG used but not asserted with envvars directive in line 86.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Environment variable LC_ALL used but not asserted with envvars directive in line 88.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Path composition with \u0027+\u0027 in line 46:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 48:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 50:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 52:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 54:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/download.smk:\n    * Absolute path \"/data/sra/{sample_dir}/{sample}_1.fastq.gz\" in line 15:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/data/sra/{sample_dir}/{sample}.log\" in line 16:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/data/{reads_origin}/{sample}/{sample}.{ext}\" in line 35:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/data/{reads_origin}/{sample}/{sample}.gbff\" in line 61:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/data/{reads_origin}/{sample}/{sample}.bed\" in line 63:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 15:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 16:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 35:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 42:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 61:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/functions.smk:\n    * Absolute path \"/\")[9] + \" in line 19:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\")[9] + \" in line 30:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\")[9] + \" in line 31:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\")[9] + \" in line 51:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\"+ url.split(\" in line 70:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\"+ url.split(\" in line 71:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample_dir}/{sample}\" in line 146:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample_dir}/{sample}\" in line 162:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 32:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 70:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 71:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 130:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 162:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 37:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 70:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/alignment.smk:\n    * Absolute path \"/eager/{reads_origin}/{sample}/final_bams/{sample}.bam\" in line 21:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/eager/{reads_origin}/{sample}/metadata_{sample}.tsv\" in line 22:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/eager/{reads_origin}/{sample}/{sample}.html\" in line 23:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/eager/{reads_origin}/{sample}/{sample}.log\" in line 24:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{dir}/{{reads_origin}}/{{sample}}/{filename}\" in line 71:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/data/reference/{reference}/{reference}.gbff\" in line 74:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.tab\" in line 77:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.txt\" in line 78:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.aligned.fa\" in line 79:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.subs.vcf\" in line 80:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.raw.vcf\" in line 81:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.log\" in line 82:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/detect_snp_density_collect/{{reads_origin}}/snpden{density}.bed\" in line 131:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/snippy-multi.txt\" in line 134:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/snippy-multi.aln\" in line 135:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/snippy-multi.full.aln\" in line 136:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/snippy-multi.log\" in line 137:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 16:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 22:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 23:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 24:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 71:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 73:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 74:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 76:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 78:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 79:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 80:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 81:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 82:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 128:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 134:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 135:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 136:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 137:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/phylogeny.smk:\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/full/snippy-multi.constant_sites.txt\" in line 11:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/snippy-multi.snps.aln\" in line 12:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/iqtree.treefile\" in line 14:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/iqtree.nex\" in line 15:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/iqtree.iqtree\" in line 16:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/iqtree.log\" in line 17:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/iqtree.filter-taxa.txt\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/iqtree\" in line 22:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/snippy-multi.snps.aln\" in line 55:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/metadata/{reads_origin}/metadata.tsv\" in line 56:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/iqtree.treefile\" in line 57:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/iqtree.filter-taxa.txt\" in line 58:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/filter-taxa/snippy-multi.snps.aln\" in line 60:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/filter-taxa/metadata.tsv\" in line 61:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/filter-taxa/iqtree.treefile\" in line 62:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/filter-sites/snippy-multi.snps.aln\" in line 63:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/filter-sites/snippy-multi.snps.log\" in line 64:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/filter-taxa/iqtree.treefile\" in line 90:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/filter-taxa/metadata.tsv\" in line 91:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/variant_qc/{reads_origin}/{locus_name}/variant_qc.txt\" in line 92:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/filter-taxa/temporal_constraints.txt\" in line 94:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/filter-taxa/processed_iqtree_stats.py.ipynb\" in line 96:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/metadata/{reads_origin}/metadata.tsv\" in line 105:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/iqtree.treefile\" in line 106:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/snippy-multi.snps.aln\" in line 107:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/full/snippy-multi.constant_sites.txt\" in line 108:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree_stats/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/temporal_constraints.txt\" in line 109:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lsd/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/lsd.timetree.nex\" in line 111:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lsd/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/lsd.timetree.nwk\" in line 112:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lsd/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/lsd.dates.txt\" in line 113:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lsd/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/lsd.outgroups.txt\" in line 114:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lsd/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/lsd.log\" in line 115:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lsd/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/lsd.filter-taxa.txt\" in line 116:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lsd/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/lsd\" in line 119:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/filter-taxa/metadata.tsv\" in line 163:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/filter-sites/snippy-multi.snps.aln\" in line 164:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/beast/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/beast.latlon.txt\" in line 166:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/beast/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/beast.dates.txt\" in line 167:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/beast/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/beast.fasta\" in line 168:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/beast/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/beast.nex\" in line 169:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree_stats/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/metadata.tsv\" in line 188:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/filter-taxa/iqtree.treefile\" in line 189:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mugration/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/metadata.tsv\" in line 191:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/^$/d\" in line 214:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lsd/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/lsd.timetree.nex\" in line 228:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/filter-taxa/iqtree.treefile\" in line 229:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mugration/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/metadata.tsv\" in line 230:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/auspice/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/all.json\" in line 232:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/auspice/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/processed_auspice.ipynb\" in line 234:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 11:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 12:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 14:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 15:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 16:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 17:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 22:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 55:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 56:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 57:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 58:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 60:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 61:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 62:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 64:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 66:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 90:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 91:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 92:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 94:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 96:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 105:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 106:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 107:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 108:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 109:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 111:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 112:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 113:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 114:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 115:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 116:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 119:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 163:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 164:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 166:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 167:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 168:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 169:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 188:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 189:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 191:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 194:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 228:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 229:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 230:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 232:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 234:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/qc.smk:\n    * Absolute path \"/qualimap/{reads_origin}/{sample}/{sample}.bam\" in line 13:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/qualimap/{reads_origin}/{sample}/qualimapReport.html\" in line 14:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/qualimap/{reads_origin}/{sample}/{sample}.log\" in line 15:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/multiqc.yaml\" in line 38:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/snippy-multi.txt\" in line 43:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/multiqc/{reads_origin}/multiqc_report.html\" in line 47:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/multiqc/{reads_origin}/multiqc_plots/pdf/mqc_snippy_variants_1.pdf\" in line 48:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/multiqc/{reads_origin}/multiqc_plots/pdf/mqc_qualimap_gc_content_1.pdf\" in line 49:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/multiqc/{reads_origin}/multiqc_plots/pdf/mqc_qualimap_genome_fraction_1.pdf\" in line 50:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/multiqc/{reads_origin}/multiqc_plots/pdf/mqc_qualimap_coverage_histogram_1.pdf\" in line 51:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/multiqc/{reads_origin}/multiqc.log\" in line 53:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/qualimap/{reads_origin}/{sample}/{sample}.bam\" in line 81:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/locus_coverage/{reads_origin}/{sample}/locus_coverage_full.txt\" in line 84:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/locus_coverage/{reads_origin}/{sample}/locus_coverage.txt\" in line 85:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/locus_coverage/{reads_origin}/{sample}/locus_depth_full.txt\" in line 86:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/locus_coverage/{reads_origin}/{sample}/locus_depth.txt\" in line 87:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/locus_coverage.txt\" in line 104:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/locus_depth.txt\" in line 106:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/locus_coverage_collect/{reads_origin}/locus_coverage.txt\" in line 109:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/locus_coverage_collect/{reads_origin}/locus_depth.txt\" in line 110:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.tab\" in line 124:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/dnds/{reads_origin}/{locus_name}/{sample}.txt\" in line 126:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.subs.vcf\" in line 139:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/tstv/{reads_origin}/{locus_name}/{sample}.vcf\" in line 141:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/tstv/{reads_origin}/{locus_name}/{sample}.txt\" in line 142:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.subs.vcf\" in line 162:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.raw.vcf\" in line 163:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/heterozygosity/{reads_origin}/{locus_name}/{sample}.txt\" in line 165:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/variant_qc/{reads_origin}/{locus_name}/singletons.txt\" in line 185:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/variant_qc/{reads_origin}/{locus_name}/variant_qc.txt\" in line 218:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 10:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 13:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 14:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 15:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 38:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 43:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 47:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 48:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 49:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 50:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 51:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 52:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 81:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 82:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 85:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 86:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 87:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 109:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 110:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 124:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 126:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 139:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 141:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 142:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 162:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 163:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 165:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 185:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 218:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/filter_mask.smk:\n    * Absolute path \"/data/{reads_origin}/{sample}/{sample}.fna\" in line 12:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/detect_repeats/{reads_origin}/{sample}.inexact.repeats.bed\" in line 14:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/detect_repeats/{reads_origin}/{sample}.log\" in line 15:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/data/{reads_origin}/{sample}/{sample}.fna\" in line 33:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/detect_low_complexity/{reads_origin}/{sample}.dustmasker.bed\" in line 35:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/detect_low_complexity/{reads_origin}/{sample}.dustmasker.intervals\" in line 36:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_pairwise/{reads_origin}/{sample}/{sample}.subs.vcf\" in line 51:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/detect_snp_density/{{reads_origin}}/{{sample}}.subs.snpden{density}\" in line 53:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/detect_snp_density/{reads_origin}/{sample}.log\" in line 55:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/detect_snp_density_collect/{{reads_origin}}/snpden{density}.bed\" in line 72:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/snippy-multi.full.aln\" in line 88:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/metadata/{reads_origin}/metadata.tsv\" in line 89:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/full/snippy-multi.full.aln\" in line 91:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/full/snippy-multi.snps.aln\" in line 92:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/full/snippy-multi.constant_sites.txt\" in line 93:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/full/metadata.tsv\" in line 94:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/full/snippy-multi.snps.aln\" in line 118:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/metadata/{reads_origin}/metadata.tsv\" in line 119:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/full/snippy-multi.snps.dist\" in line 120:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/prune/snippy-multi.snps.aln\" in line 122:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/prune/taxa-keep.txt\" in line 123:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/prune/metadata.tsv\" in line 124:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/prune/snippy-multi.snps.log\" in line 125:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/{prune}/snippy-multi.snps.aln\" in line 152:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/{prune}/metadata.tsv\" in line 153:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/snippy-multi.snps.aln\" in line 155:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/{prune}/filter{missing_data}/snippy-multi.snps.log\" in line 156:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 12:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 14:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 15:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 33:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 35:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 36:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 51:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 53:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 55:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 72:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 88:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 89:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 91:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 92:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 93:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 94:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 98:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 118:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 119:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 120:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 122:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 123:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 124:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 125:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 129:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 152:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 153:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 155:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 156:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 8:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/plot.smk:\n    * Absolute path \"/snippy_multi/{{reads_origin}}/{{locus_name}}/{{prune}}/filter{missing_data}/snippy-multi.snps.log\" in line 6:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/{prune}/snippy-multi.snps.missing-data.html\" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/{prune}/processed_{locus_name}_plot_missing_data.py.ipynb\" in line 12:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/{prune}/snippy-multi.snps.aln\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/{prune}/snippy-multi.snps.dist\" in line 20:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/{reads_origin}/{locus_name}/{prune}/snippy-multi.snps.dist.heatmap.html\" in line 21:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 10:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 12:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 20:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/metadata.smk:\n    * Absolute path \"/metadata/{reads_origin}/metadata.tsv\" in line 9:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 9:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/targets.smk:\n    * Absolute path \"/locus_coverage_collect/all/locus_coverage.txt\" in line 72:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/variant_qc/all/{locus_name}/singletons.txt\" in line 89:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/variant_qc/all/{locus_name}/variant_qc.txt\" in line 107:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/detect_snp_density_collect/assembly/snpden\" in line 160:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/detect_snp_density_collect/sra/snpden\" in line 164:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/detect_snp_density_collect/local/snpden\" in line 168:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/detect_snp_density_collect/all/snpden\" in line 172:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/all/{locus_name}/full/snippy-multi.full.aln\" in line 175:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/all/{locus_name}/prune/snippy-multi.snps.aln\" in line 195:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/all/{locus_name}/full/filter{missing_data}/snippy-multi.snps.aln\" in line 203:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/all/{locus_name}/prune/filter{missing_data}/snippy-multi.snps.aln\" in line 226:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/qualimap/assembly/{sample}/qualimapReport.html\" in line 237:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/qualimap/sra/{sample}/qualimapReport.html\" in line 242:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/qualimap/local/{sample}/qualimapReport.html\" in line 247:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/multiqc/all/multiqc_report.html\" in line 253:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/assembly/snippy-multi.full.aln\" in line 280:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/sra/snippy-multi.full.aln\" in line 284:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/local/snippy-multi.full.aln\" in line 288:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/all/snippy-multi.full.aln\" in line 292:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/all/{locus_name}/full/filter{missing_data}/iqtree.treefile\" in line 297:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/all/{locus_name}/prune/filter{missing_data}/iqtree.treefile\" in line 320:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/all/{locus_name}/full/filter{missing_data}/filter-sites/snippy-multi.snps.aln\" in line 329:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/all/{locus_name}/prune/filter{missing_data}/filter-sites/snippy-multi.snps.aln\" in line 336:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/all/{locus_name}/full/filter{missing_data}/filter-taxa/temporal_constraints.txt\" in line 344:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/iqtree/all/{locus_name}/prune/filter{missing_data}/filter-taxa/temporal_constraints.txt\" in line 351:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lsd/all/{locus_name}/full/filter{missing_data}/lsd.timetree.nex\" in line 359:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lsd/all/{locus_name}/prune/filter{missing_data}/lsd.timetree.nex\" in line 366:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/beast/all/{locus_name}/full/filter{missing_data}/beast.dates.txt\" in line 375:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/beast/all/{locus_name}/prune/filter{missing_data}/beast.dates.txt\" in line 382:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mugration/all/{locus_name}/full/filter{missing_data}/metadata.tsv\" in line 391:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mugration/all/{locus_name}/prune/filter{missing_data}/metadata.tsv\" in line 398:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/auspice/all/{locus_name}/full/filter{missing_data}/all.json\" in line 406:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/auspice/all/{locus_name}/prune/filter{missing_data}/all.json\" in line 413:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/all/{locus_name}/full/snippy-multi.snps.missing-data.html\" in line 423:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/snippy_multi/all/{locus_name}/full/filter{missing_data}/snippy-multi.snps.dist.heatmap.html\" in line 448:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/metadata/all/metadata.tsv\" in line 477:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 9:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 54:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 160:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 164:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 168:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 172:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 175:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 195:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 203:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 226:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 237:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 242:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 247:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 253:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 280:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 284:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 288:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 292:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 297:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 320:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 329:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 336:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 344:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 351:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 359:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 366:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 375:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 382:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 391:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 398:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 406:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 413:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 423:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 448:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 477:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 9:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 144:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 160:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 164:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 168:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule download_sra (line 10, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/download.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable project_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable results_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule download_assembly (line 50, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/download.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule locus_bed (line 102, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/download.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule eager (line 11, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/alignment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable results_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable results_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule snippy_pairwise (line 115, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/alignment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule snippy_multi (line 212, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/alignment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable results_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable results_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable results_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule iqtree (line 6, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/phylogeny.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule iqtree_filter (line 81, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/phylogeny.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule iqtree_stats (line 144, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/phylogeny.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule lsd (line 185, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/phylogeny.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule beast (line 291, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/phylogeny.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule mugration (line 337, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/phylogeny.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule auspice (line 416, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/phylogeny.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qualimap (line 5, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule multiqc (line 53, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule locus_coverage (line 125, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule locus_coverage_collect (line 168, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dnds (line 205, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule tstv (line 236, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule heterozygosity (line 282, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule singletons (line 314, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule variant_qc (line 351, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule detect_repeats (line 7, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/filter_mask.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable results_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule detect_low_complexity (line 48, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/filter_mask.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule detect_snp_density (line 83, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/filter_mask.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule detect_snp_density_collect (line 117, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/filter_mask.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule snippy_multi_extract (line 152, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/filter_mask.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule snippy_multi_prune (line 208, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/filter_mask.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule snippy_multi_filter (line 271, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/filter_mask.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule plot_missing_data (line 5, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/plot.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_snp_matrix (line 42, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/plot.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule metadata (line 5, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/rules/metadata.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable scripts_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule help (line 156, /tmp/tmpfomx02nu/ktmeaton-plague-phylogeography-3b8f53b/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [
      "phylogeography",
      "plagues"
    ],
    "updated_at": 1639760861.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "TimeAdapt makes a joint inference of demography and selection from longitudinal population genomic data. The inference is based on approximate Bayesian computation via random forest. It takes whole genome data and information about the ages of samples to perform simulations (using SLiM + pyslim/msprime).",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpqbjs3rh9/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "mnavascues/ABC_TimeAdapt",
    "latest_release": null,
    "linting": "Lints for snakefile /tmp/tmpqbjs3rh9/Snakefile:\n    * Path composition with \u0027+\u0027 in line 25:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule reftable_batch (line 89, /tmp/tmpqbjs3rh9/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mutsim (line 129, /tmp/tmpqbjs3rh9/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable python_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule forwsim (line 158, /tmp/tmpqbjs3rh9/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule coalsim (line 187, /tmp/tmpqbjs3rh9/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable python_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule getparams_batch (line 229, /tmp/tmpqbjs3rh9/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule setproject (line 259, /tmp/tmpqbjs3rh9/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean_project (line 285, /tmp/tmpqbjs3rh9/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean (line 298, /tmp/tmpqbjs3rh9/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule test (line 309, /tmp/tmpqbjs3rh9/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639661381.0
  },
  {
    "config_readme": "\u003cp\u003eDescribe how to configure the workflow (using config.yaml and maybe additional files).\nAll of them need to be present with example entries inside of the config folder.\u003c/p\u003e\n",
    "data_format": 2,
    "description": "Snakemake workflow for converting FASTQ files to self-contained CRAM files with maximum lossless compression.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpgvk7nstl/workflow/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "koesterlab/ngs-fastq-to-cram",
    "latest_release": null,
    "linting": null,
    "mandatory_flags": {
      "desc": null,
      "flags": null
    },
    "report": true,
    "software_stack_deployment": {
      "conda": true,
      "singularity": false,
      "singularity+conda": false
    },
    "standardized": true,
    "stargazers_count": 1,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1639684216.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": null,
    "formatting": null,
    "full_name": "williamrowell/hifi-deepvariant-snakemake",
    "latest_release": null,
    "linting": "WorkflowError in line 5 of /tmp/tmpfyftf_h_/Snakefile:\nWorkflow defines configfile workflow/config.yaml but it is not present or accessible.\n  File \"/tmp/tmpfyftf_h_/Snakefile\", line 5, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639629251.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": null,
    "formatting": "[DEBUG] \n[WARNING] In file \"/tmp/tmp8qhq4msl/Snakefile\":  Keyword \"input\" at line 87 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[DEBUG] In file \"/tmp/tmp8qhq4msl/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "AlthafSinghawansaUHN/cfmedipseq_pipeline",
    "latest_release": null,
    "linting": "FileNotFoundError in line 16 of /tmp/tmp8qhq4msl/Snakefile:\n[Errno 2] No such file or directory: \u0027/cluster/projects/scottgroup/people/althaf/pipelines/cfmedipseq_pipeline/input/cohorts/samplesheet_Justin_HN_Norm_cfDNA_PBL.csv\u0027\n  File \"/tmp/tmp8qhq4msl/Snakefile\", line 53, in \u003cmodule\u003e\n  File \"/tmp/tmp8qhq4msl/Snakefile\", line 40, in get_all_samples_list\n  File \"/tmp/tmp8qhq4msl/Snakefile\", line 31, in get_all_samples\n  File \"/tmp/tmp8qhq4msl/Snakefile\", line 32, in \u003clistcomp\u003e\n  File \"/tmp/tmp8qhq4msl/Snakefile\", line 16, in get_cohort_data\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 586, in read_csv\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 482, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 811, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 1040, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 51, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/base_parser.py\", line 222, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/common.py\", line 702, in get_handle\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639592497.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": null,
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpfgg1uvu3/workflow/rules/jobs.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfgg1uvu3/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfgg1uvu3/workflow/rules/fastqc.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfgg1uvu3/workflow/rules/trimmomatic.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfgg1uvu3/workflow/rules/r.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfgg1uvu3/workflow/rules/star.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfgg1uvu3/workflow/rules/multiqc.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfgg1uvu3/workflow/rules/picard.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpfgg1uvu3/workflow/rules/featurecounts.smk\":  Formatted content is different from original\n[INFO] 9 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "cyouh95/mRNA_seq_pipeline",
    "latest_release": null,
    "linting": "WorkflowError in line 3 of /tmp/tmpfgg1uvu3/workflow/Snakefile:\nWorkflow defines configfile config/config.yaml but it is not present or accessible.\n  File \"/tmp/tmpfgg1uvu3/workflow/Snakefile\", line 3, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1640278608.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "demo of Papermill running on NeSI",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmppxn0zfvq/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "nesi/papermill_demo",
    "latest_release": null,
    "linting": "Lints for rule preprocessing (line 16, /tmp/tmppxn0zfvq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable kernel from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule model_fitting (line 39, /tmp/tmppxn0zfvq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable kernel from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 1,
    "subscribers_count": 6,
    "topics": [],
    "updated_at": 1639514687.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Having fun plotting my activity data from Strava!",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpe9dktjdv/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "kelly-sovacool/strava",
    "latest_release": null,
    "linting": "Lints for rule download (line 27, /tmp/tmpe9dktjdv/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule process (line 46, /tmp/tmpe9dktjdv/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_activities (line 67, /tmp/tmpe9dktjdv/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_summary (line 96, /tmp/tmpe9dktjdv/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule render_report (line 117, /tmp/tmpe9dktjdv/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cat_figures_readme (line 139, /tmp/tmpe9dktjdv/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1641145043.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Snakemake workflow for Illumina RNA-sequencing experiments, including variant calling and more - relating to population genetics and insecticide resistance",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpk1sca9xn/sanjaynagi-rna-seq-pop-c64f36e/workflow/rules/variantAnalysis.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpk1sca9xn/sanjaynagi-rna-seq-pop-c64f36e/workflow/rules/variantCalling.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpk1sca9xn/sanjaynagi-rna-seq-pop-c64f36e/workflow/rules/common.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpk1sca9xn/sanjaynagi-rna-seq-pop-c64f36e/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpk1sca9xn/sanjaynagi-rna-seq-pop-c64f36e/workflow/rules/lncrna.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] \n[DEBUG] In file \"/tmp/tmpk1sca9xn/sanjaynagi-rna-seq-pop-c64f36e/workflow/rules/diff.smk\":  Formatted content is different from original\n[INFO] 6 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n\nsnakefmt version: 0.4.4",
    "full_name": "sanjaynagi/rna-seq-pop",
    "latest_release": "v0.7.0",
    "linting": "WorkflowError in line 13 of /tmp/tmpk1sca9xn/sanjaynagi-rna-seq-pop-c64f36e/workflow/Snakefile:\nWorkflow defines configfile config/config.yaml but it is not present or accessible.\n  File \"/tmp/tmpk1sca9xn/sanjaynagi-rna-seq-pop-c64f36e/workflow/Snakefile\", line 13, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [
      "snakemake-workflow",
      "rna-seq",
      "variant-calling",
      "differential-expression",
      "population-genomics",
      "snakemake",
      "transcriptomics",
      "workflow",
      "population-genetics",
      "selection",
      "karyotype",
      "ancestry"
    ],
    "updated_at": 1640441367.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "An experiment to determine the relationship between spatial frequency and eccentricity in the human early visual cortex.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpglbtfp0g/billbrod-spatial-frequency-preferences-4a83fe2/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "billbrod/spatial-frequency-preferences",
    "latest_release": "v1.0.3",
    "linting": "ModuleNotFoundError in line 6 of /tmp/tmpglbtfp0g/billbrod-spatial-frequency-preferences-4a83fe2/Snakefile:\nNo module named \u0027neuropythy\u0027\n  File \"/tmp/tmpglbtfp0g/billbrod-spatial-frequency-preferences-4a83fe2/Snakefile\", line 6, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1640106242.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "a snakemake workflow for reproducible metabarcoding",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpra34k8o7/workflow/rules/lca.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpra34k8o7/workflow/rules/blast.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpra34k8o7/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpra34k8o7/workflow/rules/reports.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpra34k8o7/workflow/rules/vsearch.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpra34k8o7/workflow/rules/qc.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpra34k8o7/workflow/rules/kraken2.smk\":  Formatted content is different from original\n[INFO] 7 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "EvoHull/Tapirs",
    "latest_release": null,
    "linting": "Lints for snakefile /tmp/tmpra34k8o7/workflow/Snakefile:\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 36:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpra34k8o7/workflow/rules/qc.smk:\n    * Absolute path \"/{LIBRARIES}/{SAMPLES}.R1.fastq.gz\" in line 11:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{LIBRARIES}/{SAMPLES}.R2.fastq.gz\" in line 12:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmpra34k8o7/workflow/rules/lca.smk:\n    * Path composition with \u0027+\u0027 in line 11:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpra34k8o7/workflow/rules/blast.smk:\n    * Absolute path \"/names.dmp\" in line 34:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmpra34k8o7/workflow/rules/kraken2.smk:\n    * Absolute path \"/names.dmp\" in line 32:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 11:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule fastp_trim_reads (line 9, /tmp/tmpra34k8o7/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule fastp_merge_reads (line 91, /tmp/tmpra34k8o7/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule merge_forward_reads (line 151, /tmp/tmpra34k8o7/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule seqkit_fq2fa (line 176, /tmp/tmpra34k8o7/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mlca (line 9, /tmp/tmpra34k8o7/workflow/rules/lca.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mlca_to_tsv (line 40, /tmp/tmpra34k8o7/workflow/rules/lca.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule vsearch_dereplicate (line 10, /tmp/tmpra34k8o7/workflow/rules/vsearch.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule vsearch_cluster (line 46, /tmp/tmpra34k8o7/workflow/rules/vsearch.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule vsearch_denoise (line 86, /tmp/tmpra34k8o7/workflow/rules/vsearch.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule vsearch_uchime3_denovo (line 166, /tmp/tmpra34k8o7/workflow/rules/vsearch.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule vsearch_rereplicate (line 202, /tmp/tmpra34k8o7/workflow/rules/vsearch.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule blast (line 9, /tmp/tmpra34k8o7/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule taxonomy_to_blast (line 53, /tmp/tmpra34k8o7/workflow/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param taxdump is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule kraken2 (line 9, /tmp/tmpra34k8o7/workflow/rules/kraken2.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule taxonomy_to_kraken2 (line 37, /tmp/tmpra34k8o7/workflow/rules/kraken2.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param taxdump is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule kraken2_to_tsv (line 65, /tmp/tmpra34k8o7/workflow/rules/kraken2.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 2,
    "subscribers_count": 4,
    "topics": [],
    "updated_at": 1639748612.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "The manuscript accompanying the OptiFit algorithm in mothur",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmp5xlnucue/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "SchlossLab/Sovacool_OptiFit_mSphere_2022",
    "latest_release": null,
    "linting": "Lints for rule summarize_results (line 84, /tmp/tmp5xlnucue/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule calc_results_stats (line 109, /tmp/tmp5xlnucue/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_algorithm (line 130, /tmp/tmp5xlnucue/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_workflow (line 153, /tmp/tmp5xlnucue/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_results_sum (line 187, /tmp/tmp5xlnucue/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_results_split (line 211, /tmp/tmp5xlnucue/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule render_markdown (line 235, /tmp/tmp5xlnucue/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule render_pdf (line 268, /tmp/tmp5xlnucue/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule count_words_abstract (line 293, /tmp/tmp5xlnucue/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule create_test_data (line 313, /tmp/tmp5xlnucue/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule test_R_code (line 334, /tmp/tmp5xlnucue/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule test_Python_code (line 350, /tmp/tmp5xlnucue/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 2,
    "subscribers_count": 3,
    "topics": [
      "mothur",
      "snakemake",
      "microbiome",
      "reproducible-paper"
    ],
    "updated_at": 1639691798.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Method to detect 3\u0027UTR changes from scRNA-seq",
    "formatting": "Usage: snakefmt [OPTIONS] [SRC]...\n\nError: Invalid value for \u0027[SRC]...\u0027: Path \u0027/tmp/tmp4p_vbvpa/zavolanlab-SCUREL-5671e4d/workflow/Snakefile\u0027 does not exist.\n\nsnakefmt version: 0.4.4",
    "full_name": "zavolanlab/SCUREL",
    "latest_release": "v1.0.0",
    "linting": "KeyError in line 20 of /tmp/tmp4p_vbvpa/zavolanlab-SCUREL-5671e4d/Snakefile:\n\u0027defsamples\u0027\n  File \"/tmp/tmp4p_vbvpa/zavolanlab-SCUREL-5671e4d/Snakefile\", line 20, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 2,
    "subscribers_count": 5,
    "topics": [
      "scrnaseq",
      "bioinformatics",
      "snakemake-workflow"
    ],
    "updated_at": 1639673687.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Bioinformatics pipeline for the analysis of amplicon sequencing data of eDNA samples from the PacMAN project",
    "formatting": "[DEBUG] \n[WARNING] In file \"/tmp/tmpby5ykgph/workflow/Snakefile\":  Keyword \"shell\" at line 135 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpby5ykgph/workflow/Snakefile\":  Keyword \"output\" at line 182 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpby5ykgph/workflow/Snakefile\":  Keyword \"input\" at line 240 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpby5ykgph/workflow/Snakefile\":  Keyword \"output\" at line 248 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpby5ykgph/workflow/Snakefile\":  Keyword \"input\" at line 291 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpby5ykgph/workflow/Snakefile\":  Keyword \"input\" at line 460 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[DEBUG] In file \"/tmp/tmpby5ykgph/workflow/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "iobis/PacMAN-pipeline",
    "latest_release": null,
    "linting": "ValueError in line 13 of /tmp/tmpby5ykgph/workflow/Snakefile:\n\u0027--configfiles\u0027 is not in list\n  File \"/tmp/tmpby5ykgph/workflow/Snakefile\", line 13, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 2,
    "subscribers_count": 4,
    "topics": [],
    "updated_at": 1639657930.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "RNA Biology Pipeline to Characterize protein-RNA Interactions",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpx9p400v4/RBL-NCI-iCLIP-a6df4e3/workflow/rules/common.smk\":  Formatted content is different from original\n[DEBUG] \n[WARNING] In file \"/tmp/tmpx9p400v4/RBL-NCI-iCLIP-a6df4e3/workflow/Snakefile\":  Keyword \"input\" at line 473 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[DEBUG] In file \"/tmp/tmpx9p400v4/RBL-NCI-iCLIP-a6df4e3/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[INFO] 2 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n\nsnakefmt version: 0.4.4",
    "full_name": "RBL-NCI/iCLIP",
    "latest_release": "v1.0",
    "linting": "KeyError in line 30 of /tmp/tmpx9p400v4/RBL-NCI-iCLIP-a6df4e3/workflow/Snakefile:\n\u0027sourceDir\u0027\n  File \"/tmp/tmpx9p400v4/RBL-NCI-iCLIP-a6df4e3/workflow/Snakefile\", line 30, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 3,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1640718296.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Bitextor Neural generates translation memories from multilingual websites using state-of-the-art Machine Learning tools",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpsnhq3ftb/bitextor-bitextor-neural-f52f99b/workflow/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "bitextor/bitextor-neural",
    "latest_release": "v1.0",
    "linting": "ModuleNotFoundError in line 6 of /tmp/tmpsnhq3ftb/bitextor-bitextor-neural-f52f99b/workflow/Snakefile:\nNo module named \u0027bitextor\u0027\n  File \"/tmp/tmpsnhq3ftb/bitextor-bitextor-neural-f52f99b/workflow/Snakefile\", line 6, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 3,
    "subscribers_count": 7,
    "topics": [],
    "updated_at": 1639475451.0
  },
  {
    "config_readme": "\u003cp\u003eIn the config.yaml file you can find the parameters and options specified for each of the rules of mapache. These can be changed depending on specific needs.\u003c/p\u003e\n",
    "data_format": 2,
    "description": "mapping pipeline for ancient DNA",
    "formatting": null,
    "full_name": "sneuensc/mapache",
    "latest_release": "v0.1.0",
    "linting": "",
    "mandatory_flags": null,
    "report": true,
    "software_stack_deployment": {
      "conda": true
    },
    "standardized": true,
    "stargazers_count": 5,
    "subscribers_count": 4,
    "topics": [
      "adna",
      "ancient-dna",
      "genomics",
      "mapping",
      "mapper",
      "pipeline",
      "workflow",
      "snakemake",
      "fastq",
      "bam"
    ],
    "updated_at": 1640765302.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Characterizing the neurogenomics of parental care in the rock dove",
    "formatting": "Usage: snakefmt [OPTIONS] [SRC]...\n\nError: Invalid value for \u0027[SRC]...\u0027: Path \u0027/tmp/tmpaj90td21/macmanes-lab-DoveParentsRNAseq-976ef9c/Snakefile\u0027 does not exist.\n\nsnakefmt version: 0.4.4",
    "full_name": "macmanes-lab/DoveParentsRNAseq",
    "latest_release": "v0.3",
    "linting": "",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 5,
    "subscribers_count": 4,
    "topics": [],
    "updated_at": 1640743348.0
  },
  {
    "config_readme": "\u003ch1\u003e\n\u003ca id=\"user-content-general-settings\" class=\"anchor\" href=\"#general-settings\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eGeneral settings\u003c/h1\u003e\n\u003cp\u003eTo configure this workflow, modify \u003ccode\u003econfig/config.yaml\u003c/code\u003e according to your\nneeds, following the explanations provided in the file.\u003c/p\u003e\n\u003ch2\u003e\n\u003ca id=\"user-content-sample-sheet\" class=\"anchor\" href=\"#sample-sheet\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eSample sheet\u003c/h2\u003e\n\u003cp\u003eThe sample sheet contains all samples to be analyzed by UnCoVar.\u003c/p\u003e\n\u003ch2\u003e\n\u003ca id=\"user-content-auto-filling\" class=\"anchor\" href=\"#auto-filling\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eAuto filling\u003c/h2\u003e\n\u003cp\u003eUnCoVar offers the possibility to automatically append samples to the sample\nsheet. To load your data into the workflow execute\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003esnakemake --cores all --use-conda update_sample\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ewith the root of the UnCoVar as working directory. It is recommended to use\nthe following structure to when adding data automatically:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u251c\u2500\u2500 archive\n\u251c\u2500\u2500 incoming\n\u2514\u2500\u2500 snakemake-workflow-sars-cov2\n    \u251c\u2500\u2500 data\n    \u2514\u2500\u2500 ...\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eHowever, this structure is not set in stone and can be adjusted via the\n\u003ccode\u003econfig/config.yaml\u003c/code\u003e file under \u003ccode\u003edata-handling\u003c/code\u003e. Only the following path to the\ncorresponding folders, relative to the directory of UnCoVar are needed:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eincoming\u003c/strong\u003e: path of incoming data, which is moved to the data directory by\nthe preprocessing script. Defaults to \u003ccode\u003e../incoming/\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003edata\u003c/strong\u003e: path to store data within the workflow. defaults to \u003ccode\u003edata/\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003earchive\u003c/strong\u003e: path to archive data from the results from the analysis to.\nDefaults to \u003ccode\u003e../archive/\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe incoming directory should contain paired end reads in (compressed) FASTQ\nformat. UnCoVar automatically copies your data into the data directory and moves\nall files from incoming directory to the archive. After the analysis, all results\nare compressed and saved alongside the reads.\u003c/p\u003e\n\u003cp\u003eMoreover, the sample sheet is automatically updated with the new files. Please\nnote, that only the part of the filename before the first \u0027_\u0027 character is used\nas the sample name within the workflow.\u003c/p\u003e\n\u003ch2\u003e\n\u003ca id=\"user-content-manual-filling\" class=\"anchor\" href=\"#manual-filling\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eManual filling\u003c/h2\u003e\n\u003cp\u003eOf course, samples to be analyzed can also be added manually to the sample sheet.\nFor each sample, the a new line in \u003ccode\u003econfig/pep/samples.csv\u003c/code\u003e with the following\ncontent has to be defined:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003esample_name\u003c/strong\u003e: name or identifier of sample\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003efq1\u003c/strong\u003e: path to read 1 in FASTQ format\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003efq2\u003c/strong\u003e: path to read 2 in FASTQ format\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003edate\u003c/strong\u003e: sampling date of the sample\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eis_amplicon_data\u003c/strong\u003e: indicates whether the data was generated with a\nshotgun (0) or amplicon (1) sequencing\u003c/li\u003e\n\u003c/ul\u003e\n",
    "data_format": 2,
    "description": "Transparent and robust SARS-CoV-2 variant calling and lineage assignment with comprehensive reporting.",
    "formatting": null,
    "full_name": "IKIM-Essen/uncovar",
    "latest_release": "v0.12.0",
    "linting": null,
    "mandatory_flags": null,
    "report": false,
    "software_stack_deployment": {
      "conda": true
    },
    "standardized": true,
    "stargazers_count": 5,
    "subscribers_count": 3,
    "topics": [
      "sars-cov-2",
      "variant-calling",
      "lineage-assignment"
    ],
    "updated_at": 1640340418.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "snakemake pipeline for Hi-C post-processing",
    "formatting": "[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] In file \"/tmp/tmpxf668437/open2c-quaich-f49263e/workflow/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n[INFO] 2 file(s) would be left unchanged \ud83c\udf89\n\nsnakefmt version: 0.4.4",
    "full_name": "open2c/quaich",
    "latest_release": "v0.1.2",
    "linting": "ModuleNotFoundError in line 5 of /tmp/tmpxf668437/open2c-quaich-f49263e/workflow/Snakefile:\nNo module named \u0027cooler\u0027\n  File \"/tmp/tmpxf668437/open2c-quaich-f49263e/workflow/Snakefile\", line 5, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 5,
    "subscribers_count": 2,
    "topics": [
      "workflow",
      "snakemake",
      "analysis",
      "hi-c"
    ],
    "updated_at": 1639588861.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Snakemake workflow for highly parallel variant calling designed for ease-of-use in non-model organisms.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpzgih2hmg/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpzgih2hmg/workflow/rules/callable_sites.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpzgih2hmg/workflow/rules/bam2vcf_gatk.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpzgih2hmg/workflow/rules/bam2vcf_fb.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpzgih2hmg/workflow/rules/intervals.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpzgih2hmg/workflow/rules/qc.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpzgih2hmg/workflow/rules/common.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpzgih2hmg/workflow/rules/fastq2bam.smk\":  Formatted content is different from original\n[INFO] 8 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "harvardinformatics/snpArcher",
    "latest_release": null,
    "linting": "Lints for snakefile /tmp/tmpzgih2hmg/workflow/Snakefile:\n    * Absolute path \"/\" + idx[0] + \" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\" + idx[0] + \" in line 20:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\" + idx[0] + \" in line 21:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\" + idx[0] + \" in line 22:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 20:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpzgih2hmg/workflow/rules/common.smk:\n    * Path composition with \u0027+\u0027 in line 66:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 12:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 12:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 14:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 51:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 52:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 81:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 90:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 91:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 92:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 99:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 101:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpzgih2hmg/workflow/rules/fastq2bam.smk:\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 74:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 75:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 76:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 96:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 97:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 100:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 119:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 121:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 122:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 135:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 135:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 151:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 153:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 154:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 168:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpzgih2hmg/workflow/rules/intervals.smk:\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 49:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 66:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpzgih2hmg/workflow/rules/bam2vcf_gatk.smk:\n    * Path composition with \u0027+\u0027 in line 4:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 13:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 13:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 15:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 16:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 17:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 30:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 53:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 64:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 65:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 67:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 68:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 97:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 99:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 101:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 118:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 127:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 130:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpzgih2hmg/workflow/rules/qc.smk:\n    * Path composition with \u0027+\u0027 in line 2:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 9:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 22:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 30:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 31:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 35:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 47:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 48:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 49:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 77:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 78:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 80:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 83:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 84:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 85:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 102:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 103:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 105:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 107:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 121:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 130:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 131:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 132:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 133:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 134:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 136:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpzgih2hmg/workflow/rules/callable_sites.smk:\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule get_fastq_pe (line 7, /tmp/tmpzgih2hmg/workflow/rules/fastq2bam.smk):\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule gzip_fastq (line 44, /tmp/tmpzgih2hmg/workflow/rules/fastq2bam.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_bams (line 235, /tmp/tmpzgih2hmg/workflow/rules/fastq2bam.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bam_sumstats (line 301, /tmp/tmpzgih2hmg/workflow/rules/fastq2bam.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule collect_fastp_stats (line 336, /tmp/tmpzgih2hmg/workflow/rules/fastq2bam.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule collect_sumstats (line 356, /tmp/tmpzgih2hmg/workflow/rules/fastq2bam.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule genmap_map (line 32, /tmp/tmpzgih2hmg/workflow/rules/intervals.smk):\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule sort_genmap (line 71, /tmp/tmpzgih2hmg/workflow/rules/intervals.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule create_intervals (line 131, /tmp/tmpzgih2hmg/workflow/rules/intervals.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule mkDBmapfile (line 71, /tmp/tmpzgih2hmg/workflow/rules/bam2vcf_gatk.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule check_fai (line 1, /tmp/tmpzgih2hmg/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule snp_filters_qc (line 22, /tmp/tmpzgih2hmg/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule vcftools_individuals (line 49, /tmp/tmpzgih2hmg/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule subsample_snps (line 85, /tmp/tmpzgih2hmg/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plink (line 144, /tmp/tmpzgih2hmg/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule admixture (line 190, /tmp/tmpzgih2hmg/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param tmpbim is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule qc_plots (line 245, /tmp/tmpzgih2hmg/workflow/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule genome_prep (line 6, /tmp/tmpzgih2hmg/workflow/rules/callable_sites.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bedgraphs (line 32, /tmp/tmpzgih2hmg/workflow/rules/callable_sites.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule gzip_bedgraph (line 90, /tmp/tmpzgih2hmg/workflow/rules/callable_sites.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 5,
    "subscribers_count": 7,
    "topics": [],
    "updated_at": 1639520652.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Template for running mikRopML with Snakemake",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpk536gsie/SchlossLab-mikropml-snakemake-workflow-7eec776/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "SchlossLab/mikropml-snakemake-workflow",
    "latest_release": "v1.0.0",
    "linting": "Lints for rule preprocess_data (line 23, /tmp/tmpk536gsie/SchlossLab-mikropml-snakemake-workflow-7eec776/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule run_ml (line 59, /tmp/tmpk536gsie/SchlossLab-mikropml-snakemake-workflow-7eec776/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_results (line 100, /tmp/tmpk536gsie/SchlossLab-mikropml-snakemake-workflow-7eec776/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_hp_performance (line 128, /tmp/tmpk536gsie/SchlossLab-mikropml-snakemake-workflow-7eec776/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_benchmarks (line 156, /tmp/tmpk536gsie/SchlossLab-mikropml-snakemake-workflow-7eec776/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_performance (line 180, /tmp/tmpk536gsie/SchlossLab-mikropml-snakemake-workflow-7eec776/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_hp_performance (line 204, /tmp/tmpk536gsie/SchlossLab-mikropml-snakemake-workflow-7eec776/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_benchmarks (line 228, /tmp/tmpk536gsie/SchlossLab-mikropml-snakemake-workflow-7eec776/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule render_report (line 252, /tmp/tmpk536gsie/SchlossLab-mikropml-snakemake-workflow-7eec776/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean (line 286, /tmp/tmpk536gsie/SchlossLab-mikropml-snakemake-workflow-7eec776/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 6,
    "subscribers_count": 5,
    "topics": [
      "snakemake",
      "machine-learning",
      "rstats"
    ],
    "updated_at": 1639503183.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Education4Climate is a tool for crawling and analyzing data from higher education schools.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpqaohkoam/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "Education4Climate/Education4Climate",
    "latest_release": null,
    "linting": "Lints for rule crawl_programs (line 74, /tmp/tmpqaohkoam/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable CRAWLERS_FOLDER from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule crawl_programs_with_duplicates (line 88, /tmp/tmpqaohkoam/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable CRAWLERS_FOLDER from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule merge_duplicates (line 103, /tmp/tmpqaohkoam/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable SRC_CRAWL_FOLDER from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule crawl_courses (line 121, /tmp/tmpqaohkoam/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable CRAWLERS_FOLDER from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule score_courses (line 138, /tmp/tmpqaohkoam/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable SRC_SCORE_FOLDER from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule score_programs (line 157, /tmp/tmpqaohkoam/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable SRC_SCORE_FOLDER from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule prepare_to_web (line 177, /tmp/tmpqaohkoam/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable SRC_WEB_FOLDER from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 7,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1639940757.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Benchpress is a snakemake workflow for reproducible and scalable execution and benchmarks of structure learning algorithms for probabilistic graphical models.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/rules/sample_data.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/rules/docker_images.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/rules/algorithm_shell_commands.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/rules/sample_adjmat.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/rules/pattern_strings.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/rules/algorithm_strings.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/rules/validate.smk\":  Formatted content is different from original\n[DEBUG] \n[ERROR] In file \"/tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/rules/evaluation.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 1:30: f(traj=\"{output_dir}/adjvecs/\"\\ \"adjmat=/{adjmat_string}/\"\\ \"parameters=/{param_string}/\"\"data=/{data_string}/\"\\ \"algorithm=/{alg_string}/\"\\ \"seed={seed}/\" \"adjvecs.csv\")\n```\nwhile formatting code with black.\u0027\n[DEBUG] In file \"/tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/rules/evaluation.smk\":  \n[DEBUG] In file \"/tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/rules/algorithm_rules.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/rules/algorithm_summary_shell_command.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/rules/helper_functions.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/rules/sample_parameters.smk\":  Formatted content is different from original\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 12 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "felixleopoldo/benchpress",
    "latest_release": "v1.0.1",
    "linting": "WorkflowError in line 23 of /tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/Snakefile:\nWorkflow defines configfile config/config.json but it is not present or accessible.\n  File \"/tmp/tmp0ud8g9jn/felixleopoldo-benchpress-2e442e8/workflow/Snakefile\", line 23, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 9,
    "subscribers_count": 2,
    "topics": [
      "graphical-models",
      "bayesian-networks",
      "markov-networks",
      "benchmarking",
      "reproducible-research",
      "snakemake",
      "machine-learning",
      "snakemake-workflow",
      "structure-learning"
    ],
    "updated_at": 1640084025.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Open-source bioinformatics pipeline for the preprocessing of raw sequencing data.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmps8cewws6/MW55-Natrix-65df2b8/rules/quality_control.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmps8cewws6/MW55-Natrix-65df2b8/rules/clustering.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmps8cewws6/MW55-Natrix-65df2b8/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmps8cewws6/MW55-Natrix-65df2b8/rules/merging.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmps8cewws6/MW55-Natrix-65df2b8/rules/blast.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmps8cewws6/MW55-Natrix-65df2b8/rules/dereplication.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmps8cewws6/MW55-Natrix-65df2b8/rules/chim_rm.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmps8cewws6/MW55-Natrix-65df2b8/rules/read_assembly.smk\":  Formatted content is different from original\n[INFO] 8 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "MW55/Natrix",
    "latest_release": "1.0",
    "linting": "KeyError in line 6 of /tmp/tmps8cewws6/MW55-Natrix-65df2b8/Snakefile:\n\u0027general\u0027\n  File \"/tmp/tmps8cewws6/MW55-Natrix-65df2b8/Snakefile\", line 6, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 24,
    "subscribers_count": 5,
    "topics": [],
    "updated_at": 1640718628.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Files and methodology pertaining to the sequencing and analysis of SARS-CoV-2, causative agent of COVID-19.",
    "formatting": "[DEBUG] \n[ERROR] In file \"/tmp/tmpraqe09ow/jaleezyy-covid-19-signal-b708440/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 2:0:     else:\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmpraqe09ow/jaleezyy-covid-19-signal-b708440/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n\nsnakefmt version: 0.4.4",
    "full_name": "jaleezyy/covid-19-signal",
    "latest_release": "v1.4.4",
    "linting": "FileNotFoundError in line 45 of /tmp/tmpraqe09ow/jaleezyy-covid-19-signal-b708440/Snakefile:\n[Errno 2] No such file or directory: \u0027sample_table.csv\u0027\n  File \"/tmp/tmpraqe09ow/jaleezyy-covid-19-signal-b708440/Snakefile\", line 45, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 683, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 482, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 811, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 1040, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 51, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/parsers/base_parser.py\", line 222, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.10/site-packages/pandas/io/common.py\", line 702, in get_handle\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 28,
    "subscribers_count": 14,
    "topics": [],
    "updated_at": 1640654114.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "PyPSA meets Africa: An Open Source Optimisation Model of the African Energy System. Our website: https://pypsa-meets-africa.github.io/",
    "formatting": "[DEBUG] \n[WARNING] In file \"/tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile\":  Keyword \"input\" at line 124 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile\":  Keyword \"input\" at line 229 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[DEBUG] In file \"/tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "pypsa-meets-africa/pypsa-africa",
    "latest_release": "v0.0.1",
    "linting": "Lints for snakefile /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 12:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule retrieve_databundle_light (line 58, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_osm_data (line 77, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean_osm_data (line 99, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_osm_network (line 130, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_shapes (line 156, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule base_network (line 192, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_bus_regions (line 241, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_renewable_profiles (line 328, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_powerplants (line 367, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule add_electricity (line 399, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule simplify_network (line 438, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cluster_network (line 476, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule augmented_line_connections (line 517, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule add_extra_components (line 594, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule prepare_network (line 625, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule solve_network (line 672, /tmp/tmphlffvqne/pypsa-meets-africa-pypsa-africa-ea0c64d/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 33,
    "subscribers_count": 11,
    "topics": [
      "pypsa-africa",
      "pypsa-meets-africa"
    ],
    "updated_at": 1640861800.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "PyPSA-Eur-Sec: A Sector-Coupled Open Optimisation Model of the European Energy System",
    "formatting": "[DEBUG] \n[ERROR] In file \"/tmp/tmpr_p85mc2/PyPSA-pypsa-eur-sec-52b7caf/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 2:0: else:\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmpr_p85mc2/PyPSA-pypsa-eur-sec-52b7caf/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n\nsnakefmt version: 0.4.4",
    "full_name": "PyPSA/pypsa-eur-sec",
    "latest_release": "v0.6.0",
    "linting": "WorkflowError in line 5 of /tmp/tmpr_p85mc2/PyPSA-pypsa-eur-sec-52b7caf/Snakefile:\nWorkflow defines configfile config.yaml but it is not present or accessible.\n  File \"/tmp/tmpr_p85mc2/PyPSA-pypsa-eur-sec-52b7caf/Snakefile\", line 5, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 37,
    "subscribers_count": 11,
    "topics": [
      "pypsa",
      "energy",
      "energy-system",
      "energy-model",
      "energy-system-model"
    ],
    "updated_at": 1639840659.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Snakemake workflow for metagenomic classification with Kraken2",
    "formatting": "[DEBUG] \n[WARNING] In file \"/tmp/tmpjspaaanz/bhattlab-kraken2_classification-300ac80/Snakefile\":  Keyword \"input\" at line 131 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[DEBUG] In file \"/tmp/tmpjspaaanz/bhattlab-kraken2_classification-300ac80/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "bhattlab/kraken2_classification",
    "latest_release": "v1.0",
    "linting": "KeyError in line 8 of /tmp/tmpjspaaanz/bhattlab-kraken2_classification-300ac80/Snakefile:\n\u0027outdir\u0027\n  File \"/tmp/tmpjspaaanz/bhattlab-kraken2_classification-300ac80/Snakefile\", line 8, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 37,
    "subscribers_count": 4,
    "topics": [],
    "updated_at": 1639657738.0
  },
  {
    "config_readme": "\u003ch1\u003e\n\u003ca id=\"user-content-general-settings\" class=\"anchor\" href=\"#general-settings\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eGeneral settings\u003c/h1\u003e\n\u003cp\u003eTo configure this workflow, modify \u003ccode\u003econfig/config.yaml\u003c/code\u003e according to your needs, following the explanations provided in the file.\u003c/p\u003e\n\u003ch1\u003e\n\u003ca id=\"user-content-sample-sheet\" class=\"anchor\" href=\"#sample-sheet\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eSample sheet\u003c/h1\u003e\n\u003cp\u003eAdd samples to \u003ccode\u003econfig/samples.tsv\u003c/code\u003e. For each sample, the columns \u003ccode\u003esample_name\u003c/code\u003e, \u003ccode\u003ealias\u003c/code\u003e, \u003ccode\u003eplatform\u003c/code\u003e, and \u003ccode\u003egroup\u003c/code\u003e have to be defined.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSamples within the same \u003ccode\u003egroup\u003c/code\u003e will be called jointly.\u003c/li\u003e\n\u003cli\u003eAliases represent the name of the sample within its group (they can be the same as the sample name, or something simpler, e.g. tumor or normal).\u003c/li\u003e\n\u003cli\u003eThe \u003ccode\u003eplatform\u003c/code\u003e column needs to contain the used sequencing plaform (one of \u0027CAPILLARY\u0027, \u0027LS454\u0027, \u0027ILLUMINA\u0027, \u0027SOLID\u0027, \u0027HELICOS\u0027, \u0027IONTORRENT\u0027, \u0027ONT\u0027, \u0027PACBIO\u2019).\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMissing values can be specified by empty columns or by writing \u003ccode\u003eNA\u003c/code\u003e. Lines can be commented out with \u003ccode\u003e#\u003c/code\u003e.\u003c/p\u003e\n\u003ch1\u003e\n\u003ca id=\"user-content-unit-sheet\" class=\"anchor\" href=\"#unit-sheet\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eUnit sheet\u003c/h1\u003e\n\u003cp\u003eFor each sample, add one or more sequencing units (runs, lanes or replicates) to the unit sheet \u003ccode\u003econfig/units.tsv\u003c/code\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEach unit has a \u003ccode\u003eunit_name\u003c/code\u003e, which can be e.g. a running number, or an actual run, lane or replicate id.\u003c/li\u003e\n\u003cli\u003eEach unit has a \u003ccode\u003esample_name\u003c/code\u003e, which associates it with the biological sample it comes from.\u003c/li\u003e\n\u003cli\u003eFor each unit, define either one (column \u003ccode\u003efq1\u003c/code\u003e) or two (columns \u003ccode\u003efq1\u003c/code\u003e, \u003ccode\u003efq2\u003c/code\u003e) FASTQ files (these can point to anywhere in your system).\u003c/li\u003e\n\u003cli\u003eAlternatively, you can define an SRA (sequence read archive) accession (starting with e.g. ERR or SRR) by using a column \u003ccode\u003esra\u003c/code\u003e. In the latter case, the pipeline will automatically download the corresponding paired end reads from SRA. If both local files and SRA accession are available, the local files will be preferred.\u003c/li\u003e\n\u003cli\u003eDefine adapters in the \u003ccode\u003eadapters\u003c/code\u003e column, by putting \u003ca href=\"https://cutadapt.readthedocs.org\" rel=\"nofollow\"\u003ecutadapt arguments\u003c/a\u003e in quotation marks (e.g. \u003ccode\u003e\"-a ACGCGATCG -A GCTAGCGTACT\"\u003c/code\u003e).\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMissing values can be specified by empty columns or by writing \u003ccode\u003eNA\u003c/code\u003e. Lines can be commented out with \u003ccode\u003e#\u003c/code\u003e.\u003c/p\u003e\n\u003ch1\u003e\n\u003ca id=\"user-content-calling-scenario\" class=\"anchor\" href=\"#calling-scenario\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003eCalling scenario\u003c/h1\u003e\n\u003cp\u003eVarlociraptor supports integrated uncertainty aware calling and filtering of variants for arbitrary scenarios. These are defined as so-called scenarios, via a \u003ca href=\"https://varlociraptor.github.io/docs/calling#generic-variant-calling\" rel=\"nofollow\"\u003evariant calling grammar\u003c/a\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFor each group, a scenario is rendered via \u003ca href=\"https://jinja.palletsprojects.com\" rel=\"nofollow\"\u003eJinja\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eTherefore, edit the template scenario (\u003ccode\u003escenario.yaml\u003c/code\u003e) according to your needs. The sample sheet is available for jinja rendering as a pandas data frame in the variable \u003ccode\u003esamples\u003c/code\u003e. This allows to customize the scenario according to the contents of the sample sheet. You can therefore add additional columns to the sample sheet (e.g. purity) and access them in the scenario template, in order to pass the information to Varlociraptor.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1\u003e\n\u003ca id=\"user-content-primer-trimming\" class=\"anchor\" href=\"#primer-trimming\" aria-hidden=\"true\"\u003e\u003cspan aria-hidden=\"true\" class=\"octicon octicon-link\"\u003e\u003c/span\u003e\u003c/a\u003ePrimer trimming\u003c/h1\u003e\n\u003cp\u003eFor panel data the pipeline allows trimming of amplicon primers on both ends of a fragment but also on a single end only.\nIn case of single end primers these are supposed to be located at the left end of a read.\nWhen primer trimming is enabled, primers have to be defined either directly in the \u003ccode\u003econfig.yaml\u003c/code\u003e or in a seperate tsv-file.\nDefining primers directly in the config file is prefered when all samples come from the same primer set.\nIn case of different panels, primers have to be set panel-wise in a seperate tsv-file.\nFor each panel the following columns need to be set: \u003ccode\u003epanel\u003c/code\u003e, \u003ccode\u003efa1\u003c/code\u003e and \u003ccode\u003efa2\u003c/code\u003e (optional).\nAdditionally, for each sample the corresponding panel must be defined in \u003ccode\u003esamples.tsv\u003c/code\u003e (column \u003ccode\u003epanel\u003c/code\u003e).\nFor single primer trimming only, the first entry in the config (respective in the tsv file) needs to be defined.\u003c/p\u003e\n",
    "data_format": 2,
    "description": "A Snakemake workflow for calling small and structural variants under any kind of scenario (tumor/normal, tumor/normal/relapse, germline, pedigree, populations) via the unified statistical model of Varlociraptor.",
    "formatting": "[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] In file \"/tmp/tmp8sk6uarq/snakemake-workflows-dna-seq-varlociraptor-a8f5167/workflow/rules/annotation.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] In file \"/tmp/tmp8sk6uarq/snakemake-workflows-dna-seq-varlociraptor-a8f5167/workflow/rules/primers.smk\":  Formatted content is different from original\n[INFO] 2 file(s) would be changed \ud83d\ude2c\n[INFO] 15 file(s) would be left unchanged \ud83c\udf89\n\nsnakefmt version: 0.4.4",
    "full_name": "snakemake-workflows/dna-seq-varlociraptor",
    "latest_release": "v3.4.0",
    "linting": null,
    "mandatory_flags": null,
    "report": true,
    "software_stack_deployment": {
      "conda": true
    },
    "standardized": true,
    "stargazers_count": 46,
    "subscribers_count": 7,
    "topics": [
      "varlociraptor",
      "sciworkflows",
      "snakemake",
      "reproducibility",
      "genomic-variant-calling"
    ],
    "updated_at": 1640009574.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "V-pipe is a pipeline designed for analysing NGS data of short viral genomes",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpool8xufh/cbg-ethz-V-pipe-ffdec68/workflow/rules/haplotypes.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] In file \"/tmp/tmpool8xufh/cbg-ethz-V-pipe-ffdec68/workflow/rules/visualization.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[DEBUG] \n[INFO] 2 file(s) would be changed \ud83d\ude2c\n[INFO] 14 file(s) would be left unchanged \ud83c\udf89\n\nsnakefmt version: 0.4.4",
    "full_name": "cbg-ethz/V-pipe",
    "latest_release": "v2.99.1",
    "linting": "VPIPE_BASEDIR = /tmp/tmpool8xufh/cbg-ethz-V-pipe-ffdec68/workflow\nNo virus base configuration, using defaults\nWARNING: No samples found in samples/. Not generating config/samples.tsv.\nWARNING: Sample list file config/samples.tsv not found.\nWARNING: Reference file results/cohort_consensus.fasta not found. Trying references/results/cohort_consensus.fasta.\nValueError in line 452 of /tmp/tmpool8xufh/cbg-ethz-V-pipe-ffdec68/workflow/rules/common.smk:\nERROR: Reference file references/results/cohort_consensus.fasta not found.\n  File \"/tmp/tmpool8xufh/cbg-ethz-V-pipe-ffdec68/workflow/Snakefile\", line 12, in \u003cmodule\u003e\n  File \"/tmp/tmpool8xufh/cbg-ethz-V-pipe-ffdec68/workflow/rules/common.smk\", line 452, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 73,
    "subscribers_count": 8,
    "topics": [
      "ngs",
      "snakemake",
      "conda",
      "biohackeu20",
      "virus",
      "sequencing",
      "bioinformatics",
      "bioinformatics-pipeline",
      "biohackcovid20",
      "sars-cov-2",
      "sarscov2",
      "hiv",
      "genomics",
      "biohackeu21"
    ],
    "updated_at": 1639840883.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "PyPSA-Eur: An Open Optimisation Model of the European Transmission System",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile\":  Formatted content is different from original\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "PyPSA/pypsa-eur",
    "latest_release": "v0.4.0",
    "linting": "Lints for snakefile /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 11:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 191:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 205:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule retrieve_databundle (line 105, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_load_data (line 122, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_powerplants (line 139, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule base_network (line 167, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_shapes (line 207, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_bus_regions (line 244, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule retrieve_cutout (line 307, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule retrieve_natura_raster (line 348, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_renewable_profiles (line 365, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_hydro_profile (line 407, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule add_electricity (line 433, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule simplify_network (line 472, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cluster_network (line 510, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule add_extra_components (line 551, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule prepare_network (line 582, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule solve_network (line 629, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule solve_operations_network (line 664, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_network (line 701, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_summary (line 740, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_summary (line 760, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_p_nom_max (line 786, /tmp/tmpnf37vwon/PyPSA-pypsa-eur-7b6c1ec/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 112,
    "subscribers_count": 12,
    "topics": [
      "snakemake",
      "energy",
      "energy-system",
      "power-systems",
      "energy-model",
      "pypsa",
      "energy-system-model",
      "energy-systems"
    ],
    "updated_at": 1640840336.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Fully reproducible, open source scientific articles in LaTeX.",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/class_file.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/repo.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/download_manual.smk\":  Formatted content is different from original\n[DEBUG] \n[ERROR] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 5:0: \u003cline number missing in source\u003e\n```\nwhile formatting code with black.\u0027\n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/Snakefile\":  \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/dag.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/script_info.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/upload.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/texfile.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/generate.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/metadata.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/aux_file.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/docstrings.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/download_auto.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/class_name.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/tmptexfile.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/pdf.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/figure.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/stylesheet.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/xml.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/arxiv.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/tectonic.smk\":  Formatted content is different from original\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 20 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "rodluger/showyourwork",
    "latest_release": "v0.2.1",
    "linting": "Lints for snakefile /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/zenodo.py:\n    * Absolute path \"/\".join(get_repo_url().split(\" in line 63:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/dev/null\" in line 392:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/dag.smk:\n    * Path composition with \u0027+\u0027 in line 2:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule repo (line 8, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/repo.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule aux_file (line 8, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/aux_file.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule tectonic (line 1, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/tectonic.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule class_name (line 9, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/class_name.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule class_file (line 5, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/class_file.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule tmptexfile (line 5, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/tmptexfile.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule xml (line 5, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/xml.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule script_info (line 11, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/script_info.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule metadata (line 9, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/metadata.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule figure (line 1, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/figure.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule texfile (line 5, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/texfile.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule stylesheet (line 5, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/stylesheet.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule dotgraph (line 1, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 14 (line 40, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 15 (line 40, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 16 (line 40, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 17 (line 40, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 18 (line 40, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 19 (line 40, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 20 (line 40, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule dag (line 73, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/dag.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule pdf (line 1, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/pdf.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule arxiv (line 1, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/arxiv.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule docstrings (line 1, /tmp/tmpq8p6uer8/rodluger-showyourwork-8096e6d/workflow/rules/docstrings.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 194,
    "subscribers_count": 5,
    "topics": [
      "latex",
      "open-source",
      "reproducible-science",
      "continuous-integration",
      "reproducible-research",
      "scientific-papers",
      "scientific-workflows"
    ],
    "updated_at": 1640689435.0
  },
  {
    "config_readme": null,
    "data_format": 2,
    "description": "Bitextor generates translation memories from multilingual websites",
    "formatting": "[DEBUG] \n[DEBUG] In file \"/tmp/tmpvo9vzuj1/bitextor-bitextor-987c0df/workflow/Snakefile\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpvo9vzuj1/bitextor-bitextor-987c0df/workflow/rules/common.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpvo9vzuj1/bitextor-bitextor-987c0df/workflow/rules/dicgeneration.smk\":  Formatted content is different from original\n[DEBUG] \n[DEBUG] In file \"/tmp/tmpvo9vzuj1/bitextor-bitextor-987c0df/workflow/rules/dictdocsegalign.smk\":  Formatted content is different from original\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n\nsnakefmt version: 0.4.4",
    "full_name": "bitextor/bitextor",
    "latest_release": "v8.1.1",
    "linting": "ModuleNotFoundError in line 6 of /tmp/tmpvo9vzuj1/bitextor-bitextor-987c0df/workflow/Snakefile:\nNo module named \u0027bitextor\u0027\n  File \"/tmp/tmpvo9vzuj1/bitextor-bitextor-987c0df/workflow/Snakefile\", line 6, in \u003cmodule\u003e\n",
    "mandatory_flags": [],
    "report": false,
    "software_stack_deployment": null,
    "standardized": false,
    "stargazers_count": 198,
    "subscribers_count": 28,
    "topics": [
      "document-aligner",
      "httrack",
      "apertium",
      "dictionaries",
      "crawler",
      "wget",
      "creepy",
      "hunalign",
      "sentence-segmentation",
      "tokenizer",
      "bicleaner",
      "tmx",
      "warc",
      "corpus-tools",
      "corpus-processing",
      "corpus-generator",
      "parallel-corpora",
      "machine-translation",
      "neural-machine-translation",
      "statistical-machine-translation"
    ],
    "updated_at": 1640886263.0
  }
]
