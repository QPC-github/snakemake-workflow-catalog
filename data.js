var data =
[
  {
    "data_format": 1,
    "description": "Reproducibility and package management : workflow languages (CWL, Snakemake, Conda).",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "eanbit-rt/Workflows_and_package_management",
    "linting": "Lints for rule complement (line 1, /tmp/tmpwpcvuxjb/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule reverse (line 20, /tmp/tmpwpcvuxjb/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1598452249.0
  },
  {
    "data_format": 1,
    "description": "General-purpose Snakemake workflow for diffusion-based subcortical parcellation",
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "akhanf/diffparc-smk",
    "linting": "Lints for snakefile /tmp/tmpyeddiyms/workflow/rules/common.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule run_probtrack (line 347, /tmp/tmpyeddiyms/workflow/rules/diffparc.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule track_from_clusters (line 157, /tmp/tmpyeddiyms/workflow/rules/tractmap.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule avg_tractmaps_template (line 341, /tmp/tmpyeddiyms/workflow/rules/tractmap.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1602172025.0
  },
  {
    "data_format": 1,
    "description": "Additional Training materials for workflows and package management",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "eanbit-rt/ReproducibleResearch",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1563259609.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "tanaes/Moeller_lab_Snakemake_tutorial",
    "linting": "Lints for snakefile /tmp/tmpogulnill/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1613581054.0
  },
  {
    "data_format": 1,
    "description": "DiVA (DNA Variant Analysis) is a pipeline for Next-Generation Sequencing Exome data anlysis",
    "formatting": "[WARNING] In file \"/tmp/tmpgsb1cdrx/rules/annotation.smk\":  Keyword \"input\" at line 2 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmpgsb1cdrx/rules/annotation.smk\":  \u0027SyntaxError: L12: Unrecognised keyword \u0027samples\u0027 in rule gatk_SelectVariants definition\u0027\n[WARNING] In file \"/tmp/tmpgsb1cdrx/rules/call_variants.smk\":  Keyword \"shell\" at line 19 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpgsb1cdrx/rules/joint_call.smk\":  Keyword \"shell\" at line 47 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmpgsb1cdrx/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 8:0:     \"delivery.completed\"\n```\nwhile formatting code with black.\u0027\n[INFO] 2 file(s) raised parsing errors \ud83e\udd15\n[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "solida-core/diva",
    "linting": "KeyError in line 11 of /tmp/tmpgsb1cdrx/Snakefile:\n\u0027samples\u0027\n  File \"/tmp/tmpgsb1cdrx/Snakefile\", line 11, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 4,
    "topics": [
      "bioinformatics",
      "snakemake",
      "genomics",
      "workflow",
      "variant-calling",
      "variant-annotations"
    ],
    "updated_at": 1611906269.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpmluvp1wh/rules/rseqc.smk\":  \u0027SyntaxError: L22: Unrecognised keyword \u0027ref\u0027 in rule rseqc_genebody_coverage definition\u0027\n[ERROR] In file \"/tmp/tmpmluvp1wh/rules/qc_pe.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 3:7: output:\n```\nwhile formatting code with black.\u0027\n[ERROR] In file \"/tmp/tmpmluvp1wh/rules/trimming_pe.smk\":  \u0027InvalidParameterSyntax: 19( conservative_cpu_count( reserve_cores=2, max_cores=99))/4 if( conservative_cpu_count( reserve_cores=2, max_cores=99))\u003e4 else1\n\u0027\n[ERROR] In file \"/tmp/tmpmluvp1wh/rules/trimming_se.smk\":  \u0027InvalidParameterSyntax: 29( conservative_cpu_count( reserve_cores=2, max_cores=99))/2 if( conservative_cpu_count( reserve_cores=2, max_cores=99))\u003e2 else1\n\u0027\n[WARNING] In file \"/tmp/tmpmluvp1wh/Snakefile\":  Keyword \"input\" at line 30 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmpmluvp1wh/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 2:0:     \"qc/multiqc.html\" ,\n```\nwhile formatting code with black.\u0027\n[WARNING] In file \"/tmp/tmpmluvp1wh/rules/kallisto.smk\":  Keyword \"params\" at line 36 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpmluvp1wh/rules/kallisto_pe.smk\":  Keyword \"params\" at line 23 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 5 file(s) raised parsing errors \ud83e\udd15\n[INFO] 11 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "solida-core/ride",
    "linting": "KeyError in line 12 of /tmp/tmpmluvp1wh/Snakefile:\n\u0027samples\u0027\n  File \"/tmp/tmpmluvp1wh/Snakefile\", line 12, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [
      "bioinformatics",
      "snakemake",
      "genomics",
      "rna-seq-analysis"
    ],
    "updated_at": 1611937394.0
  },
  {
    "data_format": 1,
    "description": "Reproduce PROBer paper analysis",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "pachterlab/PROBer_paper_analysis",
    "linting": "Wildcard constraints in inputs are ignored.\nLints for snakefile /tmp/tmp3ie855xs/Snakefile:\n    * Absolute path \"/bowtie-1.1.2\" in line 15:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bowtie2-2.2.9\" in line 16:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/RSEM-1.2.31\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/scatters.pdf\" in line 97:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/comparing_with_BUMHMM_table.txt\" in line 98:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 15:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 41:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 97:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp3ie855xs/tools/Snakefile:\n    * Absolute path \"/PROBer-0.3.0.tar.gz\" in line 49:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/PROBer_full_model.tar.gz\" in line 56:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 49:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 56:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp3ie855xs/ground_truth/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp3ie855xs/references/Snakefile:\n    * Absolute path \"/SHAPE_MaP.t2g\" in line 77:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 69:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 76:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 78:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp3ie855xs/data/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 57:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 187:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp3ie855xs/exp/Snakefile:\n    * Absolute path \"/hnRNPC_HeLa_UleLab_rep1_reprm.fq\" in line 703:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/SRR3147675_reprm.fq\" in line 705:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/countMotifRate\" in line 910:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/detectMotif\" in line 921:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calcWeightedMotifRate\" in line 932:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 231:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 364:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 601:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 703:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 886:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 910:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 921:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 932:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp3ie855xs/simulation/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 43:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule compile_cpp (line 1, /tmp/tmp3ie855xs/scripts/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_fastq_dump (line 5, /tmp/tmp3ie855xs/tools/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable tool_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule build_cutadapt (line 24, /tmp/tmp3ie855xs/tools/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable tool_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule build_samtools (line 43, /tmp/tmp3ie855xs/tools/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable tool_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule build_bowtie (line 62, /tmp/tmp3ie855xs/tools/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable tool_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule build_bowtie2 (line 81, /tmp/tmp3ie855xs/tools/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable tool_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule build_rsem (line 100, /tmp/tmp3ie855xs/tools/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable tool_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule build_PROBer (line 119, /tmp/tmp3ie855xs/tools/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable tool_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable tool_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable tool_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule build_PROBer_full_model (line 138, /tmp/tmp3ie855xs/tools/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable tool_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable tool_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable tool_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule build_RNAstructure (line 157, /tmp/tmp3ie855xs/tools/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable tool_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule download_bpseq (line 1, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule extract_info_from_bpseq (line 16, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param output_name is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule download_pdb (line 39, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule generate_arabidopsis_bpseq (line 55, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule generate_arabidopsis_rRNAs_fa (line 76, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule generate_yeast_bpseq (line 95, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule calculate_yeast_solvent_accessible_surface_areas (line 125, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable gt_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_ecoli_bpseq (line 151, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule calculate_ecoli_solvent_accessible_surface_areas (line 170, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable gt_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_mouse_bpseq (line 193, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule generate_mouse_rRNAs_fa (line 212, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule generate_ct_file_from_bpseq (line 232, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule calc_yeast_valid (line 249, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule unzip_SHAPE_MaP (line 268, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable gt_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule process_SHAPE_MaP (line 287, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param output_name is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule generate_pseudoU_ground_truth (line 313, /tmp/tmp3ie855xs/ground_truth/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule build_PROBer_and_Bowtie_indices (line 5, /tmp/tmp3ie855xs/references/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable bowtie_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule build_RSEM_indices (line 25, /tmp/tmp3ie855xs/references/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable RSEM_prepare from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule download_arabidopsis_genome (line 51, /tmp/tmp3ie855xs/references/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable ref_arabidopsis from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable ref_arabidopsis from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_arabidopsis_GTF (line 71, /tmp/tmp3ie855xs/references/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable ref_arabidopsis from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable ref_arabidopsis from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_arabidopsis_remove_list (line 91, /tmp/tmp3ie855xs/references/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule extract_arabidopsis_transcripts (line 103, /tmp/tmp3ie855xs/references/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable arabidopsis_filt from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule calculate_mappability_for_arabidopsis_filt (line 125, /tmp/tmp3ie855xs/references/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable arabidopsis_filt from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule add_spike_in_sequences_to_arabidopsis_transcripts (line 145, /tmp/tmp3ie855xs/references/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule generate_yeast_remove_list (line 169, /tmp/tmp3ie855xs/references/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule extract_yeast_transcripts (line 181, /tmp/tmp3ie855xs/references/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable ref_yeast from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable ref_yeast from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable ref_yeast from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable ref_yeast from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable yeast_filt from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_yeast_rRNAs_fa (line 213, /tmp/tmp3ie855xs/references/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_PROBer_and_Bowtie2_indices_for_yeast_rRNAs_fa (line 232, /tmp/tmp3ie855xs/references/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable bowtie2_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule download_assembled_ecoli_16S_fa (line 253, /tmp/tmp3ie855xs/references/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_PROBer_and_Bowtie2_indices_for_ecoli_16S_fa (line 267, /tmp/tmp3ie855xs/references/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable bowtie2_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule download_mouse_genome (line 288, /tmp/tmp3ie855xs/references/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable ref_mouse from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable ref_mouse from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule download_mouse_GTF (line 308, /tmp/tmp3ie855xs/references/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable ref_mouse from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable ref_mouse from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_mouse_remove_list (line 328, /tmp/tmp3ie855xs/references/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule extract_mouse_transcripts (line 347, /tmp/tmp3ie855xs/references/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable mouse_filt from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule download_human_genome (line 371, /tmp/tmp3ie855xs/references/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable ref_human from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable ref_human from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule build_Bowtie_and_Bowtie2_indices_for_iCLIP_and_eCLIP_analyses (line 391, /tmp/tmp3ie855xs/references/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable bowtie_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable bowtie2_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable human_ref from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule build_rep_ref (line 411, /tmp/tmp3ie855xs/references/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable bowtie_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable bowtie2_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable rep_ref from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule download_sra (line 1, /tmp/tmp3ie855xs/data/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule dump_to_FASTQ (line 12, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable fastq_dump from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule dump_to_FASTQ_PE (line 28, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable fastq_dump from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule remove_adapter_AssmannLab (line 48, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Cutadapt from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule remove_3_prime_adapter_McmanusLab (line 73, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Cutadapt from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule remove_5_prime_adapter_McmanusLab (line 97, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Cutadapt from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule align_reads_for_trimming_mismatches_McmanusLab (line 121, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Bowtie from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable yeast_filt from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable Samtools from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule trim_mismatches_McmanusLab (line 148, /tmp/tmp3ie855xs/data/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule remove_adapter_ChangLab (line 168, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Cutadapt from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule remove_PCR_duplicate_ChangLab (line 192, /tmp/tmp3ie855xs/data/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule remove_adapter_GilbertLab (line 216, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Cutadapt from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule download_info_GrannemanLab (line 241, /tmp/tmp3ie855xs/data/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable GrannemanLab from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable GrannemanLab from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable GrannemanLab from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule integrate_umi_and_trim_first_nucleotide_GrannemanLab (line 258, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable GrannemanLab from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable GrannemanLab from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule trim_adapter_GrannemanLab (line 291, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Cutadapt from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule remove_PCR_duplicate_GrannemanLab (line 317, /tmp/tmp3ie855xs/data/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule download_gz_file_VintherLab (line 341, /tmp/tmp3ie855xs/data/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule trim_adapter_VintherLab (line 356, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Cutadapt from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule download_UleLab_hnRNPC_iCLIP_data (line 384, /tmp/tmp3ie855xs/data/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable UleLab from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable UleLab from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable UleLab from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable UleLab from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable UleLab from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable UleLab from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable UleLab from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable UleLab from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule remove_adapter_iCLIP (line 408, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Cutadapt from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule remove_PCR_duplicate_iCLIP (line 432, /tmp/tmp3ie855xs/data/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule remove_reads_mapped_to_rep_iCLIP (line 455, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Bowtie from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule sra_to_ENCODE_eCLIP (line 542, /tmp/tmp3ie855xs/data/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule cutadapt_RBFOX2_eCLIP (line 566, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Cutadapt from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule download_ENCODE_eCLIP (line 613, /tmp/tmp3ie855xs/data/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cutadapt_ENCODE_eCLIP (line 630, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Cutadapt from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule remove_PCR_duplicate_eCLIP (line 658, /tmp/tmp3ie855xs/data/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule remove_reads_mapped_to_rep_eCLIP (line 680, /tmp/tmp3ie855xs/data/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable YeoLab_eCLIP from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable Bowtie2 from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable YeoLab_eCLIP from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable YeoLab_eCLIP from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable YeoLab_eCLIP from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable YeoLab_eCLIP from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule bowtie_alignment_all (line 40, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Bowtie from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable Samtools from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule bowtie_alignment_best_strata (line 68, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Bowtie from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable Samtools from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule bowtie_alignment_best (line 96, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Bowtie from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable Samtools from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule bowtie2_alignment_all (line 137, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Samtools from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule bowtie2_alignment_best_strata (line 165, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Samtools from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule bowtie2_alignment_best (line 193, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Samtools from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_PROBer (line 246, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_PROBer_no_control (line 275, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule extract_count_vector_StructureFold_or_Pseudoseq (line 322, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule calculate_StructureFold_score (line 341, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule extract_count_vector_Modseeker (line 359, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule calculate_Modseq_score (line 378, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule calculate_icSHAPE_score (line 421, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule calculate_Pseudoseq_score (line 439, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule sort_bam_by_name (line 463, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable rsem_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule extract_structure_seq_mapping_statistics (line 489, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule extract_RBFOX2_eCLIP_mapping_statistics (line 509, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_mapping_statistics_table (line 528, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_PROBer_for_time_and_memory (line 554, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable bowtie_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_time_and_memory_table (line 584, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_PROBer_full_model (line 607, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer_full_model from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_RSEM_PROBer_star_pipeline (line 635, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer_single from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable rsem_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule produce_simulation_results (line 663, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule produce_boxplot_pdf (line 701, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule produce_digital_spike_in_results (line 723, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule produce_boxplot_pdf_for_spike_in_experiments (line 746, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_RSEM_for_scatter_plots (line 767, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable RSEM_calculate from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_expression_scatter_plots (line 794, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_mod_seq_PR_ROC_sasa (line 819, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable gt_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable result_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_ChemModSeq_PR_ROC_sasa (line 840, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable gt_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable result_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule extractReactivity (line 885, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule runRNAstructure (line 908, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable RNAstructure_data_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable Fold from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule runRNAstructure_baseline (line 929, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable RNAstructure_data_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable Fold from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule evaluate_structure (line 949, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable scorer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_structure_prediction_result (line 969, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule calc_structure_seq_ROC_AUC (line 993, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable gt_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule calc_mod_seq_ROC_AUC (line 1015, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable gt_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule calc_icSHAPE_ROC_AUC (line 1037, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable gt_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_roc_auc_table (line 1058, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule align_reads_SHAPES (line 1079, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Bowtie2 from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable Samtools from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule trim_terminals_SHAPES (line 1117, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule collect_data_for_RNAprobR_SHAPES (line 1140, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule plot_bias_SHAPES (line 1159, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule plot_ROC_SHAPES (line 1178, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable result_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_doc_cov_for_BUMHMM (line 1202, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule calc_BUMHMM_scores (line 1221, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule calc_PR_ROC_BUMHMM (line 1240, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable gt_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_comparing_with_BUMHMM_table (line 1260, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_pseudoU_PR_ROC_plots (line 1283, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable gt_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exp_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable result_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule visualize_18S_for_pseudoU_experiment (line 1305, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_PROBer_iCLIP (line 1337, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable bowtie_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_PROBer_naive_iCLIP (line 1365, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule sample_multireads_iCLIP (line 1389, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer_sampler from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param sample_name is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule run_PROBer_eCLIP (line 1456, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable bowtie2_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_PROBer_naive_eCLIP (line 1488, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule sample_multireads_eCLIP (line 1512, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer_sampler from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param sample_name is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule extract_unique_CLIP (line 1539, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule extract_all_CLIP (line 1558, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule samtools_sort_CLIP (line 1577, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Samtools from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule samtools_index_CLIP (line 1597, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Samtools from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_CLIPper_CLIP (line 1614, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_peaks_iCLIP (line 1636, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule normalize_peaks_eCLIP (line 1658, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n    * Param sample is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule count_rate_for_peaks_CLIP (line 1697, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule extract_context_for_sites_CLIP (line 1721, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule calculate_weighted_rate_for_sites_CLIP (line 1745, /tmp/tmp3ie855xs/exp/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_iCLIP_site_result_table (line 1770, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_eCLIP_site_result_table_eCLIP (line 1790, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_iCLIP_peak_result_table (line 1810, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_eCLIP_peak_result_table (line 1830, /tmp/tmp3ie855xs/exp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule build_simulation (line 3, /tmp/tmp3ie855xs/simulation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule simulate (line 34, /tmp/tmp3ie855xs/simulation/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_input_list_for_boxplot (line 61, /tmp/tmp3ie855xs/simulation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_spike_in_ground_truth (line 82, /tmp/tmp3ie855xs/simulation/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule build_spike_in_simulation (line 102, /tmp/tmp3ie855xs/simulation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule simulate_spike_in (line 128, /tmp/tmp3ie855xs/simulation/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable PROBer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param output_name is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule build_RSEM_simulation (line 156, /tmp/tmp3ie855xs/simulation/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable script_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule simulate_RSEM (line 178, /tmp/tmp3ie855xs/simulation/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable RSEM_simulate from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 5,
    "topics": [],
    "updated_at": 1571995290.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "enezermjema/Mini-project-group-06",
    "linting": "Lints for rule nanoqc (line 18, /tmp/tmp5fai9x6y/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule porechop (line 39, /tmp/tmp5fai9x6y/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule minimap2_illum_nanop (line 62, /tmp/tmp5fai9x6y/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sam_sorting1 (line 94, /tmp/tmp5fai9x6y/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule freebayes_vc (line 133, /tmp/tmp5fai9x6y/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ngmlr_svc (line 169, /tmp/tmp5fai9x6y/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sam_sorting2 (line 201, /tmp/tmp5fai9x6y/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sniffles_svc (line 239, /tmp/tmp5fai9x6y/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule variants_stats (line 268, /tmp/tmp5fai9x6y/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1598603620.0
  },
  {
    "data_format": 1,
    "description": "machine learning project for Cyber Carpentry 2019",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "cyber-carpentry/group2-machine-learning",
    "linting": "Lints for rule fashion (line 10, /tmp/tmpg4s7p47c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mnist (line 29, /tmp/tmpg4s7p47c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule copy (line 45, /tmp/tmpg4s7p47c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1564155144.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow implementing Accel Amplicon (Swift) trimming guidelines.",
    "formatting": "[INFO] 2 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "clinical-genomics-uppsala/accel_amplicon_trimming",
    "linting": "ModuleNotFoundError in line 12 of /tmp/tmpzdr5mi_u/rules/accel_amplicon.smk:\nNo module named \u0027pytools\u0027\n  File \"/tmp/tmpzdr5mi_u/Snakefile\", line 18, in \u003cmodule\u003e\n  File \"/tmp/tmpzdr5mi_u/rules/accel_amplicon.smk\", line 12, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1542986831.0
  },
  {
    "data_format": 1,
    "description": "An example use of multiQC within snakemake",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jakevc/snakemake_multiqc",
    "linting": "Lints for rule fastqc (line 15, /tmp/tmptso8wofa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule multiqc (line 42, /tmp/tmptso8wofa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614617650.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmp8t_hyua7/Snakefile\":  Keyword \"input\" at line 36 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Teichlab/sc_snakemake",
    "linting": "ModuleNotFoundError in line 2 of /tmp/tmp8t_hyua7/Snakefile:\nNo module named \u0027tqdm\u0027\n  File \"/tmp/tmp8t_hyua7/Snakefile\", line 2, in \u003cmodule\u003e\n  File \"/tmp/tmp8t_hyua7/utils/parse.py\", line 8, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1536609501.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmp57vngkoy/Snakefile\":  Keyword \"input\" at line 32 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "solida-core/diva.wgs",
    "linting": "KeyError in line 10 of /tmp/tmp57vngkoy/Snakefile:\n\u0027samples\u0027\n  File \"/tmp/tmp57vngkoy/Snakefile\", line 10, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1611907296.0
  },
  {
    "data_format": 1,
    "description": "Count your fastq-formatted rna-seq reads with Salmon",
    "formatting": "[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "gustaveroussy/rna-count-salmon",
    "linting": "TypeError in line 103 of /tmp/tmplhks204s/rules/common.smk:\nexpected str, bytes or os.PathLike object, not NoneType\n  File \"/tmp/tmplhks204s/Snakefile\", line 11, in \u003cmodule\u003e\n  File \"/tmp/tmplhks204s/rules/common.smk\", line 103, in \u003cmodule\u003e\n  File \"/tmp/tmplhks204s/rules/../scripts/common_script_rna_count_salmon.py\", line 208, in ref_link\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/posixpath.py\", line 142, in basename\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [
      "bioinformatics-pipeline",
      "salmon",
      "fastqc",
      "multiqc",
      "snakemake-workflow",
      "conda",
      "reproducible-workflows"
    ],
    "updated_at": 1586505888.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "SmitsG/Workflows-bi11",
    "linting": "ModuleNotFoundError in line 5 of /tmp/tmp31x4qz6q/Snakefile:\nNo module named \u0027Bio\u0027\n  File \"/tmp/tmp31x4qz6q/Snakefile\", line 5, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1531178141.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmplw9vpuvc/Snakefile\":  \u0027NoParametersError: L155: In envmodules definition.\u0027\n[INFO] In file \"/tmp/tmplw9vpuvc/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "vari-bbc/scRNAseq",
    "linting": "WorkflowError in line 20 of /tmp/tmplw9vpuvc/Snakefile:\nFailed to open /secondary/projects/bbc/research/shared_snakemake/rules/preprocess/convert2fastq_gz.\n  File \"/tmp/tmplw9vpuvc/Snakefile\", line 20, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1614259832.0
  },
  {
    "data_format": 1,
    "description": "Examples showcasing usage of snakemake in R data processing workflow",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Chr96er/snakemake_examples",
    "linting": "KeyError in line 32 of /tmp/tmpnanj1pii/Snakefile:\n\u0027workdir\u0027\n  File \"/tmp/tmpnanj1pii/Snakefile\", line 32, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1542236412.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "durrantmm/mustache_OLD",
    "linting": "Lints for rule all (line 45, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_taxonomy_db (line 62, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_genomes (line 78, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_insertseqs (line 98, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bowtie_build_genomes (line 118, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bowtie_build_insertseqs (line 143, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bowtie_align_to_genomes (line 168, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bowtie_align_to_insertseqs (line 199, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule split_genome_alignments (line 230, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule split_insertseq_alignments (line 250, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule split_sam_by_class (line 270, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sam_merge_taxonomy (line 309, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_sort (line 330, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_index (line 350, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule call_peaks (line 370, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_peaks (line 396, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1516747861.0
  },
  {
    "data_format": 1,
    "description": "A snakemake workflow for rapid execution of codiversification analysis",
    "formatting": "[ERROR] In file \"/tmp/tmpynv1ryu3/Snakefile\":  \u0027AttributeError: \u0027NoneType\u0027 object has no attribute \u0027group\u0027\u0027\n[INFO] In file \"/tmp/tmpynv1ryu3/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "tanaes/snakemake_codiversification",
    "linting": "KeyError in line 4 of /tmp/tmpynv1ryu3/Snakefile:\n\u0027envs\u0027\n  File \"/tmp/tmpynv1ryu3/Snakefile\", line 4, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1478835342.0
  },
  {
    "data_format": 1,
    "description": "snakemake workflow example for msprime",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "kr-colab/snakemake_example",
    "linting": "ModuleNotFoundError in line 1 of /tmp/tmp_0i5jf2x/Snakefile:\nNo module named \u0027msprime\u0027\n  File \"/tmp/tmp_0i5jf2x/Snakefile\", line 1, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1572649135.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ddesvillechabrol/pool_variant_calling",
    "linting": "Lints for snakefile /tmp/tmpr9fkjree/Snakefile:\n    * Absolute path \"/{sample}.fastq.gz\" in line 26:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 26:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 49:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 68:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 82:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 49:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 50:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 54:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule bwa_sample (line 31, /tmp/tmpr9fkjree/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule bwa_ref (line 69, /tmp/tmpr9fkjree/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule create_dict (line 107, /tmp/tmpr9fkjree/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mutect (line 139, /tmp/tmpr9fkjree/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_results (line 177, /tmp/tmpr9fkjree/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1457714169.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "durrantmm/genomic_ase_read_counting_workflow",
    "linting": "Lints for snakefile /tmp/tmpnbtq1nag/Snakefile:\n    * Path composition with \u0027+\u0027 in line 112:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule all (line 39, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bowtie2_build_genome (line 52, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bowtie2_map (line 75, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule add_read_groups (line 101, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mark_duplicates (line 121, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule make_snp_dir (line 142, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule find_intersecting_snps (line 171, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bowtie2_remap (line 203, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule remap_add_read_groups (line 229, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule remap_mark_duplicates (line 249, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule filter_remapped_reads (line 270, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_merge (line 295, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_sort (line 316, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_index (line 336, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule index_genome (line 356, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule create_genome_dictionary (line 376, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ase_read_counter (line 396, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1498256481.0
  },
  {
    "data_format": 1,
    "description": "Toy workflow for running on slurm cluster",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "hertzsprung/snakemake-slurm-demo",
    "linting": "Lints for rule clean (line 15, /tmp/tmpglvro9ve/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cpp (line 25, /tmp/tmpglvro9ve/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule cpp_local (line 50, /tmp/tmpglvro9ve/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1581418869.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "vitmy0000/SnaMP",
    "linting": "Lints for snakefile /tmp/tmpgkf3fk8c/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 87:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 96:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule mkdir (line 44, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule unzip (line 57, /tmp/tmpgkf3fk8c/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule join (line 77, /tmp/tmpgkf3fk8c/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable version from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * The version directive is deprecated:\n      It was meant for documenting tool version, but this has been replaced by\n      using the conda or container directive.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter (line 96, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable version from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * The version directive is deprecated:\n      It was meant for documenting tool version, but this has been replaced by\n      using the conda or container directive.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fq_2_fa (line 120, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable version from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * The version directive is deprecated:\n      It was meant for documenting tool version, but this has been replaced by\n      using the conda or container directive.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule strip (line 139, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule collapse (line 160, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable version from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * The version directive is deprecated:\n      It was meant for documenting tool version, but this has been replaced by\n      using the conda or container directive.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mkdb (line 179, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable version from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * The version directive is deprecated:\n      It was meant for documenting tool version, but this has been replaced by\n      using the conda or container directive.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule blast (line 201, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable version from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * The version directive is deprecated:\n      It was meant for documenting tool version, but this has been replaced by\n      using the conda or container directive.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule blast_parse (line 228, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_otu_table (line 244, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qc (line 264, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean (line 284, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1488999657.0
  },
  {
    "data_format": 1,
    "description": "For designing RT primers with blast search, tm constraints, etc",
    "formatting": "[ERROR] In file \"/tmp/tmpkws3ejk7/Snakefile\":  \u0027NoParametersError: L37: In log definition.\u0027\n[INFO] In file \"/tmp/tmpkws3ejk7/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "bfairkun/design-mpeseq-primers",
    "linting": "Lints for rule MakeBlastDatabase (line 20, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule FastaIndex (line 41, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule DetermineLowcomplexityRegions (line 60, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule SortTargetSpliceSites (line 86, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule SortRepeatRegions (line 110, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule SortAnnotatedExons (line 153, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule SortRNASeq (line 196, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param GenomeFasta is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule CreateWindowsForCandidatePrimersFromTargetList (line 246, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule CreateAllCandidatePrimerSequencesFromWindows (line 277, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule FilterOutPrimersByTm (line 308, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule FilterOutPrimersThatOverlapRepetitiveRegions (line 337, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule BlastCandidatePrimers (line 367, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule CalculateExpressionOfBlastHits (line 400, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule InSilicoPredictionOfOnAndOffTargetCounts (line 425, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ScorePrimersAndPickTheBestForEachTarget (line 454, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1562171066.0
  },
  {
    "data_format": 1,
    "description": "Collection of functions for running/interacting with SHAPEIT from a python environment",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "hardingnj/snakeit",
    "linting": "ModuleNotFoundError in line 4 of /tmp/tmp29ul98f5/Snakefile:\nNo module named \u0027sh\u0027\n  File \"/tmp/tmp29ul98f5/Snakefile\", line 4, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1494257821.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "durrantmm/ISHunter",
    "linting": "Lints for rule all (line 22, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule filter_contigs (line 34, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule find_inverted_repeats (line 60, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter_contigs_inverted_repeats (line 89, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule blastx_contigs (line 114, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_genbank (line 142, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule ensure_genbank_dir (line 167, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule identify_transposases (line 182, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1502315546.0
  },
  {
    "data_format": 1,
    "description": "BMX-Seq: Brain Metastasis Xenograft Sequencing Pipeline",
    "formatting": "[WARNING] In file \"/tmp/tmp2fklehwd/Snakefile\":  Keyword \"input\" at line 74 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp2fklehwd/Snakefile\":  Keyword \"input\" at line 84 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp2fklehwd/Snakefile\":  Keyword \"script\" at line 165 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "zz2liu/bmx_seq",
    "linting": "WorkflowError in line 25 of /tmp/tmp2fklehwd/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmp2fklehwd/Snakefile\", line 25, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1541166876.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "stan-fmrg/Snakemake_haps",
    "linting": "WorkflowError in line 6 of /tmp/tmp09cwg628/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmp09cwg628/Snakefile\", line 6, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1538492907.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ngs-docs/2020-ggg-201b-rnaseq",
    "linting": "Lints for snakefile /tmp/tmp39g6a2xa/Snakefile:\n    * Path composition with \u0027+\u0027 in line 89:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule download_reads (line 25, /tmp/tmp39g6a2xa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fastqc_raw (line 47, /tmp/tmp39g6a2xa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule download_trimmomatic_adapter_file (line 76, /tmp/tmp39g6a2xa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule quality_trim (line 94, /tmp/tmp39g6a2xa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc_trimmed (line 120, /tmp/tmp39g6a2xa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule multiqc (line 148, /tmp/tmp39g6a2xa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param raw_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param trimmed_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule download_yeast_transcriptome (line 180, /tmp/tmp39g6a2xa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule salmon_index (line 198, /tmp/tmp39g6a2xa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule salmon_quantify (line 223, /tmp/tmp39g6a2xa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 4,
    "topics": [],
    "updated_at": 1609950185.0
  },
  {
    "data_format": 1,
    "description": "This is the epiGBS2 snakemake pipeline as published in a preprint version.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "nioo-knaw/epiGBS2",
    "linting": "FileNotFoundError in line 4 of /tmp/tmpxajkb4k_/src/rules/demultiplex.rules:\n[Errno 2] No such file or directory: \u0027/mnt/nfs/bioinfdata/home/NIOO/fleurg/epiGBS/data/barcodes.tsv\u0027\n  File \"/tmp/tmpxajkb4k_/Snakefile\", line 8, in \u003cmodule\u003e\n  File \"/tmp/tmpxajkb4k_/src/rules/demultiplex.rules\", line 4, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 610, in read_csv\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1614096966.0
  },
  {
    "data_format": 1,
    "description": "Pipeline for the analysis of Single-end ChIP-seq data",
    "formatting": "[WARNING] In file \"/tmp/tmp1m1qs3r2/rules/pre_processing.smk\":  Keyword \"input\" at line 68 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp1m1qs3r2/rules/pre_processing.smk\":  Keyword \"shell\" at line 83 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp1m1qs3r2/rules/pre_processing.smk\":  Keyword \"shell\" at line 116 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "JihedC/ChIP_seq_SE_Snakemake",
    "linting": "Lints for snakefile /tmp/tmp1m1qs3r2/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 68:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 69:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 70:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 71:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 72:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 73:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 74:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 75:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 76:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 77:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 78:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 80:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 81:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 118:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 119:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp1m1qs3r2/rules/external_data.smk:\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp1m1qs3r2/rules/pre_processing.smk:\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 8:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 39:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 41:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 42:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 44:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 54:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 69:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 70:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 76:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 94:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 96:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 100:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 107:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 109:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 110:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 113:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 125:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 127:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 129:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 56:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp1m1qs3r2/rules/macs2_peak_calling.smk:\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 14:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 24:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 26:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 35:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp1m1qs3r2/rules/deeptools_post_processing.smk:\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 9:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 31:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 32:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 34:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 38:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 65:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 73:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 87:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 89:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 91:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 116:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 117:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 128:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 146:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 147:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 158:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 173:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 175:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 180:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 184:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 198:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 200:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 217:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 219:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 220:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 228:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule all (line 89, /tmp/tmp1m1qs3r2/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable WORKING_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule get_genome_fasta (line 1, /tmp/tmp1m1qs3r2/rules/external_data.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable GENOME_FASTA_URL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule get_gff (line 19, /tmp/tmp1m1qs3r2/rules/external_data.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable GFF_URL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule gff_to_gtf (line 36, /tmp/tmp1m1qs3r2/rules/external_data.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule index (line 97, /tmp/tmp1m1qs3r2/rules/pre_processing.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule multiBamSummary (line 87, /tmp/tmp1m1qs3r2/rules/deeptools_post_processing.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plotFingerprint (line 359, /tmp/tmp1m1qs3r2/rules/deeptools_post_processing.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1542901260.0
  },
  {
    "data_format": 1,
    "description": "bioinformatics tutorial demonstrating a simple workflow for cDNA based differential gene expression using minimap2, Rsubread and DESeq2",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "callumparr/ont_tutorial_cdna_deseq2",
    "linting": "Lints for snakefile /tmp/tmp1i6e3mbn/Snakefile:\n    * Path composition with \u0027+\u0027 in line 37:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 76:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 36:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule download_reference_genome (line 53, /tmp/tmp1i6e3mbn/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_genome_annotation (line 69, /tmp/tmp1i6e3mbn/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule minimap_ref_idx (line 84, /tmp/tmp1i6e3mbn/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule minimap (line 107, /tmp/tmp1i6e3mbn/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule flagstat (line 131, /tmp/tmp1i6e3mbn/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1608045959.0
  },
  {
    "data_format": 1,
    "description": "Snakemake based analysis pipeline to identify m6As from eCLIP data",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ajlabuc/meCLIP",
    "linting": "Lints for rule ip_fastqc_preAdapters (line 15, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ip_umitools_extract (line 45, /tmp/tmpp355swaa/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ip_cutadapt_round1 (line 75, /tmp/tmpp355swaa/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ip_cutadapt_round2 (line 106, /tmp/tmpp355swaa/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ip_fastqc_postAdapters (line 134, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ip_STAR_repbase (line 164, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ip_STAR_genome (line 202, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ip_umitools_dedup (line 238, /tmp/tmpp355swaa/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ip_samtools_mpileup (line 278, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ip_meCLIP (line 304, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ip_formatOutput (line 341, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule input_fastqc_preAdapters (line 371, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule input_umitools_extract (line 402, /tmp/tmpp355swaa/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule input_cutadapt_round1 (line 432, /tmp/tmpp355swaa/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule input_cutadapt_round2 (line 463, /tmp/tmpp355swaa/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule input_fastqc_postAdapters (line 491, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule input_STAR_repbase (line 521, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule input_STAR_genome (line 559, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule input_umitools_dedup (line 595, /tmp/tmpp355swaa/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule input_samtools_mpileup (line 635, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule input_meCLIP (line 661, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule input_formatOutput (line 698, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule meCLIP_inputParser (line 728, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule meCLIP_bedGenerator (line 751, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bedtools (line 777, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule meCLIP_m6aAnnotator (line 803, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule metaPlotR_perl (line 825, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule metaPlotR_R (line 855, /tmp/tmpp355swaa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1607966123.0
  },
  {
    "data_format": 1,
    "description": "Infer network from count data within Snakemake using a sparse Poisson lognormal model (PLNnetwork)",
    "formatting": "[ERROR] In file \"/tmp/tmppaxie1_j/workflow/Snakefile\":  \u0027EmptyContextError: L51: rule pln_stability_selection has no keywords attached to it.\u0027\n[INFO] In file \"/tmp/tmppaxie1_j/workflow/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmppaxie1_j/workflow/Snakefile\":  1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "cpauvert/PLNnetwork-workflow",
    "linting": "WorkflowError in line 6 of /tmp/tmppaxie1_j/workflow/rules/common.smk:\nConfig file config.yaml not found.\n  File \"/tmp/tmppaxie1_j/workflow/Snakefile\", line 5, in \u003cmodule\u003e\n  File \"/tmp/tmppaxie1_j/workflow/rules/common.smk\", line 6, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "snakemake",
      "snakemake-workflows",
      "microbiome-analysis",
      "network-inference",
      "count-data"
    ],
    "updated_at": 1605801399.0
  },
  {
    "data_format": 1,
    "description": "TIGER Snakemake pipeline",
    "formatting": "[WARNING] In file \"/tmp/tmpwj7qrf7w/workflow/rules/01_mapping.smk\":  Keyword \"params\" at line 47 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmpwj7qrf7w/workflow/rules/07_make_tiger_output.smk\":  \u0027NoParametersError: L18: In resources definition.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ibebio/tiger-pipeline",
    "linting": "/tmp/tmpwj7qrf7w/workflow/rules/common.smk:16: ParserWarning: Falling back to the \u0027python\u0027 engine because the \u0027c\u0027 engine does not support regex separators (separators \u003e 1 char and different from \u0027\\s+\u0027 are interpreted as regex); you can avoid this warning by specifying engine=\u0027python\u0027.\n  # validate(samples, schema=\"../schemas/samples.schema.yaml\")\nLints for snakefile /tmp/tmpwj7qrf7w/workflow/Snakefile:\n    * Deprecated singularity directive used for container definition in line 8.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpwj7qrf7w/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 7.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule remove_transposable_elements (line 267, /tmp/tmpwj7qrf7w/workflow/rules/03_prepare_marker_files.smk):\n    * Param vcf_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1607072584.0
  },
  {
    "data_format": 1,
    "description": "A snakemake workflow for GWAS.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "maehler/gwas-workflow",
    "linting": "Lints for snakefile /tmp/tmpaydlowyc/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule cluster_config (line 57, /tmp/tmpaydlowyc/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule gemma (line 78, /tmp/tmpaydlowyc/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule link_relatedness (line 128, /tmp/tmpaydlowyc/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule gemma_relatedness (line 148, /tmp/tmpaydlowyc/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule setup_plink_traits (line 196, /tmp/tmpaydlowyc/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule link_plink (line 220, /tmp/tmpaydlowyc/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param output_directory is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule plink (line 242, /tmp/tmpaydlowyc/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param plink_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule link_variants (line 290, /tmp/tmpaydlowyc/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1575357364.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": null,
    "full_name": "thomasbtf/snakemake-workflow-book-popularity",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614458083.0
  },
  {
    "data_format": 1,
    "description": "This workflow performs CLIP peak calling using omniCLIP.",
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "simojoe/omniCLIP-workflow",
    "linting": "Lints for snakefile /tmp/tmpqua5vjlp/workflow/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpqua5vjlp/workflow/rules/common.smk:\n    * Path composition with \u0027+\u0027 in line 49:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule download_chrs (line 2, /tmp/tmpqua5vjlp/workflow/rules/download.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_annotation (line 24, /tmp/tmpqua5vjlp/workflow/rules/download.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_genome (line 52, /tmp/tmpqua5vjlp/workflow/rules/download.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_SRR_PE_datasets (line 76, /tmp/tmpqua5vjlp/workflow/rules/download.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_SRR_SE_datasets (line 101, /tmp/tmpqua5vjlp/workflow/rules/download.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule STAR_genomeGenerate (line 1, /tmp/tmpqua5vjlp/workflow/rules/rnaseq.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule STAR_CLIP_alignment (line 54, /tmp/tmpqua5vjlp/workflow/rules/rnaseq.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param out_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule sort_index_BAM (line 118, /tmp/tmpqua5vjlp/workflow/rules/rnaseq.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule git_omniCLIP (line 2, /tmp/tmpqua5vjlp/workflow/rules/omniCLIP.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param omni_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule compile_omniCLIP_requirements (line 34, /tmp/tmpqua5vjlp/workflow/rules/omniCLIP.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule prepare_omniCLIP_annotation (line 62, /tmp/tmpqua5vjlp/workflow/rules/omniCLIP.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param omni_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule prepare_bg_dat (line 102, /tmp/tmpqua5vjlp/workflow/rules/omniCLIP.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule prepare_clip_dat (line 145, /tmp/tmpqua5vjlp/workflow/rules/omniCLIP.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule run_omniCLIP (line 190, /tmp/tmpqua5vjlp/workflow/rules/omniCLIP.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param omni_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1595617585.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpct50j5yy/workflow/Snakefile\":  \u0027NoParametersError: L34: In input definition.\u0027\n[INFO] In file \"/tmp/tmpct50j5yy/workflow/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "royhaast/b1corr-smk",
    "linting": "WorkflowError in line 5 of /tmp/tmpct50j5yy/workflow/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmpct50j5yy/workflow/Snakefile\", line 5, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1596235610.0
  },
  {
    "data_format": 1,
    "description": "Machine Learning for GEnomics",
    "formatting": "[ERROR] In file \"/tmp/tmp6vhz6g3r/rules/pfam.smk\":  \u0027InvalidParameterSyntax: 13\"../envs/hmmer.yaml\"\n log:\"logs/pfam/{genome}.log\"\n\u0027\n[ERROR] In file \"/tmp/tmp6vhz6g3r/rules/cog.smk\":  \u0027InvalidParameterSyntax: 26outdir=OUTDIR\n log: LOGDIR/\"cog2/{genome}.log\"\n shell:\"perl {params.dbdir}/cdd2cog2.pl -r {input} -c {params.dbdir}/cddid.tbl -f {params.dbdir}/fun.txt -w {params.dbdir}/whog -o {params.outdir}/{wildcards.genome} 2\u003e {log}\"\n\n\u0027\n[ERROR] In file \"/tmp/tmp6vhz6g3r/rules/cazymes.smk\":  \u0027InvalidParameterSyntax: 16LOGDIR/\"cazymes/{genome}.log\"\n shell:\n\"\"\"\n\t\tpython3 scripts/run_dbcan.py --db_dir {params.dbdir}/db/  --out_pre {wildcards.genome}  {input.genome_faa} protein 2\u003e {log} \n\t\tmv output/* {params.outdir}\n\t\t\"\"\"\n\n\u0027\n[ERROR] In file \"/tmp/tmp6vhz6g3r/rules/prokka.smk\":  \u0027InvalidParameterSyntax: L6:Invalid key INPUTDIR/ GENOME_EXTENSION\n output:\n faa\u0027\n[INFO] In file \"/tmp/tmp6vhz6g3r/rules/prokka.smk\":  4 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmp6vhz6g3r/rules/prokka.smk\":  5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "sandragodinhosilva/MeLanGE",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "genomics",
      "snakemake-workflows",
      "machine-learning",
      "snakemake",
      "workflow"
    ],
    "updated_at": 1613236882.0
  },
  {
    "data_format": 1,
    "description": "Test usage of renv in a Snakemake pipeline",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "kevinrue/snakemake_renv",
    "linting": "Lints for snakefile /tmp/tmp3r0r0ag8/workflow/Snakefile:\n    * Deprecated singularity directive used for container definition in line 8.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp3r0r0ag8/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 6.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule installed_packages (line 3, /tmp/tmp3r0r0ag8/workflow/rules/other.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule session_info (line 23, /tmp/tmp3r0r0ag8/workflow/rules/other.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule renv (line 43, /tmp/tmp3r0r0ag8/workflow/rules/other.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1593955977.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 11 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "LabLuco/snakemake_align_MAJIQ",
    "linting": "WorkflowError in line 6 of /tmp/tmpk0wz7n78/workflow/rules/common.smk:\nConfig file ../config/config.yaml not found.\n  File \"/tmp/tmpk0wz7n78/workflow/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpk0wz7n78/workflow/rules/common.smk\", line 6, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614608191.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "kevinrue/snakemake_minimal_example",
    "linting": "Lints for snakefile /tmp/tmp4wzfrhlb/workflow/Snakefile:\n    * Deprecated singularity directive used for container definition in line 8.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp4wzfrhlb/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 6.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cat (line 3, /tmp/tmp4wzfrhlb/workflow/rules/other.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1592238824.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline for 10X using cellranger count",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "kevinrue/snakemake_cellranger_count",
    "linting": "Lints for snakefile /tmp/tmp337_978l/workflow/rules/cellranger.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule cellranger_count (line 58, /tmp/tmp337_978l/workflow/rules/cellranger.smk):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1594824773.0
  },
  {
    "data_format": 1,
    "description": "align and deduplicate paired reads from MPE-seq protocol",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "bfairkun/201907_mpe-seq_processing",
    "linting": "Lints for snakefile /tmp/tmpoozh7t_g/Snakefile:\n    * Absolute path \"/bin/bash\" in line 3:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 10:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 22:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpoozh7t_g/rules/STAR_Alignment.smk:\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 22:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 24:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 36:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 37:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 39:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 42:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 53:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 55:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 57:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 64:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 66:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 68:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 78:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 80:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 81:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 83:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 96:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 97:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 99:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 100:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 109:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 110:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 112:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 114:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 122:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 123:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 125:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 127:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule STAR_make_index (line 2, /tmp/tmpoozh7t_g/rules/STAR_Alignment.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param genomeDir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule umi_tools_extract (line 34, /tmp/tmpoozh7t_g/rules/STAR_Alignment.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n\nLints for rule STAR_alignment (line 68, /tmp/tmpoozh7t_g/rules/STAR_Alignment.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable genomeDir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable output_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable output_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule index_RNA_seq_bams (line 106, /tmp/tmpoozh7t_g/rules/STAR_Alignment.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule remove_unextended_primer (line 199, /tmp/tmpoozh7t_g/rules/STAR_Alignment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable use from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable print from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule CountJunctions_Orig (line 226, /tmp/tmpoozh7t_g/rules/STAR_Alignment.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule CountJunctions_Dedup (line 254, /tmp/tmpoozh7t_g/rules/STAR_Alignment.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1566398972.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "hans-vg/snakemake_basespace_merge_qc",
    "linting": "Lints for snakefile /tmp/tmp3adc59sa/Snakefile:\n    * Absolute path \"/{proj}-{randint}_L{lanenum1}_ds.{bsstring}/{sample}_L{lanenum}_R1_001.fastq.gz\" in line 9:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{proj}-{randint}_L{lanenum1}_ds.{bsstring}/{sample}_L{lanenum}_R2_001.fastq.gz\" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/*/{sample}_L*_R1_001.fastq.gz\" in line 22:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/*/{sample}_L*_R2_001.fastq.gz\" in line 27:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 22:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 27:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule mergeFastqR1 (line 29, /tmp/tmp3adc59sa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mergeFastqR2 (line 45, /tmp/tmp3adc59sa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1612985230.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for running cellphonedb.",
    "formatting": "[WARNING] In file \"/tmp/tmpf8jskvsv/rules/cellphonedb.smk\":  Keyword \"output\" at line 16 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 2 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "racng/single-cell-cellphonedb",
    "linting": "Lints for snakefile /tmp/tmpf8jskvsv/rules/cellphonedb.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule samples (line 1, /tmp/tmpf8jskvsv/rules/cellphonedb.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule prep_counts (line 24, /tmp/tmpf8jskvsv/rules/cellphonedb.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule run_cellphoendb (line 50, /tmp/tmpf8jskvsv/rules/cellphonedb.smk):\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1606168873.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline for quantitation of single-cell data using salmon alevin",
    "formatting": "[INFO] 4 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "kevinrue/snakemake_alevin_quant",
    "linting": "Lints for snakefile /tmp/tmpl9cvwf0k/workflow/Snakefile:\n    * Deprecated singularity directive used for container definition in line 8.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpl9cvwf0k/workflow/rules/common.smk:\n    * Path composition with \u0027+\u0027 in line 20:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Deprecated singularity directive used for container definition in line 6.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule alevin (line 4, /tmp/tmpl9cvwf0k/workflow/rules/alevin.smk):\n    * Shell command directly uses variable DATETIME from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable DATETIME from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1595585578.0
  },
  {
    "data_format": 1,
    "description": "Template snakemake pipeline for minimal tests",
    "formatting": "[ERROR] In file \"/tmp/tmp6t0tw8f6/workflow/Snakefile\":  \u0027NoParametersError: L17: In input definition.\u0027\n[INFO] In file \"/tmp/tmp6t0tw8f6/workflow/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmp6t0tw8f6/workflow/Snakefile\":  1 file(s) would be changed \ud83d\ude2c\n[INFO] In file \"/tmp/tmp6t0tw8f6/workflow/Snakefile\":  1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "kevinrue/snakemake_test",
    "linting": "Lints for snakefile /tmp/tmp6t0tw8f6/workflow/Snakefile:\n    * Deprecated singularity directive used for container definition in line 8.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp6t0tw8f6/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 6.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1598438409.0
  },
  {
    "data_format": 1,
    "description": "Finding virus integration sites from whole genome nanopore sequence",
    "formatting": "[INFO] 2 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "kpalin/VirusIntegrationFinder",
    "linting": "FileNotFoundError in line 12 of /tmp/tmps5j6jpu9/workflow/rules/common.smk:\n[Errno 2] No such file or directory: \u0027/mnt/cgnano/projects/promethion/190612/ont_pipe_Yin/lenti_cas9_find/possible insert.txt\u0027\n  File \"/tmp/tmps5j6jpu9/workflow/Snakefile\", line 10, in \u003cmodule\u003e\n  File \"/tmp/tmps5j6jpu9/workflow/rules/common.smk\", line 12, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1613478061.0
  },
  {
    "data_format": 1,
    "description": "workflow-rymo1354 created by GitHub Classroom",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "cu-swe4s-fall-2019/workflow-rymo1354",
    "linting": "Lints for rule tissue_samples (line 15, /tmp/tmpzxiriwt0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable TISSUE_GROUP from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule gene_sample_counts (line 34, /tmp/tmpzxiriwt0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable GENES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule box_plot (line 57, /tmp/tmpzxiriwt0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable GENES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable TISSUES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable TISSUE_GROUP from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1574380615.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline for 10X using salmon alevin",
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "kevinrue/snakemake_alevin_10x",
    "linting": "Lints for snakefile /tmp/tmp421rp1d9/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 6.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule genome (line 5, /tmp/tmp421rp1d9/workflow/rules/salmon.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule transcriptome (line 21, /tmp/tmp421rp1d9/workflow/rules/salmon.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule genesets (line 37, /tmp/tmp421rp1d9/workflow/rules/salmon.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule decoys (line 53, /tmp/tmp421rp1d9/workflow/rules/salmon.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule concatenate_genome_transcriptome (line 81, /tmp/tmp421rp1d9/workflow/rules/salmon.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1594369040.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline running `cellranger mkref`",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "kevinrue/snakemake_cellranger_mkref",
    "linting": "Lints for snakefile /tmp/tmp6f0ndi8_/workflow/Snakefile:\n    * Deprecated singularity directive used for container definition in line 8.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp6f0ndi8_/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 6.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp6f0ndi8_/workflow/rules/cellranger.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule cellranger_mkref (line 72, /tmp/tmp6f0ndi8_/workflow/rules/cellranger.smk):\n    * Shell command directly uses variable DATETIME from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable DATETIME from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1594824950.0
  },
  {
    "data_format": 1,
    "description": "Tract-weighted functional connectivity snakemake workflow - WIP",
    "formatting": "[INFO] 2 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "akhanf/tract-fconn-smk",
    "linting": "Lints for snakefile /tmp/tmpi2bdhk33/workflow/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule visualize_connectome (line 375, /tmp/tmpi2bdhk33/workflow/rules/mrtrix.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1590467060.0
  },
  {
    "data_format": 1,
    "description": "Template repository for snakemake neuroimaging workflows",
    "formatting": "[ERROR] In file \"/tmp/tmp5jmmj0n9/workflow/Snakefile\":  \u0027NoParametersError: L26: In input definition.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "akhanf/snakemake_neuroworkflow",
    "linting": "Lints for snakefile /tmp/tmp5jmmj0n9/workflow/rules/common.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1596039808.0
  },
  {
    "data_format": 1,
    "description": "Snakemake example workflow with singularity",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "zavolanlab/snakemake_example_workflow",
    "linting": "Lints for snakefile /tmp/tmpy7va10h3/Snakefile:\n    * Deprecated singularity directive used for container definition in line 12.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 25.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 47.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 67.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1578410137.0
  },
  {
    "data_format": 1,
    "description": "Demonstration Snakemake workflow for Ronin/AWS Slurm-based auto-scaling cluster",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "nathanhaigh/ronin_snakemake_demo",
    "linting": "Lints for snakefile /tmp/tmp36n000s7/Snakefile:\n    * Absolute path \"/\u003e\u003cAttribute name = \" in line 41:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Deprecated singularity directive used for container definition in line 3.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule annotation (line 28, /tmp/tmp36n000s7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule genome (line 48, /tmp/tmp36n000s7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule transcriptome (line 67, /tmp/tmp36n000s7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule reads (line 83, /tmp/tmp36n000s7/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "snakemake",
      "ronin",
      "aws",
      "aws-parallelcluster"
    ],
    "updated_at": 1588569193.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline to generate a reference index for Salmon Alevin",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "kevinrue/snakemake_alevin_index",
    "linting": "Lints for snakefile /tmp/tmp49yhtzbb/workflow/Snakefile:\n    * Deprecated singularity directive used for container definition in line 12.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp49yhtzbb/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 6.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule genome (line 5, /tmp/tmp49yhtzbb/workflow/rules/salmon.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule transcriptome (line 21, /tmp/tmp49yhtzbb/workflow/rules/salmon.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule genesets (line 37, /tmp/tmp49yhtzbb/workflow/rules/salmon.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule decoys (line 53, /tmp/tmp49yhtzbb/workflow/rules/salmon.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule gentrome (line 81, /tmp/tmp49yhtzbb/workflow/rules/salmon.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule salmon_index (line 106, /tmp/tmp49yhtzbb/workflow/rules/salmon.smk):\n    * Shell command directly uses variable DATETIME from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable DATETIME from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1595515551.0
  },
  {
    "data_format": 1,
    "description": "Snakemake example",
    "formatting": "[ERROR] In file \"/tmp/tmppadpt0de/workflow/Snakefile\":  \u0027NoParametersError: L17: In input definition.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "karatugo/snakemake-example",
    "linting": "Lints for snakefile /tmp/tmppadpt0de/workflow/Snakefile:\n    * Deprecated singularity directive used for container definition in line 8.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmppadpt0de/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 6.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1599650945.0
  },
  {
    "data_format": 1,
    "description": "Genome assembly evaluation workflow",
    "formatting": "[INFO] 7 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "percyfal/assemblyeval-smk",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1605568468.0
  },
  {
    "data_format": 1,
    "description": "Pipeline for processing functional data of the 7T MELAS study",
    "formatting": "[WARNING] In file \"/tmp/tmpmrzag7jx/workflow/Snakefile\":  Keyword \"input\" at line 23 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "royhaast/smk-melas",
    "linting": "Lints for snakefile /tmp/tmpmrzag7jx/workflow/rules/preprocessing.smk:\n    * Deprecated singularity directive used for container definition in line 9.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 30.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 48.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 67.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 84.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 103.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 123.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 136.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpmrzag7jx/workflow/rules/coregistration.smk:\n    * Deprecated singularity directive used for container definition in line 16.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 34.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 69.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 93.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 108.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 131.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 149.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 164.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpmrzag7jx/workflow/rules/cifti.smk:\n    * Deprecated singularity directive used for container definition in line 124.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 140.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 153.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 164.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slicetimer (line 1, /tmp/tmpmrzag7jx/workflow/rules/preprocessing.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n\nLints for rule apply_gradient_unwarp (line 88, /tmp/tmpmrzag7jx/workflow/rules/preprocessing.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule prep_topup (line 134, /tmp/tmpmrzag7jx/workflow/rules/preprocessing.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mask_epi (line 299, /tmp/tmpmrzag7jx/workflow/rules/preprocessing.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule inverse_bbr (line 49, /tmp/tmpmrzag7jx/workflow/rules/coregistration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule apply_bbr (line 86, /tmp/tmpmrzag7jx/workflow/rules/coregistration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule inverse_fnirt (line 214, /tmp/tmpmrzag7jx/workflow/rules/coregistration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ica_aroma (line 295, /tmp/tmpmrzag7jx/workflow/rules/coregistration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule transform_ica_aroma (line 331, /tmp/tmpmrzag7jx/workflow/rules/coregistration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule convert_surfaces (line 3, /tmp/tmpmrzag7jx/workflow/rules/surface.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule generate_midthickness (line 30, /tmp/tmpmrzag7jx/workflow/rules/surface.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_tkr2scanner (line 57, /tmp/tmpmrzag7jx/workflow/rules/surface.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_scanner2epi (line 84, /tmp/tmpmrzag7jx/workflow/rules/surface.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule apply_surf_tkr2scanner (line 113, /tmp/tmpmrzag7jx/workflow/rules/surface.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule apply_surf_scanner2epi (line 141, /tmp/tmpmrzag7jx/workflow/rules/surface.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule apply_surf_scanner2mni (line 169, /tmp/tmpmrzag7jx/workflow/rules/surface.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule resample_surface (line 200, /tmp/tmpmrzag7jx/workflow/rules/surface.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule inflate_surface (line 226, /tmp/tmpmrzag7jx/workflow/rules/surface.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule volume_to_surface (line 259, /tmp/tmpmrzag7jx/workflow/rules/surface.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule volume_to_surface_aroma (line 292, /tmp/tmpmrzag7jx/workflow/rules/surface.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule resample_surface_data (line 327, /tmp/tmpmrzag7jx/workflow/rules/surface.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule resample_surface_data_aroma (line 358, /tmp/tmpmrzag7jx/workflow/rules/surface.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule transform_rois (line 3, /tmp/tmpmrzag7jx/workflow/rules/cifti.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule extract_rois (line 49, /tmp/tmpmrzag7jx/workflow/rules/cifti.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule generate_subcortical_labels (line 95, /tmp/tmpmrzag7jx/workflow/rules/cifti.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule generate_dense_labels (line 120, /tmp/tmpmrzag7jx/workflow/rules/cifti.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule create_dtseries (line 146, /tmp/tmpmrzag7jx/workflow/rules/cifti.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule create_dtseries_aroma (line 180, /tmp/tmpmrzag7jx/workflow/rules/cifti.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule extract_confounds (line 214, /tmp/tmpmrzag7jx/workflow/rules/cifti.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule parcellate_dtseries (line 330, /tmp/tmpmrzag7jx/workflow/rules/cifti.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule correlate_ptseries (line 362, /tmp/tmpmrzag7jx/workflow/rules/cifti.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1614212243.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmptwvdk4lc/rules/fpkm.smk\":  \u0027NoParametersError: L68: In params definition.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "hans-vg/snakemake_rnaseq_workflow",
    "linting": "KeyError in line 12 of /tmp/tmptwvdk4lc/Snakefile:\n\u0027samples\u0027\n  File \"/tmp/tmptwvdk4lc/Snakefile\", line 12, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614379131.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpn5yvpqo7/Snakefile\":  \u0027IndexError: pop from empty list\u0027\n[INFO] In file \"/tmp/tmpn5yvpqo7/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "skurscheid/snakemake",
    "linting": "SyntaxError in line 16 of /tmp/tmpn5yvpqo7/Snakefile:\nEOF in multi-line statement (Snakefile, line 16)\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1570492914.0
  },
  {
    "data_format": 1,
    "description": "tweaking chipseq workflow for ATACseq",
    "formatting": "[WARNING] In file \"/tmp/tmpneznj603/workflow/rules/filtering.smk\":  Keyword \"params\" at line 6 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpneznj603/workflow/rules/filtering.smk\":  Inline-formatted keyword \"threads\" at line 56 had its comments relocated above it.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 10 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "AnnaLorenc/ATACseq",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1603204022.0
  },
  {
    "data_format": 1,
    "description": "adat",
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Mar111tiN/DNAseq-GATK-Haplo",
    "linting": "FileNotFoundError in line 18 of /tmp/tmpge7ifz0v/rules/common.smk:\n[Errno 2] No such file or directory: \u0027data/ref/genome.chr21.fa.fai\u0027\n  File \"/tmp/tmpge7ifz0v/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpge7ifz0v/rules/common.smk\", line 18, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 684, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 457, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 814, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1045, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1862, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1357, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 639, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1551012620.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for structural connectome using mrtrix3 (loading BIDS data from prepdwi, fmriprep)",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "akhanf/structural_connectome_smk",
    "linting": "ModuleNotFoundError in line 3 of /tmp/tmp12p_7jim/Snakefile:\nNo module named \u0027bids\u0027\n  File \"/tmp/tmp12p_7jim/Snakefile\", line 3, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1587729220.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpwkk5l3dp/rules/mapping.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 4:7: output:\n```\nwhile formatting code with black.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "fischuu/Pipeline-WGS-GATK",
    "linting": "KeyError in line 9 of /tmp/tmpwkk5l3dp/Snakefile:\n\u0027samples\u0027\n  File \"/tmp/tmpwkk5l3dp/Snakefile\", line 9, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1593208342.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow to evaluate peak calling",
    "formatting": "[WARNING] In file \"/tmp/tmpssu7i1p0/workflow/Snakefile\":  Keyword \"input\" at line 12 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "knutdrand/peak-eval",
    "linting": "Lints for snakefile /tmp/tmpssu7i1p0/workflow/Snakefile:\n    * Deprecated singularity directive used for container definition in line 8.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpssu7i1p0/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 6.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpssu7i1p0/workflow/rules/encode.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule macs_wo_control (line 6, /tmp/tmpssu7i1p0/workflow/rules/peakcalling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable genomesize from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule hmmacs_wo_control (line 25, /tmp/tmpssu7i1p0/workflow/rules/peakcalling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule filter_hmmacs (line 45, /tmp/tmpssu7i1p0/workflow/rules/peakcalling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule callpeak_w_control (line 64, /tmp/tmpssu7i1p0/workflow/rules/peakcalling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable genomesize from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule move_macs_peaks (line 85, /tmp/tmpssu7i1p0/workflow/rules/peakcalling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule summit_regions (line 104, /tmp/tmpssu7i1p0/workflow/rules/peakcalling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_meme (line 4, /tmp/tmpssu7i1p0/workflow/rules/motifs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sort_peaks (line 16, /tmp/tmpssu7i1p0/workflow/rules/motifs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_peak_sequences (line 35, /tmp/tmpssu7i1p0/workflow/rules/motifs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule motif_enrichment (line 58, /tmp/tmpssu7i1p0/workflow/rules/motifs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule motif_plot (line 78, /tmp/tmpssu7i1p0/workflow/rules/motifs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule join_plot (line 99, /tmp/tmpssu7i1p0/workflow/rules/motifs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule encode_download (line 1, /tmp/tmpssu7i1p0/workflow/rules/encode.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule region_bamtobed (line 29, /tmp/tmpssu7i1p0/workflow/rules/encode.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sortbed (line 49, /tmp/tmpssu7i1p0/workflow/rules/encode.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1603349411.0
  },
  {
    "data_format": 1,
    "description": "Experimental workflow for ATAC-seq data analysis using snakemake",
    "formatting": "[INFO] 2 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "mhebrard/smk-ATAC-seq",
    "linting": "KeyError in line 7 of /tmp/tmpcb93ruft/Snakefile:\n\u0027genome\u0027\n  File \"/tmp/tmpcb93ruft/Snakefile\", line 7, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1546502933.0
  },
  {
    "data_format": 1,
    "description": "Benchmark of methods for 10X single-cell RNA-sequencing",
    "formatting": "[ERROR] In file \"/tmp/tmpwcuzqniy/workflow/Snakefile\":  \u0027NoParametersError: L17: In input definition.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "kevinrue/10x-benchmark-rna",
    "linting": "Lints for snakefile /tmp/tmpwcuzqniy/workflow/Snakefile:\n    * Deprecated singularity directive used for container definition in line 8.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpwcuzqniy/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 6.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1594393499.0
  },
  {
    "data_format": 1,
    "description": "CODA microbiome-analysis using aldex2, pylofactorisation",
    "formatting": "[WARNING] In file \"/tmp/tmpg7lam9ph/Snakefile\":  Keyword \"input\" at line 19 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpg7lam9ph/Snakefile\":  Keyword \"input\" at line 108 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "SilasK/microbiome-analysis",
    "linting": "KeyError in line 10 of /tmp/tmpg7lam9ph/Snakefile:\n\u0027Comparisons\u0027\n  File \"/tmp/tmpg7lam9ph/Snakefile\", line 10, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1601316685.0
  },
  {
    "data_format": 1,
    "description": "Clinical Analyis Pipeline - Snakemake",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "clinical-genomics-uppsala/CAPS",
    "linting": "WorkflowError in line 7 of /tmp/tmpj_65dytg/Snakefile:\nConfig file must be given as JSON or YAML with keys at top level.\n  File \"/tmp/tmpj_65dytg/Snakefile\", line 7, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1543834180.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmp5_kv302y/workflow/Snakefile\":  Keyword \"input\" at line 22 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 7 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "data-exp-lab/topostellar-oceans",
    "linting": "KeyError in line 23 of /tmp/tmp5_kv302y/workflow/Snakefile:\n\u0027workdir\u0027\n  File \"/tmp/tmp5_kv302y/workflow/Snakefile\", line 23, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1605562616.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpxbay4xce/rules/deepTools_data_prep.smk\":  \u0027NoParametersError: L128: In params definition.\u0027\n[ERROR] In file \"/tmp/tmpxbay4xce/rules/run_idr.smk\":  \u0027NoParametersError: L25: In params definition.\u0027\n[ERROR] In file \"/tmp/tmpxbay4xce/rules/bam_post_processing.smk\":  \u0027NoParametersError: L36: In params definition.\u0027\n[ERROR] In file \"/tmp/tmpxbay4xce/rules/run_fastp.smk\":  \u0027IndexError: pop from empty list\u0027\n[INFO] 4 file(s) raised parsing errors \ud83e\udd15\n[INFO] 8 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "skurscheid/cellcycle_workflow",
    "linting": "KeyError in line 8 of /tmp/tmpxbay4xce/Snakefile:\n\u0027references\u0027\n  File \"/tmp/tmpxbay4xce/Snakefile\", line 8, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1588924284.0
  },
  {
    "data_format": 1,
    "description": "A workflow for RNA-seq analyses in Snakemake",
    "formatting": "[INFO] 28 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jma1991/rnaseq",
    "linting": "KeyError in line 12 of /tmp/tmpr32w96mr/workflow/rules/project.smk:\n\u0027samples\u0027\n  File \"/tmp/tmpr32w96mr/workflow/Snakefile\", line 9, in \u003cmodule\u003e\n  File \"/tmp/tmpr32w96mr/workflow/rules/project.smk\", line 12, in __init__\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "rnaseq",
      "snakemake"
    ],
    "updated_at": 1612775589.0
  },
  {
    "data_format": 1,
    "description": "computes all variants including indels from Illumina sequences compared to a reference sequence",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "medvir/variant-calling",
    "linting": "Lints for rule sample_reads (line 16, /tmp/tmpiif534w7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule map_to_ref (line 39, /tmp/tmpiif534w7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule indelqual (line 69, /tmp/tmpiif534w7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule call_variants (line 93, /tmp/tmpiif534w7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1568204022.0
  },
  {
    "data_format": 1,
    "description": "test snakemake workflow",
    "formatting": "[WARNING] In file \"/tmp/tmpselvm8mr/workflow/Snakefile\":  Keyword \"input\" at line 38 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 2 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "visze/new_project",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1610716160.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow to setup data sources",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "percyfal/datasources-smk",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1606312428.0
  },
  {
    "data_format": 1,
    "description": "Fast profiler using mmseqs",
    "formatting": "[ERROR] In file \"/tmp/tmpto0zod6e/Snakefile\":  \u0027NoParametersError: L14: In input definition.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "SilasK/profiler",
    "linting": "WorkflowError in line 5 of /tmp/tmpto0zod6e/Snakefile:\nConfig file must be given as JSON or YAML with keys at top level.\n  File \"/tmp/tmpto0zod6e/Snakefile\", line 5, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1544104547.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmp90skrn11/Snakefile\":  \u0027NoParametersError: L14: In input definition.\u0027\n[INFO] In file \"/tmp/tmp90skrn11/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmp90skrn11/Snakefile\":  1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "Phoenix-Effect/gatk",
    "linting": "WorkflowError in line 5 of /tmp/tmp90skrn11/Snakefile:\nConfig file must be given as JSON or YAML with keys at top level.\n  File \"/tmp/tmp90skrn11/Snakefile\", line 5, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1529387615.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmp07x7m0c9/workflow/rules/unused.smk\":  Keyword \"shell\" at line 47 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp07x7m0c9/workflow/rules/segmentation.smk\":  Keyword \"shell\" at line 22 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp07x7m0c9/workflow/rules/registration.smk\":  Keyword \"shell\" at line 49 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp07x7m0c9/workflow/rules/registration.smk\":  Keyword \"shell\" at line 64 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp07x7m0c9/workflow/rules/registration.smk\":  Keyword \"shell\" at line 141 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmp07x7m0c9/workflow/rules/registration.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 3:0:     \u0027{params.deform_model} {params.deform_metric} {params.deform_multires} \u0027# deformable registration\n```\nwhile formatting code with black.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 6 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "akhanf/clinical-atlasreg",
    "linting": "Lints for snakefile /tmp/tmp07x7m0c9/workflow/rules/common.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp07x7m0c9/workflow/rules/registration.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp07x7m0c9/workflow/rules/segmentation.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp07x7m0c9/workflow/rules/electrodes.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule tar_results (line 42, /tmp/tmp07x7m0c9/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule tar_tsv_only (line 67, /tmp/tmp07x7m0c9/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule import_subj_t1 (line 11, /tmp/tmp07x7m0c9/workflow/rules/registration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule affine_aladin (line 31, /tmp/tmp07x7m0c9/workflow/rules/registration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule convert_xfm_ras2itk (line 58, /tmp/tmp07x7m0c9/workflow/rules/registration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule warp_brainmask_from_template_affine (line 83, /tmp/tmp07x7m0c9/workflow/rules/registration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule warp_tissue_probseg_from_template_affine (line 111, /tmp/tmp07x7m0c9/workflow/rules/registration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule n4biasfield (line 150, /tmp/tmp07x7m0c9/workflow/rules/registration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mask_template_t1w (line 182, /tmp/tmp07x7m0c9/workflow/rules/registration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mask_subject_t1w (line 209, /tmp/tmp07x7m0c9/workflow/rules/registration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ants_syn_affine_init (line 236, /tmp/tmp07x7m0c9/workflow/rules/registration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param out_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule warp_dseg_from_template (line 306, /tmp/tmp07x7m0c9/workflow/rules/registration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule warp_tissue_probseg_from_template (line 345, /tmp/tmp07x7m0c9/workflow/rules/registration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule warp_brainmask_from_template (line 383, /tmp/tmp07x7m0c9/workflow/rules/registration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule dilate_brainmask (line 421, /tmp/tmp07x7m0c9/workflow/rules/registration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule dilate_atlas_labels (line 452, /tmp/tmp07x7m0c9/workflow/rules/registration.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule tissue_seg_kmeans_init (line 8, /tmp/tmp07x7m0c9/workflow/rules/segmentation.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule map_channels_to_tissue (line 47, /tmp/tmp07x7m0c9/workflow/rules/segmentation.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule tissue_seg_to_4d (line 72, /tmp/tmp07x7m0c9/workflow/rules/segmentation.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule brainmask_from_tissue (line 98, /tmp/tmp07x7m0c9/workflow/rules/segmentation.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vis_electrodes (line 8, /tmp/tmp07x7m0c9/workflow/rules/electrodes.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule label_electrodes_atlas (line 38, /tmp/tmp07x7m0c9/workflow/rules/electrodes.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qc_reg (line 2, /tmp/tmp07x7m0c9/workflow/rules/visqc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qc_probseg (line 33, /tmp/tmp07x7m0c9/workflow/rules/visqc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qc_dseg (line 58, /tmp/tmp07x7m0c9/workflow/rules/visqc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1598102324.0
  },
  {
    "data_format": 1,
    "description": "Repository for m5c data analysis",
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n[INFO] 2 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "pd321/m5c",
    "linting": "FileNotFoundError in line 9 of /tmp/tmpx81iurl7/workflow/rules/common.smk:\n[Errno 2] No such file or directory: \u0027config/samples.tsv\u0027\n  File \"/tmp/tmpx81iurl7/workflow/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpx81iurl7/workflow/rules/common.smk\", line 9, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 610, in read_csv\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614161374.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmpfmcb2s4d/rules/filtering.smk\":  Keyword \"input\" at line 55 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpfmcb2s4d/rules/vqsr_indel.smk\":  Keyword \"input\" at line 10 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 11 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "rimjhimroy/SnakeGATK",
    "linting": "Lints for snakefile /tmp/tmpfmcb2s4d/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule samtools_index (line 104, /tmp/tmpfmcb2s4d/rules/processbam.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule concordance (line 65, /tmp/tmpfmcb2s4d/rules/calling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 2, /tmp/tmpfmcb2s4d/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 34, /tmp/tmpfmcb2s4d/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule concordance_all (line 65, /tmp/tmpfmcb2s4d/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1578575623.0
  },
  {
    "data_format": 1,
    "description": "The evaluation of MERFISHtools and the underyling model as published in the corresponding article.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "merfishtools/merfishtools-evaluation",
    "linting": "Lints for snakefile /tmp/tmpih1mvfmo/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule format (line 89, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule generate_mhd2_codebook (line 113, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule generate_mhd4_codebook (line 151, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cell_props (line 187, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule raw_counts (line 211, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule count_matrix (line 235, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule estimate_real_error_rates (line 278, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule estimate_simulated_error_rates (line 309, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule expression_matrix (line 390, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule scale_factors (line 417, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule normalize_expression_matrix (line 445, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule normalize_cdf (line 470, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule diffexp (line 504, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule multidiffexp (line 548, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule enrichment (line 584, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule simulate_counts (line 615, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule simulate (line 644, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_error_rates (line 694, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_error_rate_uncertainty (line 722, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_cv_raw_vs_posterior (line 756, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_naive_vs_map (line 781, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_enrichment (line 807, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_multidiffexp (line 833, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_expression_pmf (line 864, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_foldchange_cdf (line 890, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_qq (line 915, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_expression_dist (line 943, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_overdispersion (line 967, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_correlation (line 991, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_tsne (line 1015, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_simulation (line 1048, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_m_vs_errors (line 1083, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_simulation_pmf (line 1111, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_dataset_correlation (line 1140, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_dataset_correlation_error (line 1165, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_neighborhood (line 1192, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_em (line 1223, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule figure_thbs1_bias (line 1250, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule figure_error_rates (line 1276, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule figure_error_rate_uncertainty (line 1301, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule figure_naive_vs_map (line 1326, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule figure_example (line 1352, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule figure_simulation (line 1378, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule figure_simulation_supp (line 1407, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule figure_simulation_ci_error (line 1436, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule figure_clustering (line 1463, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule figure_multidiffexp (line 1494, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule figure_cv_raw_vs_posterior (line 1523, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule figure_exact_vs_corrected (line 1548, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule figure_model (line 1571, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule figure_dataset_correlation (line 1598, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule convert_svg (line 1625, /tmp/tmpih1mvfmo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [
      "snakemake",
      "workflow",
      "snakemake-workflows"
    ],
    "updated_at": 1529095773.0
  },
  {
    "data_format": 1,
    "description": "A Snakemake pipeline to call variants (SNPs, InDels) from DNA-seq Illumina fastq files. ",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "BleekerLab/freebayes_snp_calling",
    "linting": "AttributeError in line 176 of /tmp/tmpg0qqklkh/Snakefile:\ninvalid name for input, output, wildcard, params or log: reverse is reserved for internal use\n  File \"/tmp/tmpg0qqklkh/Snakefile\", line 176, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1598344305.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for building an ANTS template (from antsMultivariateTemplateConstruction2.sh)",
    "formatting": "[ERROR] In file \"/tmp/tmpzv3yc2ix/workflow/Snakefile\":  \u0027InvalidParameterSyntax: 57cmd=lambda wildcards, input, output:\n\u0027ResampleImageBySpacing {dim} {input} {output} {vox_dims}\u0027. format(\n dim= config[\u0027ants\u0027][\u0027dim\u0027], input= input, output= output,\n vox_dims=\u0027 \u0027. join([ str( d) for d in config[\u0027resample_vox_dims\u0027]]))\n if config[\u0027resample_init_template\u0027] elsef\"cp -v {input} {output}\"\n\u0027\n[INFO] In file \"/tmp/tmpzv3yc2ix/workflow/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "akhanf/ants_build_template_smk",
    "linting": "Lints for rule cp_nii_to_templateflow_naming (line 433, /tmp/tmpzv3yc2ix/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule create_template_json (line 452, /tmp/tmpzv3yc2ix/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1601493502.0
  },
  {
    "data_format": 1,
    "description": "A Snakemake workflow for the analysis of bacterial WGS data",
    "formatting": "[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ropolomx/boa-wgs",
    "linting": "FileNotFoundError in line 8 of /tmp/tmpwt7drko_/Snakefile:\n[Errno 2] No such file or directory: \u0027samples.tsv\u0027\n  File \"/tmp/tmpwt7drko_/Snakefile\", line 8, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 610, in read_csv\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1591815603.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for RNA-seq mapping",
    "formatting": "[WARNING] In file \"/tmp/tmp7ewjjcq_/workflow/Snakefile\":  Keyword \"input\" at line 17 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 3 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "percyfal/rna-seq-map-smk",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1602190673.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for Kaiju analysis",
    "formatting": "[ERROR] In file \"/tmp/tmph96lp0r8/Snakefile\":  \u0027NoParametersError: L14: In input definition.\u0027\n[INFO] In file \"/tmp/tmph96lp0r8/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmph96lp0r8/Snakefile\":  1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "ropolomx/kaiju-snake",
    "linting": "WorkflowError in line 5 of /tmp/tmph96lp0r8/Snakefile:\nConfig file must be given as JSON or YAML with keys at top level.\n  File \"/tmp/tmph96lp0r8/Snakefile\", line 5, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1550001482.0
  },
  {
    "data_format": 1,
    "description": "A workflow for ChIP-seq analyses in Snakemake",
    "formatting": "Usage: snakefmt [OPTIONS] [SRC]...\n\nError: Invalid value for \u0027[SRC]...\u0027: Path \u0027/tmp/tmpnnw226yy/workflow/rules/.#markdup.smk\u0027 does not exist.\n",
    "full_name": "jma1991/chipseq",
    "linting": "WorkflowError in line 2 of /tmp/tmpnnw226yy/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmpnnw226yy/Snakefile\", line 2, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1612775523.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": null,
    "full_name": "snakemake-workflows/rad-seq-stacks",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1610639862.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmpqoznkuf2/Snakefile\":  Keyword \"input\" at line 35 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "SilasK/abinner",
    "linting": "Lints for snakefile /tmp/tmpqoznkuf2/Snakefile:\n    * Absolute path \"/home/kiesers/atlas/atlas/Snakefile\" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule get_contig_covarage_from_bb (line 5, /tmp/tmpqoznkuf2/rules/binning.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule concoct (line 93, /tmp/tmpqoznkuf2/rules/binning.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1532076008.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "marcjwilliams1/lpWGS",
    "linting": "PermissionError in line 8 of /tmp/tmp6l6vifjm/Snakefile:\n[Errno 13] Permission denied: \u0027/data/BCI-EvoCa2\u0027\n  File \"/tmp/tmp6l6vifjm/Snakefile\", line 8, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 225, in makedirs\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1567023448.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 2 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "skurscheid/aks_snakemake",
    "linting": "Lints for snakefile /tmp/tmp8uzuoiq0/Snakefile:\n    * Absolute path \"/data/cellcycledata/aks_test\" in line 8:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Environment variable HOME used but not asserted with envvars directive in line 6.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp8uzuoiq0/rules/run_fastp.smk:\n    * Environment variable HOME used but not asserted with envvars directive in line 20.:\n      Asserting existence of environment variables with the envvars directive\n      ensures proper error messages if the user fails to invoke a workflow with\n      all required environment variables defined. Further, it allows snakemake\n      to pass them on in case of distributed execution.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#environment-variables\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Deprecated singularity directive used for container definition in line 23.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 24.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule run_fastp (line 26, /tmp/tmp8uzuoiq0/rules/run_fastp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * The version directive is deprecated:\n      It was meant for documenting tool version, but this has been replaced by\n      using the conda or container directive.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1551148919.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "andrewsanchez/GenBankQC-Workflow",
    "linting": "Lints for snakefile /tmp/tmpma8fk_sh/rules/mash.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpma8fk_sh/rules/qc.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule download (line 4, /tmp/tmpma8fk_sh/rules/genome-download.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable outdir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable section from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable format from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable assembly_level from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable taxid from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable group from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule sketch (line 11, /tmp/tmpma8fk_sh/rules/mash.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule paste (line 27, /tmp/tmpma8fk_sh/rules/mash.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable section_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule dist (line 50, /tmp/tmpma8fk_sh/rules/mash.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mean_dist (line 69, /tmp/tmpma8fk_sh/rules/mash.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule genome_stats (line 12, /tmp/tmpma8fk_sh/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qc (line 29, /tmp/tmpma8fk_sh/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule metadata (line 1, /tmp/tmpma8fk_sh/rules/metadata.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule biosample (line 17, /tmp/tmpma8fk_sh/rules/metadata.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule xtract_biosample (line 33, /tmp/tmpma8fk_sh/rules/metadata.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule parse_biosample (line 49, /tmp/tmpma8fk_sh/rules/metadata.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sra (line 67, /tmp/tmpma8fk_sh/rules/metadata.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule summary (line 83, /tmp/tmpma8fk_sh/rules/metadata.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule names (line 99, /tmp/tmpma8fk_sh/rules/metadata.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1581689344.0
  },
  {
    "data_format": 1,
    "description": "A workflow for scRNA-seq processing in Snakemake",
    "formatting": "[INFO] 14 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jma1991/scrnaseq",
    "linting": "Lints for snakefile /tmp/tmpea14p7jm/workflow/rules/star.smk:\n    * Absolute path \"/tmp/star\" in line 36:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule bustools_count_spliced (line 137, /tmp/tmpea14p7jm/workflow/rules/bustools.smk):\n    * Param out is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule bustools_count_unspliced (line 175, /tmp/tmpea14p7jm/workflow/rules/bustools.smk):\n    * Param out is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule eisar (line 6, /tmp/tmpea14p7jm/workflow/rules/eisar.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule genomepy_gentrome (line 70, /tmp/tmpea14p7jm/workflow/rules/genomepy.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule genomepy_decoys (line 90, /tmp/tmpea14p7jm/workflow/rules/genomepy.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule curl_barcodes (line 6, /tmp/tmpea14p7jm/workflow/rules/resources.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule singlecellexperiment_kallisto (line 6, /tmp/tmpea14p7jm/workflow/rules/singlecellexperiment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param out is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule singlecellexperiment_salmon (line 38, /tmp/tmpea14p7jm/workflow/rules/singlecellexperiment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param out is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule singlecellexperiment_star (line 70, /tmp/tmpea14p7jm/workflow/rules/singlecellexperiment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param out is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1612775318.0
  },
  {
    "data_format": 1,
    "description": "A DNA sequencing pipeline based on the GATK best-practices workflow.",
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "vallenderlab/dnaseq-gatk-variant-calling",
    "linting": "FileNotFoundError in line 10 of /tmp/tmpfmfwt71p/rules/common.smk:\n[Errno 2] No such file or directory: \u0027/ddn/home5/r2295/valbin/projects/Impulsivity/genotyping_sdh/data/samples.tsv\u0027\n  File \"/tmp/tmpfmfwt71p/Snakefile\", line 7, in \u003cmodule\u003e\n  File \"/tmp/tmpfmfwt71p/rules/common.smk\", line 10, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 689, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1564092211.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "royhaast/smk_zona-funcparc",
    "linting": "NameError in line 25 of /tmp/tmpmr84b7pc/Snakefile:\nname \u0027preprocessing\u0027 is not defined\n  File \"/tmp/tmpmr84b7pc/Snakefile\", line 25, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1588947768.0
  },
  {
    "data_format": 1,
    "description": "Basic multi-sample variant calling workflow with GATK",
    "formatting": "[WARNING] In file \"/tmp/tmpmrcmxwiu/workflow/rules/01_mapping.smk\":  Keyword \"params\" at line 46 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ibebio/vc-gatk4-snakemake",
    "linting": "/tmp/tmpmrcmxwiu/workflow/rules/common.smk:16: ParserWarning: Falling back to the \u0027python\u0027 engine because the \u0027c\u0027 engine does not support regex separators (separators \u003e 1 char and different from \u0027\\s+\u0027 are interpreted as regex); you can avoid this warning by specifying engine=\u0027python\u0027.\n  # validate(samples, schema=\"../schemas/samples.schema.yaml\")\nLints for snakefile /tmp/tmpmrcmxwiu/workflow/Snakefile:\n    * Deprecated singularity directive used for container definition in line 5.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpmrcmxwiu/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 7.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1608658504.0
  },
  {
    "data_format": 1,
    "description": "Hello, World! example for Snakemake",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "nathanhaigh/snakemake-hello-world",
    "linting": "Lints for rule hello_world (line 13, /tmp/tmp9mtdcpna/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1565589479.0
  },
  {
    "data_format": 1,
    "description": "xander assembly pipeline to generate OTU and taxonomy table",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jiarong/xander-assembly-pipeline",
    "linting": "--2021-02-10 22:55:40--  http://lyorn.idyll.org/~gjr/public2/misc/RDPTools.tgz\nResolving lyorn.idyll.org (lyorn.idyll.org)... failed: Name or service not known.\nwget: unable to resolve host address \u2018lyorn.idyll.org\u2019\nCalledProcessError in line 38 of /tmp/tmp46d3opc6/Snakefile:\nCommand \u0027set -euo pipefail;  (set +o pipefail; java -jar RDPTools/hmmgs.jar 2\u003e\u00261 | grep \u0027USAGE: HMMgs\u0027 \u003e /dev/null || { echo \"RDPTools are not installed..  Installing..\"; wget http://lyorn.idyll.org/~gjr/public2/misc/RDPTools.tgz -O RDPTools.tgz \u0026\u0026 tar -xzf RDPTools.tgz; }\n        )\n     if [[ ! -f Xander_assembler/bin/run_xander_skel.sh ]]; then \n         echo \"Xander_assembler not installed.. Installing..\"\n         (git clone https://github.com/rdpstaff/Xander_assembler.git \u0026\u0026 cd Xander_assembler/gene_resource \u0026\u0026 wget https://zenodo.org/record/1410823/files/rpsC.tgz?download=1 -O rpsC.tgz \u0026\u0026 tar -xzf rpsC.tgz \u0026\u0026 rm rpsC.tgz)\n     fi\n     path1=$(echo $PATH | cut -d \u0027:\u0027 -f1)\n     uchime 2\u003e\u00261 | grep \"UCHIME 4\" \u003e /dev/null || { echo \"uchime is not installed.. Installing at $path1..\"; wget http://drive5.com/uchime/uchime4.2.40_i86linux32 -O $path1/uchime \u0026\u0026 chmod a+x $path1/uchime; }\u0027 returned non-zero exit status 4.\n  File \"/tmp/tmp46d3opc6/Snakefile\", line 38, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1536533047.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpg0ad4yd7/Snakefile\":  \u0027NoParametersError: L14: In input definition.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "okartal/workflow_sci-atac-seq",
    "linting": "WorkflowError in line 5 of /tmp/tmpg0ad4yd7/Snakefile:\nConfig file must be given as JSON or YAML with keys at top level.\n  File \"/tmp/tmpg0ad4yd7/Snakefile\", line 5, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "atac-seq",
      "snakemake",
      "single-cell"
    ],
    "updated_at": 1531517615.0
  },
  {
    "data_format": 1,
    "description": "Source code for the characterization of new genes paper under review. ",
    "formatting": "[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "GaspardR/snakemake_blockbuster",
    "linting": "Lints for rule download_bam (line 1, /tmp/tmp8c2ab35m/rules/downloads.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule flagstat (line 2, /tmp/tmp8c2ab35m/rules/flagstat.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1580165245.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "akhanf/zona-diffparc",
    "linting": "Lints for snakefile /tmp/tmpdurcxmgo/Snakefile:\n    * Deprecated singularity directive used for container definition in line 42.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 64.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 81.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 95.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 112.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 171.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule import_template_seed (line 75, /tmp/tmpdurcxmgo/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule run_probtrack (line 268, /tmp/tmpdurcxmgo/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule save_connmap_template_npz (line 364, /tmp/tmpdurcxmgo/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule gather_connmap_group (line 393, /tmp/tmpdurcxmgo/Snakefile):\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule spectral_clustering (line 426, /tmp/tmpdurcxmgo/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1588819846.0
  },
  {
    "data_format": 1,
    "description": "For virome analysis of shotgun whole genome sequencing",
    "formatting": "[WARNING] In file \"/tmp/tmpd2tzg3s7/workflow/Snakefile\":  Keyword \"input\" at line 19 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 10 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "jtsumner22/microbiome-snakemake",
    "linting": "WorkflowError in line 9 of /tmp/tmpd2tzg3s7/workflow/rules/common.smk:\nConfig file ../config/config.yaml not found.\n  File \"/tmp/tmpd2tzg3s7/workflow/Snakefile\", line 6, in \u003cmodule\u003e\n  File \"/tmp/tmpd2tzg3s7/workflow/rules/common.smk\", line 9, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1605758176.0
  },
  {
    "data_format": 1,
    "description": "running leaf cutter from snaptron data to identify differential splice events, esp those associate with SF3B1",
    "formatting": "[WARNING] In file \"/tmp/tmpm5xmzev4/Snakefile\":  Keyword \"input\" at line 14 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "bfairkun/recurrent-splicing-identification",
    "linting": "Lints for snakefile /tmp/tmpm5xmzev4/rules/common.smk:\n    * Absolute path \"/project2/yangili1/snaptron/SRA2_junctions_uncompressed.gz\" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 4:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 15:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpm5xmzev4/rules/GetDataForLeafcutter.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpm5xmzev4/rules/leafcutter.smk:\n    * Absolute path \"/\",\" in line 22:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\",\" in line 23:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule download_snaptron_database (line 14, /tmp/tmpm5xmzev4/rules/GetDataForLeafcutter.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_snaptron_metadata (line 37, /tmp/tmpm5xmzev4/rules/GetDataForLeafcutter.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_chrom_sizes (line 60, /tmp/tmpm5xmzev4/rules/GetDataForLeafcutter.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_junc_filelist (line 80, /tmp/tmpm5xmzev4/rules/GetDataForLeafcutter.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_junc_files (line 103, /tmp/tmpm5xmzev4/rules/GetDataForLeafcutter.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_bed_file_for_each_chrom (line 135, /tmp/tmpm5xmzev4/rules/GetDataForLeafcutter.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule prepare_juncfiles_for_clustering (line 1, /tmp/tmpm5xmzev4/rules/leafcutter.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Samples_TargetJunctions from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable Samples_TargetJunctions from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable juncfiles from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable Samples_TargetJunctions from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable juncfiles from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule leafcutter_cluster (line 45, /tmp/tmpm5xmzev4/rules/leafcutter.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param rundir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rearrange_leafcutter_cluster_counts (line 77, /tmp/tmpm5xmzev4/rules/leafcutter.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_numers_and_denoms (line 104, /tmp/tmpm5xmzev4/rules/leafcutter.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_numers_and_denoms (line 130, /tmp/tmpm5xmzev4/rules/leafcutter.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule delete_temp_files (line 163, /tmp/tmpm5xmzev4/rules/leafcutter.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable temporary_clusterfiles from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule AggregateGroupJunctionCounts (line 189, /tmp/tmpm5xmzev4/rules/leafcutter.smk):\n    * The dynamic flag is deprecated:\n      Use checkpoints instead, which are more powerful and less error-prone.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#data-dependent-conditional-execution\n    * The dynamic flag is deprecated:\n      Use checkpoints instead, which are more powerful and less error-prone.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#data-dependent-conditional-execution\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Samples_TargetJunctions from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable Samples_TargetJunctions from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule AggregateGroupJunctionRatioCounts (line 221, /tmp/tmpm5xmzev4/rules/leafcutter.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule GatherDynamicBed (line 245, /tmp/tmpm5xmzev4/rules/leafcutter.smk):\n    * The dynamic flag is deprecated:\n      Use checkpoints instead, which are more powerful and less error-prone.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#data-dependent-conditional-execution\n    * The dynamic flag is deprecated:\n      Use checkpoints instead, which are more powerful and less error-prone.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#data-dependent-conditional-execution\n    * The dynamic flag is deprecated:\n      Use checkpoints instead, which are more powerful and less error-prone.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#data-dependent-conditional-execution\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule leafcutter_ds (line 271, /tmp/tmpm5xmzev4/rules/leafcutter.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1559251229.0
  },
  {
    "data_format": 1,
    "description": "test",
    "formatting": "[ERROR] In file \"/tmp/tmpspkv5uoq/Snakefile\":  \u0027NoParametersError: L185: In input definition.\u0027\n[INFO] In file \"/tmp/tmpspkv5uoq/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "sophsatt/test",
    "linting": "The flag \u0027directory\u0027 used in rule svg_pdf is only valid for outputs, not inputs.\nLints for rule kallisto_idx (line 30, /tmp/tmpspkv5uoq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule kallisto_quant (line 53, /tmp/tmpspkv5uoq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sleuth (line 83, /tmp/tmpspkv5uoq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule volcano (line 110, /tmp/tmpspkv5uoq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule heatmap (line 135, /tmp/tmpspkv5uoq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule pca (line 161, /tmp/tmpspkv5uoq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule boxen_plot (line 185, /tmp/tmpspkv5uoq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule p_value_hist (line 209, /tmp/tmpspkv5uoq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule strip_plot (line 233, /tmp/tmpspkv5uoq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule svg_pdf (line 257, /tmp/tmpspkv5uoq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule pizzly (line 281, /tmp/tmpspkv5uoq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule pizzly_flatten (line 311, /tmp/tmpspkv5uoq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule pizzly_fragment_length (line 334, /tmp/tmpspkv5uoq/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule gage (line 368, /tmp/tmpspkv5uoq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1548677433.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow to assemble and query short haplotype genomes.",
    "formatting": "[WARNING] In file \"/tmp/tmph_otv3z5/workflow/Snakefile\":  Keyword \"shell\" at line 89 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmph_otv3z5/workflow/Snakefile\":  Keyword \"shell\" at line 117 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmph_otv3z5/workflow/Snakefile\":  Keyword \"shell\" at line 144 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmph_otv3z5/workflow/Snakefile\":  Keyword \"shell\" at line 168 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmph_otv3z5/workflow/Snakefile\":  Keyword \"shell\" at line 189 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmph_otv3z5/workflow/Snakefile\":  Keyword \"shell\" at line 213 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmph_otv3z5/workflow/Snakefile\":  Keyword \"shell\" at line 238 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmph_otv3z5/workflow/Snakefile\":  Keyword \"shell\" at line 284 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "JoeBlackSci/genome_assembly_mp1",
    "linting": "Lints for snakefile /tmp/tmph_otv3z5/workflow/Snakefile:\n    * Path composition with \u0027+\u0027 in line 80:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 101:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule file_append (line 127, /tmp/tmph_otv3z5/workflow/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule helper_condense (line 448, /tmp/tmph_otv3z5/workflow/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fasta_condense (line 477, /tmp/tmph_otv3z5/workflow/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1614589233.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmpq30gn7jj/Snakefile\":  Keyword \"input\" at line 27 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dence/snakemake_pipeline_kallisto_deseq2",
    "linting": "FileNotFoundError in line 12 of /tmp/tmpq30gn7jj/Snakefile:\n[Errno 2] No such file or directory: \u0027/home/d.ence/applications/snakemake_pipeline_kallisto_deseq2//samples.tsv\u0027\n  File \"/tmp/tmpq30gn7jj/Snakefile\", line 12, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 689, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1563858713.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "chaodi51/snakemake-workflows-rna-seq-star-deseq2",
    "linting": "Lints for snakefile /tmp/tmp3njv298t/Snakefile:\n    * Deprecated singularity directive used for container definition in line 35.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp3njv298t/rules/trim.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp3njv298t/rules/align.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp3njv298t/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule count_matrix (line 8, /tmp/tmp3njv298t/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule rseqc_junction_annotation (line 32, /tmp/tmp3njv298t/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_junction_saturation (line 71, /tmp/tmp3njv298t/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_innerdis (line 173, /tmp/tmp3njv298t/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_readdup (line 241, /tmp/tmp3njv298t/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_readgc (line 276, /tmp/tmp3njv298t/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1603853328.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "sheucke/rna-seq-star-deseq2",
    "linting": "Lints for snakefile /tmp/tmp1je1cimx/Snakefile:\n    * Deprecated singularity directive used for container definition in line 35.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp1je1cimx/rules/trim.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp1je1cimx/rules/align.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp1je1cimx/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule count_matrix (line 8, /tmp/tmp1je1cimx/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule rseqc_junction_annotation (line 32, /tmp/tmp1je1cimx/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_junction_saturation (line 71, /tmp/tmp1je1cimx/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_innerdis (line 173, /tmp/tmp1je1cimx/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_readdup (line 241, /tmp/tmp1je1cimx/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_readgc (line 276, /tmp/tmp1je1cimx/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1603098288.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "shukwong/dna-seq-gatk-variant-calling-test",
    "linting": "Workflow defines that rule get_genome is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_faidx is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_dict is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_known_variation is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule remove_iupac_codes is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule tabix_known_variants is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule bwa_index is eligible for caching between workflows (use the --cache argument to enable this).\nLints for snakefile /tmp/tmpjx2cxpap/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_vep_plugins (line 243, /tmp/tmpjx2cxpap/rules/ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 160, /tmp/tmpjx2cxpap/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmpjx2cxpap/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmpjx2cxpap/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmpjx2cxpap/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1608310375.0
  },
  {
    "data_format": 1,
    "description": "Pipeline to process amplicon bisulfite sequencing results",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "HeyLifeHD/amplicon_bisulfite_seq_pipeline",
    "linting": "PermissionError in line 15 of /tmp/tmpw5x2312i/Snakefile:\n[Errno 13] Permission denied: \u0027/home/epicwl\u0027\n  File \"/tmp/tmpw5x2312i/Snakefile\", line 15, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 225, in makedirs\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1584641447.0
  },
  {
    "data_format": 1,
    "description": "rplB/rpsC targeted analyses with shotgun metagenomes",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jiarong/rplB-metaG-pipeline",
    "linting": "--2021-02-10 22:55:56--  http://lyorn.idyll.org/~gjr/public2/misc/RDPTools.tgz\nResolving lyorn.idyll.org (lyorn.idyll.org)... failed: Name or service not known.\nwget: unable to resolve host address \u2018lyorn.idyll.org\u2019\nCalledProcessError in line 38 of /tmp/tmp5e2kik_c/Snakefile:\nCommand \u0027set -euo pipefail;  (set +o pipefail; java -jar RDPTools/hmmgs.jar 2\u003e\u00261 | grep \u0027USAGE: HMMgs\u0027 \u003e /dev/null || { echo \"RDPTools are not installed..  Installing..\"; wget http://lyorn.idyll.org/~gjr/public2/misc/RDPTools.tgz -O RDPTools.tgz \u0026\u0026 tar -xzf RDPTools.tgz; }\n        )\n     if [[ ! -f Xander_assembler/bin/run_xander_skel.sh ]]; then \n         echo \"Xander_assembler not installed.. Installing..\"\n         (git clone https://github.com/rdpstaff/Xander_assembler.git \u0026\u0026 cd Xander_assembler/gene_resource \u0026\u0026 wget https://zenodo.org/record/1410823/files/rpsC.tgz?download=1 -O rpsC.tgz \u0026\u0026 tar -xzf rpsC.tgz \u0026\u0026 rm rpsC.tgz)\n     fi\n     path1=$(echo $PATH | cut -d \u0027:\u0027 -f1)\n     uchime 2\u003e\u00261 | grep \"UCHIME 4\" \u003e /dev/null || { echo \"uchime is not installed.. Installing at $path1..\"; wget http://drive5.com/uchime/uchime4.2.40_i86linux32 -O $path1/uchime \u0026\u0026 chmod a+x $path1/uchime; }\u0027 returned non-zero exit status 4.\n  File \"/tmp/tmp5e2kik_c/Snakefile\", line 38, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "rplb",
      "rpsc",
      "metagenome",
      "assembly",
      "diversity"
    ],
    "updated_at": 1538126201.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": null,
    "full_name": "eriqande/dna-seq-gatk-variant-calling",
    "linting": "Workflow defines that rule get_genome is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_faidx is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_dict is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_known_variation is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule remove_iupac_codes is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule tabix_known_variants is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule bwa_index is eligible for caching between workflows (use the --cache argument to enable this).\nLints for rule compose_regions (line 3, /tmp/tmpvkmopjxq/rules/calling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1613064823.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "vdjonsson/rna-seq-pizzly",
    "linting": "WorkflowError in line 3 of /tmp/tmpoyvda0sw/workflow/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmpoyvda0sw/workflow/Snakefile\", line 3, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1588021783.0
  },
  {
    "data_format": 1,
    "description": "This repository contains the evalutation workflow used for the Segment Length Distribution chapter of my PhD Thesis.",
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "HenningTimm/segment_length_evaluation",
    "linting": "WorkflowError in line 17 of /tmp/tmp2_uqn5kr/workflow/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmp2_uqn5kr/workflow/Snakefile\", line 17, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1610999032.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ravimore8386/gatk",
    "linting": "WorkflowError in line 13 of /tmp/tmppzev9a4c/rules/common.smk:\nSchema file /tmp/tmppzev9a4c/rules/../schemas/config.schema.yaml not found.\n  File \"/tmp/tmppzev9a4c/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmppzev9a4c/rules/common.smk\", line 13, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1606573687.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmpf6jsdfcw/Snakefile\":  Keyword \"params\" at line 104 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "khavarilab/featurebarcode-qc-snakemake",
    "linting": "/tmp/tmpf6jsdfcw/Snakefile:118: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n  shell:\n/tmp/tmpf6jsdfcw/Snakefile:119: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n  \"umi_tools extract --extract-method string \"\n/tmp/tmpf6jsdfcw/Snakefile:218: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n  \nModuleNotFoundError in line 10 of /tmp/tmpf6jsdfcw/Snakefile:\nNo module named \u0027Bio\u0027\n  File \"/tmp/tmpf6jsdfcw/Snakefile\", line 10, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 5,
    "topics": [],
    "updated_at": 1603673074.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ocisse/dna-seq-gatk-variant-calling",
    "linting": "Workflow defines that rule get_genome is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_faidx is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_dict is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_known_variation is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule remove_iupac_codes is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule tabix_known_variants is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule bwa_index is eligible for caching between workflows (use the --cache argument to enable this).\nLints for snakefile /tmp/tmph4wvjitw/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_vep_plugins (line 243, /tmp/tmph4wvjitw/rules/ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 160, /tmp/tmph4wvjitw/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmph4wvjitw/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmph4wvjitw/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmph4wvjitw/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1605231718.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "TasnubaS/Snakemake-WorkFlow",
    "linting": "Lints for snakefile /tmp/tmpchm2w250/Snakefile:\n    * Deprecated singularity directive used for container definition in line 35.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpchm2w250/rules/trim.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpchm2w250/rules/align.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpchm2w250/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule count_matrix (line 8, /tmp/tmpchm2w250/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule rseqc_junction_annotation (line 32, /tmp/tmpchm2w250/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_junction_saturation (line 71, /tmp/tmpchm2w250/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_innerdis (line 173, /tmp/tmpchm2w250/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_readdup (line 241, /tmp/tmpchm2w250/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_readgc (line 276, /tmp/tmpchm2w250/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1603859651.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "arabidopsisca/snakemake-rna-seq-star-deseq2",
    "linting": "Lints for snakefile /tmp/tmpjphyka0q/Snakefile:\n    * Deprecated singularity directive used for container definition in line 35.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpjphyka0q/rules/trim.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpjphyka0q/rules/align.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpjphyka0q/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule count_matrix (line 8, /tmp/tmpjphyka0q/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule rseqc_junction_annotation (line 32, /tmp/tmpjphyka0q/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_junction_saturation (line 71, /tmp/tmpjphyka0q/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_innerdis (line 173, /tmp/tmpjphyka0q/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_readdup (line 241, /tmp/tmpjphyka0q/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_readgc (line 276, /tmp/tmpjphyka0q/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1607216871.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "fuzhiliang/dna-seq-gatk-variant-calling_test",
    "linting": "Workflow defines that rule get_genome is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_faidx is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_dict is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_known_variation is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule remove_iupac_codes is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule tabix_known_variants is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule bwa_index is eligible for caching between workflows (use the --cache argument to enable this).\nLints for snakefile /tmp/tmpnv9k46ll/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_vep_plugins (line 243, /tmp/tmpnv9k46ll/rules/ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 160, /tmp/tmpnv9k46ll/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmpnv9k46ll/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmpnv9k46ll/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmpnv9k46ll/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1599717836.0
  },
  {
    "data_format": 1,
    "description": "Analysis of 4sU RNA-Seq data and calculation of rates using the INSPEcT package",
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "marykthompson/foursu_steady_state",
    "linting": "Lints for snakefile /tmp/tmpbtbxkb8u/Snakefile:\n    * Deprecated singularity directive used for container definition in line 35.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpbtbxkb8u/rules/trim.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpbtbxkb8u/rules/align.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpbtbxkb8u/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule count_matrix (line 8, /tmp/tmpbtbxkb8u/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule rseqc_junction_annotation (line 32, /tmp/tmpbtbxkb8u/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_junction_saturation (line 71, /tmp/tmpbtbxkb8u/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_innerdis (line 173, /tmp/tmpbtbxkb8u/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_readdup (line 241, /tmp/tmpbtbxkb8u/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_readgc (line 276, /tmp/tmpbtbxkb8u/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1576768126.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "bioinfo-dirty-jobs/rna-seq-star-deseq2",
    "linting": "WorkflowError in line 10 of /tmp/tmpq25gzdtd/Snakefile:\nSchema file /tmp/tmpq25gzdtd/schemas/config.schema.yaml not found.\n  File \"/tmp/tmpq25gzdtd/Snakefile\", line 10, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1558032161.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "nsteinau/kallisto-snakemake",
    "linting": "FileNotFoundError in line 12 of /tmp/tmpna5qcclm/Snakefile:\n[Errno 2] No such file or directory: \u0027SRR_Acc_List.txt\u0027\n  File \"/tmp/tmpna5qcclm/Snakefile\", line 12, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 684, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 457, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 814, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1045, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1862, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1357, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 639, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1569993994.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 10 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dence/rnastar_deseq2_isoseq_trial",
    "linting": "FileNotFoundError in line 15 of /tmp/tmpzjl93g08/rules/common.smk:\n[Errno 2] No such file or directory: \u0027Jan_29_2021_units.tsv\u0027\n  File \"/tmp/tmpzjl93g08/Snakefile\", line 3, in \u003cmodule\u003e\n  File \"/tmp/tmpzjl93g08/rules/common.smk\", line 15, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 689, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1612445934.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpzzlbywn3/rules/diffexp.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 2:0:     \"../scripts/normalized_counts.R\"\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmpzzlbywn3/rules/diffexp.smk\":  1 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmpzzlbywn3/rules/diffexp.smk\":  9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dence/rnastar_dseq2_old_RNAseq",
    "linting": "FileNotFoundError in line 12 of /tmp/tmpzzlbywn3/rules/common.smk:\n[Errno 2] No such file or directory: \u0027MJC_cambium_vs_MJ_cambium.samples.tsv\u0027\n  File \"/tmp/tmpzzlbywn3/Snakefile\", line 3, in \u003cmodule\u003e\n  File \"/tmp/tmpzzlbywn3/rules/common.smk\", line 12, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 689, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1613397973.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpwf7u_ojs/workflow/rules/calling2.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 118:0:     if _platform == \"darwin\" or config[\"variant_tool\"] == \"gatk\":\n```\nwhile formatting code with black.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "kokyriakidis/Pharmakon",
    "linting": "Workflow defines that rule get_genome is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_dbsnp is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_hapmap is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_1000g_omni_snps is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_1000g_snps is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_mills_indels is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule bwa_mem2_index is eligible for caching between workflows (use the --cache argument to enable this).\nFileNotFoundError in line 14 of /tmp/tmpwf7u_ojs/workflow/rules/filtering.smk:\n[Errno 2] No such file or directory: \u0027/Users/kokyriakidis/Desktop/test_folder/intervals/SUMMARY/SELECTED_GENES.txt\u0027\n  File \"/tmp/tmpwf7u_ojs/workflow/Snakefile\", line 193, in \u003cmodule\u003e\n  File \"/tmp/tmpwf7u_ojs/workflow/rules/filtering.smk\", line 33, in \u003cmodule\u003e\n  File \"/tmp/tmpwf7u_ojs/workflow/rules/filtering.smk\", line 14, in read_selected_genes_table\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1597913962.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Iweirdo/NGS",
    "linting": "Workflow defines that rule get_genome is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_faidx is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_dict is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_known_variation is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule remove_iupac_codes is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule tabix_known_variants is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule bwa_index is eligible for caching between workflows (use the --cache argument to enable this).\nLints for snakefile /tmp/tmpv_j7c3w5/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_vep_plugins (line 243, /tmp/tmpv_j7c3w5/rules/ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 160, /tmp/tmpv_j7c3w5/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmpv_j7c3w5/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmpv_j7c3w5/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmpv_j7c3w5/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1599010927.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": null,
    "full_name": "vojtab84/ACGT_snakemake",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1613383850.0
  },
  {
    "data_format": 1,
    "description": "An RNASeq snakemake workflow using the Tuxedo suite.",
    "formatting": "[ERROR] In file \"/tmp/tmp0dkuf9nk/rules/align.smk\":  \u0027InvalidParameterSyntax: 2gtf=\u0027\n[ERROR] In file \"/tmp/tmp0dkuf9nk/Snakefile\":  \u0027NoParametersError: L15: In input definition.\u0027\n[INFO] 2 file(s) raised parsing errors \ud83e\udd15\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "vallenderlab/rnaseq-tuxedo-suite",
    "linting": "SyntaxError in line 2 of /tmp/tmp0dkuf9nk/rules/align.smk:\nexpression cannot contain assignment, perhaps you meant \"==\"?\n  File \"/tmp/tmp0dkuf9nk/Snakefile\", line 15, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [
      "rnaseq-tuxedo",
      "rnaseq-pipeline",
      "rna-seq-pipeline",
      "rna-seq-snakemake",
      "snakemake",
      "snakemake-workflow"
    ],
    "updated_at": 1563988276.0
  },
  {
    "data_format": 1,
    "description": "Adaption from https://github.com/snakemake-workflows/rna-seq-star-deseq2 for sRNA",
    "formatting": "[WARNING] In file \"/tmp/tmp7jmfq39i/rules/align.smk\":  Keyword \"output\" at line 16 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp7jmfq39i/rules/align.smk\":  Keyword \"params\" at line 26 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp7jmfq39i/rules/align.smk\":  Keyword \"wrapper\" at line 33 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp7jmfq39i/rules/count.smk\":  Keyword \"wrapper\" at line 40 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "moritzschaefer/srna-seq-star-deseq2",
    "linting": "KeyError in line 13 of /tmp/tmp7jmfq39i/rules/trim.smk:\n\u0027adapter\u0027\n  File \"/tmp/tmp7jmfq39i/Snakefile\", line 19, in \u003cmodule\u003e\n  File \"/tmp/tmp7jmfq39i/rules/trim.smk\", line 13, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1556265811.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmprpoe9srr/rules/align.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 1:4: log:\n```\nwhile formatting code with black.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dence/rnastar_deseq2_MeJA_timecourse",
    "linting": "FileNotFoundError in line 12 of /tmp/tmprpoe9srr/rules/common.smk:\n[Errno 2] No such file or directory: \u0027transgenic_test_samples.17544Ri.tsv\u0027\n  File \"/tmp/tmprpoe9srr/Snakefile\", line 3, in \u003cmodule\u003e\n  File \"/tmp/tmprpoe9srr/rules/common.smk\", line 12, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 689, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614627439.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmp2qvrim5k/Snakefile\":  Keyword \"input\" at line 45 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp2qvrim5k/Snakefile\":  Keyword \"params\" at line 149 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp2qvrim5k/Snakefile\":  Keyword \"shell\" at line 155 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp2qvrim5k/Snakefile\":  Keyword \"params\" at line 211 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp2qvrim5k/Snakefile\":  Keyword \"output\" at line 299 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp2qvrim5k/Snakefile\":  Keyword \"input\" at line 311 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmp2qvrim5k/Snakefile\":  \u0027NoParametersError: L354: In params definition.\u0027\n[INFO] In file \"/tmp/tmp2qvrim5k/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "kingyang728/DNA_seq_pipeline_conda",
    "linting": "Lints for snakefile /tmp/tmp2qvrim5k/Snakefile:\n    * Absolute path \"/home/kingyang/harddisk/SSH_server_Data/{dir}/{file}\" in line 2:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/kingyang/harddisk/SSH_server_Data/Fastq_test/{file}_001_test.fastq.gz\" in line 3:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/kingyang/harddisk/SSH_server_Data/Fastq_test\" in line 16:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample_name}_{sample_num}_{lane}_{read}_{tail}.fastq.gz\" in line 17:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/sorted/{sample_name}_{sample_num}.bam\" in line 34:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/sorted/{sample_name}_{sample_num}.bam.bai\" in line 35:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/dedup/{sample_name}_{sample_num}.bam\" in line 37:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample_name}_{sample_num}_{lane}_R1_{tail}_val_1.fq.gz\" in line 39:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/samtools_filterd_calls/{sample_name}_{sample_num}.vcf.gz\" in line 41:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/filterd_calls/{sample_name}_{sample_num}.vcf.gz\" in line 43:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lumpySV/{sample_name}_{sample_num}.vcf\" in line 44:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/CNV/{sample_name}_{sample_num}.csv\" in line 45:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/recal/{sample_name}_{sample_num}.bam\" in line 48:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/dedup/{sample_name}_{sample_num}.bam\" in line 54:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample_name}_{sample_num}_{lane}_R1_{tail}_val_1.fq.gz\" in line 57:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample_name}_{sample_num}_{lane}_R1_{tail}.fastq.gz_trimming_report.txt\" in line 59:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample_name}_{sample_num}_{lane}_R2_{tail}_val_2.fq.gz\" in line 61:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample_name}_{sample_num}_{lane}_R2_{tail}.fastq.gz_trimming_report.txt\" in line 63:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mapped_reads/{sample_name}_{sample_num}_{lane}.bam\" in line 66:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calls/{sample_name}_{sample_num}.vcf.gz.stats\" in line 72:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/Genome_NAME.fa\" in line 92:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}\" in line 99:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}.fai\" in line 101:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/kingyang/harddisk/VariantWorkFlow/Fasta_Index/{genome}.fai\" in line 102:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}\" in line 110:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}\" in line 112:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/kingyang/harddisk/VariantWorkFlow/Fasta_Index/{genome}.amb\" in line 113:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/kingyang/harddisk/VariantWorkFlow/Fasta_Index/{genome}.ann\" in line 114:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/kingyang/harddisk/VariantWorkFlow/Fasta_Index/{genome}.bwt\" in line 115:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/kingyang/harddisk/VariantWorkFlow/Fasta_Index/{genome}.pac\" in line 116:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/kingyang/harddisk/VariantWorkFlow/Fasta_Index/{genome}.sa\" in line 117:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}.fa\" in line 126:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}.dict\" in line 128:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}_{lane}_R1_\" in line 136:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}_{lane}_R2_\" in line 136:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample}_{lane}_R1_\" in line 138:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample}_{lane}_R1_\" in line 139:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample}_{lane}_R2_\" in line 140:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample}_{lane}_R2_\" in line 141:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/trim_galore/{sample}_{lane}.log\" in line 154:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\"${RunNumber}\" in line 157:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/tmp/ --fastqc\" in line 157:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}\" in line 162:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample}_{lane}_R1_\" in line 167:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample}_{lane}_R2_\" in line 168:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mapped_reads/{sample}_{lane}.bam\" in line 170:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/bwa_mem/{sample}_{lane}.log\" in line 177:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mapped_reads/{sample}_L001.bam\" in line 189:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mapped_reads/{sample}_L002.bam\" in line 190:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mapped_reads/{sample}_L003.bam\" in line 191:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mapped_reads/{sample}_L004.bam\" in line 192:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/merged/{sample}.bam\" in line 194:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/merged/{sample}.bam\" in line 206:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/sorted/{sample}.bam\" in line 208:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/samtools/sort_sam/{sample}.log\" in line 210:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/sorted/{sample}.bam\" in line 222:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/sorted/{sample}.bam.bai\" in line 224:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/sorted/{sample}.bam\" in line 232:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/sorted/{sample}.bam.bai\" in line 233:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/dedup/{sample}.bam\" in line 235:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/dedup/{sample}.metrics.txt\" in line 236:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/picard/dedup/{sample}.log\" in line 238:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/dedup/{sample}.bam\" in line 251:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}\" in line 252:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}\" in line 253:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/recal/{sample}.recal_data.table\" in line 256:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/gatk/baserecalibrator/{sample}.log\" in line 258:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/dedup/{sample}.bam\" in line 268:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}\" in line 269:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}\" in line 270:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/recal/{sample}.recal_data.table\" in line 271:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/recal/{sample}.bam\" in line 273:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/gatk/gatk_applybqsr/{sample}.log\" in line 275:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/recal/{sample}.bam\" in line 285:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/recal/{sample}.bam.bai\" in line 287:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}\" in line 297:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/PON_VCF/{PON_samples}.vcf.gz\" in line 301:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}\" in line 310:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}\" in line 326:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}\" in line 343:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/recal/{sample}.bam\" in line 344:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calls/{sample}.vcf.gz\" in line 350:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calls/{sample}.f1r2.tar.gz\" in line 351:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calls/{sample}.f1r2.tar.gz\" in line 363:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calls/{sample}.read-orientation-model.tar.gz\" in line 365:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/recal/{sample}.bam\" in line 374:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calls/{sample}.pileupsummaries.table\" in line 378:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calls/{sample}.pileupsummaries.table\" in line 387:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calls/{sample}.segments.table\" in line 389:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calls/{sample}.contamination.table\" in line 390:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}\" in line 400:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calls/{sample}.vcf.gz\" in line 401:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calls/{sample}.segments.table\" in line 402:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calls/{sample}.contamination.table\" in line 403:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calls/{sample}.read-orientation-model.tar.gz\" in line 404:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/filterd_calls/{sample}.vcf.gz\" in line 406:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}\" in line 422:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/recal/{sample}.bam\" in line 423:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/recal/{sample}.bam.bai\" in line 424:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/samtools_calls/{sample}.vcf.gz\" in line 428:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/samtools_calls/{sample}.vcf.gz\" in line 440:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/samtools_calls/{sample}.vcf.gz.tbi\" in line 442:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{genome}\" in line 449:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calls/{sample}.vcf.gz\" in line 450:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/calls/{sample}.vcf.gz.stats\" in line 452:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/samtools_calls/{sample}.vcf.gz.tbi\" in line 461:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/samtools_calls/{sample}.vcf.gz\" in line 462:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/samtools_filterd_calls/{sample}.vcf.gz\" in line 464:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/recal/{sample}.bam\" in line 477:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lumpySV/{sample}.discordants.unsorted.bam\" in line 479:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/recal/{sample}.bam\" in line 487:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lumpySV/{sample}.splitters.unsorted.bam\" in line 489:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lumpySV/{sample}.discordants.unsorted.bam\" in line 500:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lumpySV/{sample}.splitters.unsorted.bam\" in line 501:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lumpySV/{sample}.discordants.bam\" in line 503:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lumpySV/{sample}.splitters.bam\" in line 504:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/recal/{sample}.bam\" in line 517:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lumpySV/{sample}.discordants.bam\" in line 518:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lumpySV/{sample}.splitters.bam\" in line 519:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lumpySV/{sample}.vcf\" in line 521:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/recal/{sample}.bam\" in line 533:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lumpySV/{sample}.splitters.bam\" in line 536:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/CNV/{sample}.csv\" in line 538:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 17:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 34:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 35:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 37:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 39:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 41:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 43:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 44:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 45:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 48:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 54:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 57:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 59:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 61:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 66:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 72:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 99:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 110:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 126:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 136:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 136:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 138:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 139:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 140:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 141:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 154:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 162:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 167:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 167:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 168:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 177:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 189:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 190:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 191:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 192:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 194:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 206:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 208:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 210:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 222:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 224:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 232:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 233:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 235:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 236:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 238:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 251:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 252:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 253:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 258:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 268:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 269:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 270:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 273:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 275:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 285:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 287:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 297:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 301:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 310:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 326:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 343:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 350:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 351:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 363:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 365:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 374:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 378:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 387:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 389:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 390:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 400:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 402:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 403:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 404:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 406:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 422:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 424:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 428:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 440:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 442:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 449:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 452:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 461:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 462:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 464:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 477:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 479:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 487:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 489:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 500:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 501:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 503:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 504:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 517:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 518:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 519:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 521:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 533:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 536:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 538:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 95:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 136:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 136:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 138:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 139:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 140:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 141:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 167:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule download_refGDC (line 85, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule trim_galore_pe (line 154, /tmp/tmp2qvrim5k/Snakefile):\n    * Param output_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule samtools_merge (line 244, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 313, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index_bqsr (line 440, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule Mutect2_PON (line 465, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule GenomicsDBImport (line 491, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule CreateSomaticPanelOfNormals (line 522, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule Mutect2 (line 552, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule LearnReadOrientationModel (line 589, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule GetPileupSummaries (line 615, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule CalculateContamination (line 643, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule FilterMutectCalls (line 671, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule Ext_discordant_align (line 766, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule Ext_splitread_align (line 789, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sort_align (line 817, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule lumpy_SV (line 852, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule panelcn_mop (line 884, /tmp/tmp2qvrim5k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1612280801.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dence/rnaseq_star_iseq_trial",
    "linting": "WorkflowError in line 10 of /tmp/tmpxkokml9x/rules/common.smk:\nError validating config file.\nValidationError: {\u0027Miami_of_Ohio\u0027: \u0027/home/d.ence/d.ence_peter_share/pinus_taeda_L/reanalysis_old_RNAseq/rna-seq-star-deseq2/star_indices/t3352.cdna.v1.contig\u0027, \u0027PacBio\u0027: \u0027/home/d.ence/d.ence_peter_share/pinus_taeda_L/reanalysis_old_RNAseq/rna-seq-star-deseq2/star_indices/PacBio\u0027, \u0027Clustered\u0027: \u0027/home/d.ence/d.ence_peter_share/pinus_taeda_L/reanalysis_old_RNAseq/rna-seq-star-deseq2/star_indices/clustered_longer_than_500.est_0.99\u0027, \u0027v2.01_annnotations\u0027: \u0027/home/d.ence/d.ence_peter_share/pinus_taeda_L/reanalysis_old_RNAseq/rna-seq-star-deseq2/star_indices/v2.01_genome_annots_index\u0027} is not of type \u0027string\u0027\n\nFailed validating \u0027type\u0027 in schema[\u0027properties\u0027][\u0027ref\u0027][\u0027properties\u0027][\u0027index\u0027]:\n    OrderedDict([(\u0027type\u0027, \u0027string\u0027)])\n\nOn instance[\u0027ref\u0027][\u0027index\u0027]:\n    {\u0027Clustered\u0027: \u0027/home/d.ence/d.ence_peter_share/pinus_taeda_L/reanalysis_old_RNAseq/rna-seq-star-deseq2/star_indices/clustered_longer_than_500.est_0.99\u0027,\n     \u0027Miami_of_Ohio\u0027: \u0027/home/d.ence/d.ence_peter_share/pinus_taeda_L/reanalysis_old_RNAseq/rna-seq-star-deseq2/star_indices/t3352.cdna.v1.contig\u0027,\n     \u0027PacBio\u0027: \u0027/home/d.ence/d.ence_peter_share/pinus_taeda_L/reanalysis_old_RNAseq/rna-seq-star-deseq2/star_indices/PacBio\u0027,\n     \u0027v2.01_annnotations\u0027: \u0027/home/d.ence/d.ence_peter_share/pinus_taeda_L/reanalysis_old_RNAseq/rna-seq-star-deseq2/star_indices/v2.01_genome_annots_index\u0027}\n  File \"/tmp/tmpxkokml9x/Snakefile\", line 3, in \u003cmodule\u003e\n  File \"/tmp/tmpxkokml9x/rules/common.smk\", line 10, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1608505416.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ZunsongHu/pipeline",
    "linting": "Workflow defines that rule get_genome is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_faidx is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_dict is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_known_variation is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule remove_iupac_codes is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule tabix_known_variants is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule bwa_index is eligible for caching between workflows (use the --cache argument to enable this).\nLints for snakefile /tmp/tmpr1wbyi6d/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_vep_plugins (line 243, /tmp/tmpr1wbyi6d/rules/ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 160, /tmp/tmpr1wbyi6d/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmpr1wbyi6d/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmpr1wbyi6d/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmpr1wbyi6d/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1600902432.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": null,
    "full_name": "sam0per/gatk-variant-calling",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1612527479.0
  },
  {
    "data_format": 1,
    "description": "A quality control pipeline for Oxford Nanopore sequencing",
    "formatting": "[WARNING] In file \"/tmp/tmpr0n_nhk6/rules/eval.smk\":  Keyword \"shell\" at line 59 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpr0n_nhk6/rules/preprocess.smk\":  Keyword \"shell\" at line 23 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "koesterlab/nanopore-qc",
    "linting": "Detecting available FASTQ files...\nLints for snakefile /tmp/tmpr0n_nhk6/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule calc_tree_colormap (line 1, /tmp/tmpr0n_nhk6/rules/utils.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule merge_fastq (line 1, /tmp/tmpr0n_nhk6/rules/preprocess.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule crimson (line 29, /tmp/tmpr0n_nhk6/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule extract_classification_tree (line 76, /tmp/tmpr0n_nhk6/rules/kraken.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_raw (line 3, /tmp/tmpr0n_nhk6/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_read_lengths (line 31, /tmp/tmpr0n_nhk6/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_quals (line 55, /tmp/tmpr0n_nhk6/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_kmer_mapping (line 79, /tmp/tmpr0n_nhk6/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_classification_tree (line 104, /tmp/tmpr0n_nhk6/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule per_sample_report (line 42, /tmp/tmpr0n_nhk6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1543929190.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": null,
    "full_name": "MLKaufman/rna-seq-star-deseq2",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1611085208.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "babramso/vcf_snake",
    "linting": "Workflow defines that rule get_genome is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_faidx is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_dict is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_known_variation is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule remove_iupac_codes is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule tabix_known_variants is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule bwa_index is eligible for caching between workflows (use the --cache argument to enable this).\nLints for snakefile /tmp/tmpa81qlne7/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_vep_plugins (line 243, /tmp/tmpa81qlne7/rules/ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 160, /tmp/tmpa81qlne7/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmpa81qlne7/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmpa81qlne7/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmpa81qlne7/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1603407965.0
  },
  {
    "data_format": 1,
    "description": "gatk-variant-calling",
    "formatting": null,
    "full_name": "manuelconst/gatk-variant-calling",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1611155078.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "alexpenson/rna-seq-kallisto-sleuth",
    "linting": "Lints for snakefile /tmp/tmpwp_egze5/workflow/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpwp_egze5/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 7.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpwp_egze5/workflow/rules/quant.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpwp_egze5/workflow/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule compose_sample_sheet (line 6, /tmp/tmpwp_egze5/workflow/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1603375395.0
  },
  {
    "data_format": 1,
    "description": "RNA-seq analysis snakemake pipeline with Kallisto and Sleuth",
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "bigmonty12/BRASS",
    "linting": "Lints for snakefile /tmp/tmp8c_a7h1v/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 6.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp8c_a7h1v/rules/quant.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule compose_sample_sheet (line 6, /tmp/tmp8c_a7h1v/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule sleuth_init (line 30, /tmp/tmp8c_a7h1v/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sleuth_diffexp (line 62, /tmp/tmp8c_a7h1v/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_bootstrap (line 91, /tmp/tmp8c_a7h1v/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_pca (line 115, /tmp/tmp8c_a7h1v/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1570567959.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Ducklegs17/intro_to_snakemake",
    "linting": "Lints for rule get_data (line 20, /tmp/tmpivuuug7_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule subset_data (line 42, /tmp/tmpivuuug7_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule trim (line 69, /tmp/tmpivuuug7_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule assemble (line 99, /tmp/tmpivuuug7_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1613090143.0
  },
  {
    "data_format": 1,
    "description": "Creating a synthetic tumor/normal sample pair from CHM1/CHM13 haploid cell lines.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "koesterlab/chm-synthetic-tumor-normal",
    "linting": "Lints for snakefile /tmp/tmpux0brzk3/workflow/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_reads (line 27, /tmp/tmpux0brzk3/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_eval_kit (line 48, /tmp/tmpux0brzk3/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_confident_vcf (line 66, /tmp/tmpux0brzk3/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_confident_bed (line 89, /tmp/tmpux0brzk3/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule compose_truth (line 109, /tmp/tmpux0brzk3/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mix_reads (line 136, /tmp/tmpux0brzk3/workflow/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule copy_normal (line 173, /tmp/tmpux0brzk3/workflow/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule remove_chr (line 196, /tmp/tmpux0brzk3/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1580296029.0
  },
  {
    "data_format": 1,
    "description": "pipeline to find unique primer for genome bins in metagenomes",
    "formatting": "[ERROR] In file \"/tmp/tmpy3sb0xjr/Snakefile\":  \u0027NoParametersError: L13: In localrules definition.\u0027\n[INFO] In file \"/tmp/tmpy3sb0xjr/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmpy3sb0xjr/Snakefile\":  1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "jiarong/uniqprimer",
    "linting": "SyntaxError in line 26 of /tmp/tmpy3sb0xjr/Snakefile:\ninvalid syntax\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1541590754.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpfr54xcnw/rules/download.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 1:16: download_genome:\n```\nwhile formatting code with black.\u0027\n[ERROR] In file \"/tmp/tmpfr54xcnw/rules/filter.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 7:0:         pass\n```\nwhile formatting code with black.\u0027\n[INFO] 2 file(s) raised parsing errors \ud83e\udd15\n[INFO] 8 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "SilasK/StrainDrep",
    "linting": "KeyError in line 9 of /tmp/tmpfr54xcnw/compare.smk:\n\u0027genome_folder\u0027\n  File \"/tmp/tmpfr54xcnw/Snakefile\", line 2, in \u003cmodule\u003e\n  File \"/tmp/tmpfr54xcnw/compare.smk\", line 9, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1607583965.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "whtns/rna-seq-kallisto-sleuth",
    "linting": "Lints for snakefile /tmp/tmp_2lja1qa/workflow/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp_2lja1qa/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 7.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp_2lja1qa/workflow/rules/quant.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp_2lja1qa/workflow/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule compose_sample_sheet (line 6, /tmp/tmp_2lja1qa/workflow/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1585499023.0
  },
  {
    "data_format": 1,
    "description": "KAS-Seq Analysis Workflow",
    "formatting": null,
    "full_name": "lparsons/kas-seq-workflow",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1613441509.0
  },
  {
    "data_format": 1,
    "description": "snakemake repository for alevin quantification of single cell RNAseq data",
    "formatting": "[ERROR] In file \"/tmp/tmpawqntmy9/workflow/rules/alevin.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 4:10: resources:\n```\nwhile formatting code with black.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 2 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "deevdevil88/snakemake_alevin_10x",
    "linting": "Lints for snakefile /tmp/tmpawqntmy9/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 6.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1592388734.0
  },
  {
    "data_format": 1,
    "description": "Using https://github.com/snakemake-workflows/dna-seq-gatk-variant-calling as the template",
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "weizhu365/gatk-variant-calling",
    "linting": "Lints for snakefile /tmp/tmputh8f_hw/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule samtools_index (line 157, /tmp/tmputh8f_hw/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmputh8f_hw/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmputh8f_hw/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmputh8f_hw/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1588106733.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "christacaggiano/GATK_exome_seq",
    "linting": "Workflow defines that rule get_genome is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_faidx is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_dict is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_known_variation is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule remove_iupac_codes is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule tabix_known_variants is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule bwa_index is eligible for caching between workflows (use the --cache argument to enable this).\nLints for snakefile /tmp/tmp78o5gd52/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_vep_plugins (line 243, /tmp/tmp78o5gd52/rules/ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 160, /tmp/tmp78o5gd52/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmp78o5gd52/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmp78o5gd52/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmp78o5gd52/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1592336464.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "sheucke/dna-seq-gatk-variant-calling",
    "linting": "Workflow defines that rule get_genome is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_faidx is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_dict is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_known_variation is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule remove_iupac_codes is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule tabix_known_variants is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule bwa_index is eligible for caching between workflows (use the --cache argument to enable this).\nLints for snakefile /tmp/tmp53ufot3q/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_vep_plugins (line 243, /tmp/tmp53ufot3q/rules/ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 160, /tmp/tmp53ufot3q/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmp53ufot3q/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmp53ufot3q/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmp53ufot3q/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1603098218.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": null,
    "full_name": "MYB201560476/rna-seq-kallisto-sleuth",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1613657705.0
  },
  {
    "data_format": 1,
    "description": "\u962a\u5927\u7528",
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "nkimoto/GATK_pipeline",
    "linting": "FileNotFoundError in line 18 of /tmp/tmpahuk525h/rules/common.smk:\n[Errno 2] No such file or directory: \u0027data/ref/genome.chr21.fa.fai\u0027\n  File \"/tmp/tmpahuk525h/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpahuk525h/rules/common.smk\", line 18, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 689, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1571966680.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "cauliyang/ngs_gatk_dna_gbs_variant_calling",
    "linting": "FileNotFoundError in line 18 of /tmp/tmpkofvv_ds/rules/common.smk:\n[Errno 2] No such file or directory: \u0027data/ref/genome.chr21.fa.fai\u0027\n  File \"/tmp/tmpkofvv_ds/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpkofvv_ds/rules/common.smk\", line 18, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 689, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1569547383.0
  },
  {
    "data_format": 1,
    "description": "Using snakemake-workflows/dna-seq-gatk-variant-calling as a template",
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dchebotarov/varcall-snakemake-test",
    "linting": "Lints for snakefile /tmp/tmpz7ay9k86/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule samtools_index (line 157, /tmp/tmpz7ay9k86/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmpz7ay9k86/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmpz7ay9k86/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmpz7ay9k86/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1582785108.0
  },
  {
    "data_format": 1,
    "description": "standard RNA-seq analysis pipeline (cloned from snakemake example workflow)",
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "yztxwd/rna-seq-standard-pipeline",
    "linting": "Lints for snakefile /tmp/tmpjnoicve0/Snakefile:\n    * Deprecated singularity directive used for container definition in line 35.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpjnoicve0/rules/trim.smk:\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 4:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 13:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpjnoicve0/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpjnoicve0/rules/qc.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule count_matrix (line 17, /tmp/tmpjnoicve0/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule rseqc_junction_annotation (line 41, /tmp/tmpjnoicve0/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_junction_saturation (line 80, /tmp/tmpjnoicve0/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_innerdis (line 182, /tmp/tmpjnoicve0/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_readdup (line 250, /tmp/tmpjnoicve0/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rseqc_readgc (line 285, /tmp/tmpjnoicve0/rules/qc.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1604400794.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for non-model organism analyses",
    "formatting": "[ERROR] In file \"/tmp/tmpnix8l0q_/workflow/rules/popoolation2.smk\":  \u0027InvalidParameterSyntax: L165: Over-indented recognised keyword found: \u0027resources\u0027\u0027\n[ERROR] In file \"/tmp/tmpnix8l0q_/workflow/rules/popoolation.smk\":  \u0027InvalidParameterSyntax: L110: Over-indented recognised keyword found: \u0027resources\u0027\u0027\n[INFO] 2 file(s) raised parsing errors \ud83e\udd15\n[INFO] 11 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "NBISweden/manticore-smk",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 7,
    "topics": [],
    "updated_at": 1608284514.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "geparada/rna-seq-kallisto-sleuth",
    "linting": "Lints for snakefile /tmp/tmpizj4dl38/workflow/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpizj4dl38/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 7.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpizj4dl38/workflow/rules/quant.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpizj4dl38/workflow/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule compose_sample_sheet (line 6, /tmp/tmpizj4dl38/workflow/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1610599646.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline to automate running multiple samples through the ENCODE ATAC-seq workflow",
    "formatting": "[ERROR] In file \"/tmp/tmpj75yjt9r/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 60:4:     groupings_dict[group] = {\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmpj75yjt9r/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "robinmeyers/atac-encode-snakemake",
    "linting": "Lints for snakefile /tmp/tmpj75yjt9r/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 109:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 158:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 182:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 220:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 26:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 110:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Deprecated singularity directive used for container definition in line 26.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule all (line 124, /tmp/tmpj75yjt9r/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule gather_qc (line 134, /tmp/tmpj75yjt9r/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule collect_tag_align_files (line 156, /tmp/tmpj75yjt9r/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule run_cromwell_workflow (line 203, /tmp/tmpj75yjt9r/Snakefile):\n    * Shell command directly uses variable caper_params from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule make_json_input (line 244, /tmp/tmpj75yjt9r/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule make_grouped_json_input (line 275, /tmp/tmpj75yjt9r/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule merge_grouped_tagalign (line 287, /tmp/tmpj75yjt9r/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1586798423.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 124:0: \u003cline number missing in source\u003e\n```\nwhile formatting code with black.\u0027\n[ERROR] In file \"/tmp/tmp2_qgdlha/workflow/rules/ilastik.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 111:0: \u003cline number missing in source\u003e\n```\nwhile formatting code with black.\u0027\n[INFO] 2 file(s) raised parsing errors \ud83e\udd15\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ndamond/ImcSegmentationSnakemake",
    "linting": "Lints for snakefile /tmp/tmp2_qgdlha/workflow/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 472:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 13:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp2_qgdlha/workflow/rules/ilastik.smk:\n    * Absolute path \"/ilastik-release/run_ilastik.sh\" in line 9:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule generate_sample_list (line 396, /tmp/tmp2_qgdlha/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mcdfolder2imcfolder (line 431, /tmp/tmp2_qgdlha/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ome2analysis (line 477, /tmp/tmp2_qgdlha/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule analysis2channelmeta (line 514, /tmp/tmp2_qgdlha/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule exportacmeta (line 537, /tmp/tmp2_qgdlha/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param fol_path_out is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule compensation_copy_sm (line 641, /tmp/tmp2_qgdlha/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule modify_measurement_basic_pipeline (line 698, /tmp/tmp2_qgdlha/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule move_panel_to_cpout (line 725, /tmp/tmp2_qgdlha/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_untrained_ilastik (line 738, /tmp/tmp2_qgdlha/workflow/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule generate_channelmeta_probab (line 764, /tmp/tmp2_qgdlha/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule zip_output_data (line 776, /tmp/tmp2_qgdlha/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule 20 (line 123, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 21 (line 123, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 22 (line 123, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 23 (line 148, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 24 (line 148, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 25 (line 148, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 26 (line 148, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 27 (line 148, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 28 (line 148, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 29 (line 123, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 30 (line 123, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cp_get_plugins (line 174, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule generate_file_list (line 196, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule cp_create_batch_data (line 221, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outfolder is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule cp_run_batch (line 285, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cp_get_groups (line 348, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cp_combine_batch_output (line 372, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule open_project (line 392, /tmp/tmp2_qgdlha/workflow/rules/cellprofiler.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule 38 (line 110, /tmp/tmp2_qgdlha/workflow/rules/ilastik.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ilastik_run_batch (line 164, /tmp/tmp2_qgdlha/workflow/rules/ilastik.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ilastik_combine_batch_output (line 226, /tmp/tmp2_qgdlha/workflow/rules/ilastik.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_example_data (line 828, /tmp/tmp2_qgdlha/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule download_spillover_data (line 848, /tmp/tmp2_qgdlha/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule clean (line 861, /tmp/tmp2_qgdlha/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable fol_path_base from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1608206436.0
  },
  {
    "data_format": 1,
    "description": "bwa map fastq files ",
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "weizhu365/bwa-align",
    "linting": "Workflow defines that rule get_genome is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_faidx is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_dict is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_known_variation is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule remove_iupac_codes is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule tabix_known_variants is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule bwa_index is eligible for caching between workflows (use the --cache argument to enable this).\nLints for snakefile /tmp/tmpbvqj8la1/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_vep_plugins (line 243, /tmp/tmpbvqj8la1/rules/ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 160, /tmp/tmpbvqj8la1/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmpbvqj8la1/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmpbvqj8la1/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmpbvqj8la1/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1589988148.0
  },
  {
    "data_format": 1,
    "description": "parse vcf",
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "lqsae/vcf-tools",
    "linting": "Lints for snakefile /tmp/tmpqcxqkm3_/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule samtools_index (line 157, /tmp/tmpqcxqkm3_/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmpqcxqkm3_/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmpqcxqkm3_/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmpqcxqkm3_/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1610980693.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for evaluation of assemblies",
    "formatting": "[INFO] 13 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "NBISweden/assemblyeval-smk",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 8,
    "topics": [],
    "updated_at": 1614005091.0
  },
  {
    "data_format": 1,
    "description": "Conifer short-read polishing workflow",
    "formatting": "[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "tallgran/conifer-short-read-polishing",
    "linting": "FileNotFoundError in line 13 of /tmp/tmp80xtd0r0/Snakefile:\n[Errno 2] No such file or directory: \u0027read_metadata.tsv\u0027\n  File \"/tmp/tmp80xtd0r0/Snakefile\", line 13, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 684, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 457, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 814, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1045, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1862, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1357, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 639, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "workflow",
      "snakemake",
      "bioinformatics"
    ],
    "updated_at": 1592376010.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "fuzhiliang/dna-seq-gatk-variant-calling",
    "linting": "FileNotFoundError in line 18 of /tmp/tmp2dmltgpa/rules/common.smk:\n[Errno 2] No such file or directory: \u0027data/ref/genome.chr21.fa.fai\u0027\n  File \"/tmp/tmp2dmltgpa/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmp2dmltgpa/rules/common.smk\", line 18, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 684, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 457, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 814, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1045, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1862, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1357, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 639, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1571622378.0
  },
  {
    "data_format": 1,
    "description": "snakemake gatk best practices 20200522",
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "juntkym/dna-seq-gatk-variant-calling",
    "linting": "Workflow defines that rule get_genome is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_faidx is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_dict is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_known_variation is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule remove_iupac_codes is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule tabix_known_variants is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule bwa_index is eligible for caching between workflows (use the --cache argument to enable this).\nLints for snakefile /tmp/tmph6drnmhf/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_vep_plugins (line 243, /tmp/tmph6drnmhf/rules/ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 160, /tmp/tmph6drnmhf/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmph6drnmhf/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmph6drnmhf/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmph6drnmhf/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1590146243.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "silastittes/dna-seq-gatk-variant-calling",
    "linting": "Lints for snakefile /tmp/tmp8mdih51d/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule samtools_index (line 157, /tmp/tmp8mdih51d/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmp8mdih51d/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmp8mdih51d/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmp8mdih51d/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1582860563.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmpqtbxtvh7/workflow/rules/semapping.smk\":  Inline-formatted keyword \"threads\" at line 66 had its comments relocated above it.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpqtbxtvh7/workflow/rules/pemapping.smk\":  Keyword \"input\" at line 56 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpqtbxtvh7/workflow/rules/pemapping.smk\":  Inline-formatted keyword \"threads\" at line 74 had its comments relocated above it.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "knutdrand/mu-chip",
    "linting": "Lints for snakefile /tmp/tmpqtbxtvh7/workflow/Snakefile:\n    * Deprecated singularity directive used for container definition in line 8.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpqtbxtvh7/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 6.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_sort_pe (line 120, /tmp/tmpqtbxtvh7/workflow/rules/pemapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule filter_reads (line 171, /tmp/tmpqtbxtvh7/workflow/rules/pemapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule remove_small_fragments_bam (line 194, /tmp/tmpqtbxtvh7/workflow/rules/pemapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bamtobedpe (line 213, /tmp/tmpqtbxtvh7/workflow/rules/pemapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule remove_small_fragments (line 232, /tmp/tmpqtbxtvh7/workflow/rules/pemapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_sort (line 112, /tmp/tmpqtbxtvh7/workflow/rules/semapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule filter (line 135, /tmp/tmpqtbxtvh7/workflow/rules/semapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bamtobed (line 186, /tmp/tmpqtbxtvh7/workflow/rules/semapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule merge_reads (line 209, /tmp/tmpqtbxtvh7/workflow/rules/semapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule merge_domains (line 71, /tmp/tmpqtbxtvh7/workflow/rules/peakcalling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule clip_bed (line 94, /tmp/tmpqtbxtvh7/workflow/rules/peakcalling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule heatplot (line 7, /tmp/tmpqtbxtvh7/workflow/rules/plots.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule tssplot (line 32, /tmp/tmpqtbxtvh7/workflow/rules/plots.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule averageplot (line 57, /tmp/tmpqtbxtvh7/workflow/rules/plots.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule joinplots (line 82, /tmp/tmpqtbxtvh7/workflow/rules/plots.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule create_genomes_file (line 3, /tmp/tmpqtbxtvh7/workflow/rules/trackhub.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule create_trackhub (line 21, /tmp/tmpqtbxtvh7/workflow/rules/trackhub.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule create_trackdb (line 44, /tmp/tmpqtbxtvh7/workflow/rules/trackhub.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ucsc_sort (line 68, /tmp/tmpqtbxtvh7/workflow/rules/trackhub.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule create_bw_track (line 95, /tmp/tmpqtbxtvh7/workflow/rules/trackhub.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule trunctate_score (line 115, /tmp/tmpqtbxtvh7/workflow/rules/trackhub.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule create_peak_track (line 134, /tmp/tmpqtbxtvh7/workflow/rules/trackhub.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule create_domain_track (line 158, /tmp/tmpqtbxtvh7/workflow/rules/trackhub.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule prefetch (line 7, /tmp/tmpqtbxtvh7/workflow/rules/sra.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastq_dump_pe (line 26, /tmp/tmpqtbxtvh7/workflow/rules/sra.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastq_dump_se (line 50, /tmp/tmpqtbxtvh7/workflow/rules/sra.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule rename_dumped_sra_pe (line 73, /tmp/tmpqtbxtvh7/workflow/rules/sra.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule rename_dumped_sra_se (line 92, /tmp/tmpqtbxtvh7/workflow/rules/sra.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_chrom_sizes (line 6, /tmp/tmpqtbxtvh7/workflow/rules/other.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule clean_chrom_sizes (line 21, /tmp/tmpqtbxtvh7/workflow/rules/other.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_genes (line 42, /tmp/tmpqtbxtvh7/workflow/rules/other.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_genes_bed (line 57, /tmp/tmpqtbxtvh7/workflow/rules/other.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_unique_tss (line 79, /tmp/tmpqtbxtvh7/workflow/rules/other.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule unzip_bowtie_index (line 117, /tmp/tmpqtbxtvh7/workflow/rules/other.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1607344531.0
  },
  {
    "data_format": 1,
    "description": "\ud83d\udeb0 Snakemake files for dahak workflows. Snakemake files for dahak workflows. (This repo will be absorbed into dahak-taco.)",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "charlesreid1/dahak-flot",
    "linting": "KeyError in line 8 of /tmp/tmpj6wtvoer/rules/dahak/biocontainers.rule:\n\u0027data_dir\u0027\n  File \"/tmp/tmpj6wtvoer/Snakefile\", line 14, in \u003cmodule\u003e\n  File \"/tmp/tmpj6wtvoer/rules/dahak/biocontainers.rule\", line 8, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1522181911.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpbo1jrjd0/workflow/rules/ilastik.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 111:0: \u003cline number missing in source\u003e\n```\nwhile formatting code with black.\u0027\n[ERROR] In file \"/tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 130:0: \u003cline number missing in source\u003e\n```\nwhile formatting code with black.\u0027\n[INFO] 2 file(s) raised parsing errors \ud83e\udd15\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Zhanmengtao/ImcSegmentationSnakemake",
    "linting": "Lints for snakefile /tmp/tmpbo1jrjd0/workflow/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 473:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 13:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpbo1jrjd0/workflow/rules/ilastik.smk:\n    * Absolute path \"/ilastik-release/run_ilastik.sh\" in line 9:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule generate_sample_list (line 396, /tmp/tmpbo1jrjd0/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mcdfolder2imcfolder (line 431, /tmp/tmpbo1jrjd0/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ome2analysis (line 478, /tmp/tmpbo1jrjd0/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule analysis2channelmeta (line 515, /tmp/tmpbo1jrjd0/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule exportacmeta (line 538, /tmp/tmpbo1jrjd0/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param fol_path_out is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule compensation_copy_sm (line 642, /tmp/tmpbo1jrjd0/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule modify_measurement_pipeline (line 703, /tmp/tmpbo1jrjd0/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule move_panel_to_cpout (line 730, /tmp/tmpbo1jrjd0/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_untrained_ilastik (line 743, /tmp/tmpbo1jrjd0/workflow/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule generate_channelmeta_probab (line 769, /tmp/tmpbo1jrjd0/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule zip_output_data (line 781, /tmp/tmpbo1jrjd0/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule 20 (line 129, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 21 (line 129, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 22 (line 129, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 23 (line 154, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 24 (line 154, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 25 (line 154, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 26 (line 154, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 27 (line 154, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 28 (line 154, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 29 (line 129, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 30 (line 129, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cp_get_plugins (line 180, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule generate_file_list (line 202, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule cp_create_batch_data (line 227, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outfolder is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule cp_run_batch (line 291, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cp_get_groups (line 354, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cp_combine_batch_output (line 378, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule open_project (line 398, /tmp/tmpbo1jrjd0/workflow/rules/cellprofiler.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule 38 (line 110, /tmp/tmpbo1jrjd0/workflow/rules/ilastik.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ilastik_run_batch (line 164, /tmp/tmpbo1jrjd0/workflow/rules/ilastik.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ilastik_combine_batch_output (line 226, /tmp/tmpbo1jrjd0/workflow/rules/ilastik.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_example_data (line 833, /tmp/tmpbo1jrjd0/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule download_spillover_data (line 853, /tmp/tmpbo1jrjd0/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule clean (line 866, /tmp/tmpbo1jrjd0/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable fol_path_base from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1611711242.0
  },
  {
    "data_format": 1,
    "description": "RNAseq workflow using snakemake workflow with Kallisto.",
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "pburnham50/KallistoPipeline",
    "linting": "Lints for snakefile /tmp/tmphevbikbh/workflow/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmphevbikbh/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 7.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmphevbikbh/workflow/rules/quant.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmphevbikbh/workflow/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule compose_sample_sheet (line 6, /tmp/tmphevbikbh/workflow/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1599757051.0
  },
  {
    "data_format": 1,
    "description": "template SNP calling",
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "gitbackspacer/jitu-seq-gatk-variant-calling",
    "linting": "FileNotFoundError in line 18 of /tmp/tmpr578vu71/rules/common.smk:\n[Errno 2] No such file or directory: \u0027data/ref/genome.chr21.fa.fai\u0027\n  File \"/tmp/tmpr578vu71/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpr578vu71/rules/common.smk\", line 18, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 684, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 457, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 814, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1045, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1862, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1357, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 639, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1564416750.0
  },
  {
    "data_format": 1,
    "description": "Conifer long-read polishing workflow",
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "tallgran/conifer-long-read-polishing",
    "linting": "FileNotFoundError in line 13 of /tmp/tmpcq6iroqi/Snakefile:\n[Errno 2] No such file or directory: \u0027read_metadata.tsv\u0027\n  File \"/tmp/tmpcq6iroqi/Snakefile\", line 13, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 684, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 457, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 814, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1045, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1862, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1357, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 639, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "workflow",
      "snakemake",
      "bioinformatics"
    ],
    "updated_at": 1592375960.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "YTLogos/snakemake-gatk",
    "linting": "Workflow defines that rule get_genome is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_faidx is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule genome_dict is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule get_known_variation is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule remove_iupac_codes is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule tabix_known_variants is eligible for caching between workflows (use the --cache argument to enable this).\nWorkflow defines that rule bwa_index is eligible for caching between workflows (use the --cache argument to enable this).\nLints for snakefile /tmp/tmp8i3m3v5m/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_vep_plugins (line 243, /tmp/tmp8i3m3v5m/rules/ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 160, /tmp/tmp8i3m3v5m/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmp8i3m3v5m/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmp8i3m3v5m/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmp8i3m3v5m/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1589374377.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for generating native space hcp-mmp segmentations (requires Freesurfer run)",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "khanlab-snakemake/hcp_mmp_to_native",
    "linting": "Lints for snakefile /tmp/tmp0bf_ktyq/workflow/rules/common.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1611335938.0
  },
  {
    "data_format": 1,
    "description": "Clone of the Snakemake workflow for variant calling with the GATK pipeline",
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "mptrsen/gatk-variant-calling",
    "linting": "Lints for snakefile /tmp/tmp7_rnglkg/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule samtools_index (line 157, /tmp/tmp7_rnglkg/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmp7_rnglkg/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmp7_rnglkg/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmp7_rnglkg/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1579776898.0
  },
  {
    "data_format": 1,
    "description": "AW",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "rm93/Awesome-Workflow",
    "linting": "ModuleNotFoundError in line 4 of /tmp/tmpyt1gvmxk/Snakefile:\nNo module named \u0027tqdm\u0027\n  File \"/tmp/tmpyt1gvmxk/Snakefile\", line 4, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1528488237.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "arabidopsisca/snakemake-rna-seq-kallisto-sleuth",
    "linting": "Lints for snakefile /tmp/tmp0h1mekjo/workflow/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp0h1mekjo/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 7.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp0h1mekjo/workflow/rules/quant.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp0h1mekjo/workflow/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule compose_sample_sheet (line 6, /tmp/tmp0h1mekjo/workflow/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1607217225.0
  },
  {
    "data_format": 1,
    "description": "A pipeline for processing 16S / ITS data",
    "formatting": "[WARNING] In file \"/tmp/tmpe2rbnlzi/rules/phyloseq.smk\":  Keyword \"input\" at line 18 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpe2rbnlzi/Snakefile\":  Keyword \"input\" at line 41 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "welch16/microbiome-pipeline",
    "linting": "FileNotFoundError in line 6 of /tmp/tmpe2rbnlzi/Snakefile:\n[Errno 2] No such file or directory: \u0027samples.tsv\u0027\n  File \"/tmp/tmpe2rbnlzi/Snakefile\", line 6, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 684, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 457, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 814, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1045, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1862, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1357, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 639, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1610154995.0
  },
  {
    "data_format": 1,
    "description": "A snakemake workflow for GATK following best practice guidelines",
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "srikanthkris/GATK",
    "linting": "FileNotFoundError in line 18 of /tmp/tmpuffpc90x/rules/common.smk:\n[Errno 2] No such file or directory: \u0027data/ref/genome.chr21.fa.fai\u0027\n  File \"/tmp/tmpuffpc90x/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpuffpc90x/rules/common.smk\", line 18, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 684, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 457, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 814, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1045, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1862, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1357, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 639, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1566779188.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmpr64556qh/Snakefile\":  Keyword \"shell\" at line 95 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "yuxuth/snake_mRNA_v2",
    "linting": "Lints for rule trim_fastqs (line 60, /tmp/tmpr64556qh/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fastqc (line 98, /tmp/tmpr64556qh/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule hisat_mapping (line 133, /tmp/tmpr64556qh/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable hisat from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable STARINDEX from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule featureCount_fq (line 188, /tmp/tmpr64556qh/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable gtf from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule sortBam (line 221, /tmp/tmpr64556qh/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule index_bam (line 258, /tmp/tmpr64556qh/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_bigwigs (line 294, /tmp/tmpr64556qh/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1595002256.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmp75ef5vzi/Snakefile\":  Keyword \"shell\" at line 87 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "yuxuth/snake_hisat_cutadapt",
    "linting": "Lints for rule trim_fastqs (line 54, /tmp/tmp75ef5vzi/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fastqc (line 92, /tmp/tmp75ef5vzi/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule hisat_mapping (line 126, /tmp/tmp75ef5vzi/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable hisat from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable STARINDEX from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule sortBam (line 178, /tmp/tmp75ef5vzi/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule index_bam (line 215, /tmp/tmp75ef5vzi/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule stringtie_FPKM_caculation (line 250, /tmp/tmp75ef5vzi/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable stringtie from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable gtf from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule make_bigwigs (line 290, /tmp/tmp75ef5vzi/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule multiQC (line 333, /tmp/tmp75ef5vzi/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ballgown (line 363, /tmp/tmp75ef5vzi/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1580763096.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dsobral/dna-seq-gatk-variant-calling",
    "linting": "FileNotFoundError in line 18 of /tmp/tmpmw3dag7v/rules/common.smk:\n[Errno 2] No such file or directory: \u0027data/ref/genome.chr21.fa.fai\u0027\n  File \"/tmp/tmpmw3dag7v/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpmw3dag7v/rules/common.smk\", line 18, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 684, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 457, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 814, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1045, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1862, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1357, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 639, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1569592010.0
  },
  {
    "data_format": 1,
    "description": "WGS pipeline using Snakemake",
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "wenliangz/wgs-variant-calling",
    "linting": "Lints for snakefile /tmp/tmp8jtlu89x/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule samtools_index (line 157, /tmp/tmp8jtlu89x/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmp8jtlu89x/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmp8jtlu89x/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmp8jtlu89x/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1578374061.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "whtns/dna-seq-gatk-variant-calling",
    "linting": "Lints for snakefile /tmp/tmpw3qpetm1/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpw3qpetm1/rules/scna.smk:\n    * Absolute path \"/CNAprofiles/segment.Rdata\" in line 20:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule samtools_index (line 157, /tmp/tmpw3qpetm1/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmpw3qpetm1/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmpw3qpetm1/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmpw3qpetm1/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule CopywriteR (line 14, /tmp/tmpw3qpetm1/rules/scna.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Rbin from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param copywriter_output_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param input_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1584738254.0
  },
  {
    "data_format": 1,
    "description": "Analysis of publicly available MCF10A ChIP-Seq data",
    "formatting": "[ERROR] In file \"/tmp/tmpj6c7xi6p/rules/deeptools.smk\":  \u0027NoParametersError: L109: In params definition.\u0027\n[ERROR] In file \"/tmp/tmpj6c7xi6p/rules/align.smk\":  \u0027InvalidParameterSyntax: L60:Invalid key [\u0027.end1.fastq.gz\u0027,\u0027.end2.fastq.gz\u0027]\n index\u0027\n[ERROR] In file \"/tmp/tmpj6c7xi6p/Snakefile\":  \u0027NoParametersError: L29: In input definition.\u0027\n[ERROR] In file \"/tmp/tmpj6c7xi6p/rules/sra_download.smk\":  \u0027NoParametersError: L14: In input definition.\u0027\n[INFO] In file \"/tmp/tmpj6c7xi6p/rules/sra_download.smk\":  4 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmpj6c7xi6p/rules/sra_download.smk\":  1 file(s) would be changed \ud83d\ude2c\n[INFO] In file \"/tmp/tmpj6c7xi6p/rules/sra_download.smk\":  1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "skurscheid/mcf10_promoter_profiling",
    "linting": "KeyError in line 18 of /tmp/tmpj6c7xi6p/Snakefile:\n\u0027project\u0027\n  File \"/tmp/tmpj6c7xi6p/Snakefile\", line 18, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1611913414.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 2 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "kevinrue/pipeline_cellranger_citeseq",
    "linting": "Lints for snakefile /tmp/tmp2ibnhcq5/workflow/Snakefile:\n    * Deprecated singularity directive used for container definition in line 13.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cellranger_count (line 31, /tmp/tmp2ibnhcq5/workflow/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1591797476.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Adrianzo/dna-seq-variant-calling",
    "linting": "FileNotFoundError in line 18 of /tmp/tmp48gb65ti/rules/common.smk:\n[Errno 2] No such file or directory: \u0027data/ref/genome.chr21.fa.fai\u0027\n  File \"/tmp/tmp48gb65ti/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmp48gb65ti/rules/common.smk\", line 18, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 689, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1564840753.0
  },
  {
    "data_format": 1,
    "description": "test",
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "zhujack/dna-seq-gatk-variant-calling",
    "linting": "Lints for snakefile /tmp/tmpnamt3yf2/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule samtools_index (line 157, /tmp/tmpnamt3yf2/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vcf_to_tsv (line 1, /tmp/tmpnamt3yf2/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_stats (line 29, /tmp/tmpnamt3yf2/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 1, /tmp/tmpnamt3yf2/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1585348152.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "gitbackspacer/rna-seq-kallisto-sleuth-test",
    "linting": "Lints for snakefile /tmp/tmp05xufdp_/workflow/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp05xufdp_/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 7.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp05xufdp_/workflow/rules/quant.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp05xufdp_/workflow/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule compose_sample_sheet (line 6, /tmp/tmp05xufdp_/workflow/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1601639009.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmpq9i97iiy/Snakefile\":  Keyword \"input\" at line 48 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpq9i97iiy/Snakefile\":  Keyword \"shell\" at line 60 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpq9i97iiy/Snakefile\":  Keyword \"params\" at line 102 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "yuxuth/snakemake_RNAseq",
    "linting": "Lints for rule merge_fastqs (line 55, /tmp/tmpq9i97iiy/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule trim_adapter (line 101, /tmp/tmpq9i97iiy/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable bbbuk from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable adaptors from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule fastqc (line 138, /tmp/tmpq9i97iiy/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule hisat_mapping (line 177, /tmp/tmpq9i97iiy/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable hisat from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable STARINDEX from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable splicesite_index from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule sortBam (line 230, /tmp/tmpq9i97iiy/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule index_bam (line 269, /tmp/tmpq9i97iiy/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule stringtie_FPKM_caculation (line 302, /tmp/tmpq9i97iiy/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable stringtie from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable gtf from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule make_bigwigs (line 342, /tmp/tmpq9i97iiy/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1561151133.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow to process and analyse Bisulfite-Sequencing data",
    "formatting": "[ERROR] In file \"/tmp/tmpyz7l4azz/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 2:0:     \"2_bismark_mapped/{sample}-{unit}.1_bismark_bt2_PE_report.txt\"\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmpyz7l4azz/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "davidries84/bismark_snakemake",
    "linting": "Lints for snakefile /tmp/tmpyz7l4azz/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 146:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 147:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 161:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 177:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 178:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 377:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 423:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 428:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 150:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 191:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 428:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule fastqc_trimmed (line 150, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bismark_genome_preparation (line 180, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable BISMARK_GENOME_PREPARATION from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule samtools_index (line 214, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bismark_alignment (line 243, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable BISMARK from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule deduplicate_bismark (line 293, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable DEDUPLICATE_BISMARK from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule bam2nuc (line 329, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable BAM2NUC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule bismark_methylation_extractor (line 357, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable BISMARK_METHYLATION_EXTRACTOR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule genomewidecytosinemethylationreport (line 400, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable COVERAGE2CYTOSINE from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule summarizedinucleotides (line 427, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable COVERAGE2CYTOSINE from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule cContextCovFileWithStrandInfoFromGWCMR (line 476, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cytosinecoveragetiling (line 527, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable BISMARKCOV2TILES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule bgzipgwcmr (line 554, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule csigwcmr (line 581, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ViewBS_samplefile (line 608, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable CREATEVIEWBSFILELIST from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule ViewBS_MethCoverage (line 634, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable VIEWBS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule ViewBS_GlobalMethLev (line 665, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable VIEWBS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule ViewBS_MethLevDist (line 694, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable VIEWBS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule ViewBS_MethGeno (line 727, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable VIEWBS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule ViewBS_BisNonConvRate (line 761, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable VIEWBS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule multiqcSummaryReport (line 821, /tmp/tmpyz7l4azz/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1566209711.0
  },
  {
    "data_format": 1,
    "description": "Assembling short genomic reads from bacteria",
    "formatting": "[WARNING] In file \"/tmp/tmp8lugndd0/rules/preprocess.smk\":  Keyword \"shell\" at line 27 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "matrs/assembly-illumina-bact",
    "linting": "RuleException in line 60 of /tmp/tmp8lugndd0/rules/preprocess.smk:\nConda environments are only allowed with shell, script, notebook, or wrapper directives (not with run).\n  File \"/tmp/tmp8lugndd0/Snakefile\", line 2, in \u003cmodule\u003e\n  File \"/tmp/tmp8lugndd0/rules/preprocess.smk\", line 60, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1569499618.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": null,
    "full_name": "kogolts/scRNAseq_SNAKELIKE",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1611270875.0
  },
  {
    "data_format": 1,
    "description": "Small snakemake pipeline to explore RNA-Seq data with deepTools.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "AngryMaciek/snakemake_deeptools",
    "linting": "KeyError in line 46 of /tmp/tmpp9qhs8gv/Snakefile:\n\u0027output_dir\u0027\n  File \"/tmp/tmpp9qhs8gv/Snakefile\", line 46, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "snakemake-pipeline",
      "rna-seq"
    ],
    "updated_at": 1593795952.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "skelviper/scRNA-seq",
    "linting": "Lints for snakefile /tmp/tmpxo7f07hu/Snakefile:\n    * Deprecated singularity directive used for container definition in line 82.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpxo7f07hu/rules/qc.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpxo7f07hu/rules/cell-type.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpxo7f07hu/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule plot_expression (line 57, /tmp/tmpxo7f07hu/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1597370397.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "lparsons/lamaya_tn5_demultiplex",
    "linting": "Lints for snakefile /tmp/tmpe_wcjwj1/Snakefile:\n    * Absolute path \"/{sample}.fastq.gz\" in line 19:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastq_tag/{sample}-read-{read}.fastq\" in line 27:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastq_tag/unmatched-read-{read}.fastq\" in line 28:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastq_tag/multimatched-read-{read}.fastq\" in line 29:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastq_tag/barcode_splitter.log\" in line 30:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastq_tag/{file}.fastq\" in line 42:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{file}.fq\" in line 43:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastq_tag/unmatched-read-1.fastq\" in line 48:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastq_tag/unmatched-read-2.fastq\" in line 49:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastq_tag/unmatched-read-3.fastq\" in line 50:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastq_neb/{sample}-read-{read}.fastq\" in line 53:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastq_neb/unmatched-read-{read}.fastq\" in line 54:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastq_neb/multimatched-read-{read}.fastq\" in line 55:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastq_neb/barcode_splitter.log\" in line 57:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastq_neb/{file}.fastq\" in line 68:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{file}.fq\" in line 69:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}-read-1.fq\" in line 75:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}-read-3.fq\" in line 76:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}.fastq.gz\" in line 78:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/logs/{sample}_umi_tools_extract.log\" in line 80:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule demultiplex_tag (line 29, /tmp/tmpe_wcjwj1/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule move_tag_fastq (line 68, /tmp/tmpe_wcjwj1/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule demultiplex_neb (line 84, /tmp/tmpe_wcjwj1/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule move_neb_fastq (line 125, /tmp/tmpe_wcjwj1/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule extract_umi (line 142, /tmp/tmpe_wcjwj1/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1533243373.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for CircRNA Detection and Quantification",
    "formatting": "[INFO] 4 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "andremrsantos/circrna_smk",
    "linting": "Lints for snakefile /tmp/tmpinuodatd/Snakefile:\n    * Absolute path \"/{sample}_R1.fastq.gz\" in line 3:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample,[\\w\\d-]+}.fastq.gz\" in line 4:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Deprecated singularity directive used for container definition in line 36.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpinuodatd/rules/trim.smk:\n    * Absolute path \"/{sample}.fastq.gz\" in line 7:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}_R1.fastq.gz\" in line 22:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}_R2.fastq.gz\" in line 23:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmpinuodatd/rules/align.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpinuodatd/rules/quant.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Deprecated singularity directive used for container definition in line 29.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 103.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule trim_fastp_se (line 6, /tmp/tmpinuodatd/rules/trim.smk):\n    * Shell command directly uses variable trim from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule trim_fastp_pe (line 41, /tmp/tmpinuodatd/rules/trim.smk):\n    * Shell command directly uses variable trim from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule align_star (line 42, /tmp/tmpinuodatd/rules/align.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule align_star_mate (line 137, /tmp/tmpinuodatd/rules/align.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule dcc_se_samplesheet (line 128, /tmp/tmpinuodatd/rules/quant.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule dcc_pe_samplesheet (line 142, /tmp/tmpinuodatd/rules/quant.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule dcc (line 171, /tmp/tmpinuodatd/rules/quant.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param wkdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1558358461.0
  },
  {
    "data_format": 1,
    "description": "Long read alignment pipelines",
    "formatting": "[WARNING] In file \"/tmp/tmppk0vfwvx/rules/nanosim.smk\":  Keyword \"params\" at line 52 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmppk0vfwvx/rules/mapping.smk\":  \u0027InvalidParameterSyntax: 35\" minimap2- t{ threads}- ax map- ont{ params. genome}{ input}|\n\"samtools view -bS | \"\n\"samtools sort -@{threads} -o {output.bam} 2\u003e {log}\"\n\n\n\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "SeqOccin-SV/seqoccinlr",
    "linting": "PermissionError in line 6 of /tmp/tmppk0vfwvx/rules/common.smk:\n[Errno 13] Permission denied: \u0027/work\u0027\n  File \"/tmp/tmppk0vfwvx/Snakefile\", line 3, in \u003cmodule\u003e\n  File \"/tmp/tmppk0vfwvx/rules/common.smk\", line 6, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 225, in makedirs\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1585666766.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "AlexanderLabWHOI/tara-download-snakemake",
    "linting": "Lints for snakefile /tmp/tmp2yt8b5rp/Snakefile:\n    * Absolute path \"/\u0027+STUDY+\" in line 38:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\u0027+STUDY+\" in line 45:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\u0027+STUDY+\" in line 52:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\u0027+STUDY+\" in line 53:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\u0027+STUDY+\" in line 57:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\u0027+STUDY+\" in line 58:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\u0027+STUDY+\" in line 62:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\u0027+STUDY+\" in line 63:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\u0027+STUDY+\" in line 64:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 38:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 45:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 52:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 53:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 57:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 58:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 62:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 64:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 11:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 38:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 45:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 52:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 53:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 57:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 58:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 62:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule download_fastq (line 50, /tmp/tmp2yt8b5rp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_fastq2 (line 70, /tmp/tmp2yt8b5rp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule move_fastq1 (line 91, /tmp/tmp2yt8b5rp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule move_fastq2 (line 107, /tmp/tmp2yt8b5rp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule md5sum (line 123, /tmp/tmp2yt8b5rp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1550193430.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "myRNASeq/scRNASeqPipeline",
    "linting": "Lints for snakefile /tmp/tmpwvyix4_1/Snakefile:\n    * Deprecated singularity directive used for container definition in line 82.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpwvyix4_1/rules/qc.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpwvyix4_1/rules/cell-type.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpwvyix4_1/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule plot_expression (line 57, /tmp/tmpwvyix4_1/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1610483547.0
  },
  {
    "data_format": 1,
    "description": "Using the snakemake-workflow as a template to create my own WES pipeline",
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "misrak/snakemake_WES",
    "linting": "FileNotFoundError in line 18 of /tmp/tmpgl3gsewr/rules/common.smk:\n[Errno 2] No such file or directory: \u0027data/ref/genome.chr21.fa.fai\u0027\n  File \"/tmp/tmpgl3gsewr/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpgl3gsewr/rules/common.smk\", line 18, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 684, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 457, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 814, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1045, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1862, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1357, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 639, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1562254819.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "blairperry/snakemake_gatk_variantCalling",
    "linting": "FileNotFoundError in line 18 of /tmp/tmpcknrym38/rules/common.smk:\n[Errno 2] No such file or directory: \u0027data/ref/genome.chr21.fa.fai\u0027\n  File \"/tmp/tmpcknrym38/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpcknrym38/rules/common.smk\", line 18, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 684, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 457, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 814, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1045, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1862, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1357, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 639, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1568490127.0
  },
  {
    "data_format": 1,
    "description": "snakemake pipeline for calling uk biobank exomes",
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "alavertu/snakemake-ukb-exome",
    "linting": "FileNotFoundError in line 13 of /tmp/tmpa257l5k2/rules/common.smk:\n[Errno 2] No such file or directory: \u0027/scratch/groups/rbaltman/ukbiobank/ab_samples.txt\u0027\n  File \"/tmp/tmpa257l5k2/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpa257l5k2/rules/common.smk\", line 13, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 684, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 457, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 814, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1045, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1862, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1357, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 639, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1591861173.0
  },
  {
    "data_format": 1,
    "description": "minimal snakemake repo for mixing R and python scripts",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "erblast/snakemake_minimal",
    "linting": "Lints for rule load_dataset (line 22, /tmp/tmpa3wr1oai/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_rmd_direct (line 45, /tmp/tmpa3wr1oai/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_rmd_via_script (line 69, /tmp/tmpa3wr1oai/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_execute_nb_plot (line 94, /tmp/tmpa3wr1oai/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_nb_2_html (line 122, /tmp/tmpa3wr1oai/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule test_utilR (line 152, /tmp/tmpa3wr1oai/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule check_utilR (line 172, /tmp/tmpa3wr1oai/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule readme (line 196, /tmp/tmpa3wr1oai/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule index_md (line 215, /tmp/tmpa3wr1oai/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule index_rst (line 230, /tmp/tmpa3wr1oai/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1576666535.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmp1ev1au6f/workflow/Snakefile\":  Keyword \"input\" at line 42 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmp1ev1au6f/workflow/Snakefile\":  \u0027SyntaxError: L49: Unrecognised keyword \u0027expand\u0027 in rule all definition\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "fuzhiliang/rna-seq-kallisto-sleuth",
    "linting": "Lints for snakefile /tmp/tmp1ev1au6f/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 7.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp1ev1au6f/workflow/rules/quant.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp1ev1au6f/workflow/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule compose_sample_sheet (line 6, /tmp/tmp1ev1au6f/workflow/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1571735273.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline to automate a standard PSASS workflow",
    "formatting": "[INFO] 4 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "SexGenomicsToolkit/PSASS-workflow",
    "linting": "Lints for snakefile /tmp/tmpd0ggg7q2/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpd0ggg7q2/rules/resources.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpd0ggg7q2/rules/processing.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpd0ggg7q2/rules/analyses.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1610028361.0
  },
  {
    "data_format": 1,
    "description": "This Snakemake pipeline implements the GATK best-practices workflow for calling short germline variants.",
    "formatting": "[WARNING] In file \"/tmp/tmp6djn5hz6/workflow/rules/annotation.smk\":  Keyword \"output\" at line 5 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ehyunim/gatk-germline-short-variant-pipeline",
    "linting": "WorkflowError in line 11 of /tmp/tmp6djn5hz6/workflow/rules/common.smk:\nConfig file config.yaml not found.\n  File \"/tmp/tmp6djn5hz6/workflow/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmp6djn5hz6/workflow/rules/common.smk\", line 11, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1605860893.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "bricoletc/single-cell-rna-seq-4predocs",
    "linting": "Lints for snakefile /tmp/tmpuphzwt8t/Snakefile:\n    * Deprecated singularity directive used for container definition in line 70.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpuphzwt8t/rules/cell-type.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpuphzwt8t/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1570173635.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "lasejour/snakemake-scRNA-seq",
    "linting": "Lints for snakefile /tmp/tmpdviyvw_y/Snakefile:\n    * Deprecated singularity directive used for container definition in line 70.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpdviyvw_y/rules/cell-type.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpdviyvw_y/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1568736565.0
  },
  {
    "data_format": 1,
    "description": "A Snakemake workflow for characterizing and organizing microbial isolate genome sequences",
    "formatting": "[WARNING] In file \"/tmp/tmpylo5wf3s/Snakefile\":  Keyword \"input\" at line 45 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "tanaes/culture-collector",
    "linting": "Lints for snakefile /tmp/tmpylo5wf3s/Snakefile:\n    * Deprecated singularity directive used for container definition in line 30.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpylo5wf3s/rules/qc.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule file_rename (line 5, /tmp/tmpylo5wf3s/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule assemble_spades (line 1, /tmp/tmpylo5wf3s/rules/assemble.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n\nLints for rule assemble_quast (line 58, /tmp/tmpylo5wf3s/rules/assemble.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n\nLints for rule checkm_setup (line 3, /tmp/tmpylo5wf3s/rules/checkm.smk):\n    * Shell command directly uses variable checkm_data from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable checkm_data from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule bwa_index (line 99, /tmp/tmpylo5wf3s/rules/checkm.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule bwa_mem (line 132, /tmp/tmpylo5wf3s/rules/checkm.smk):\n    * Param index is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule samtools_index (line 169, /tmp/tmpylo5wf3s/rules/checkm.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule gtdb_setup (line 3, /tmp/tmpylo5wf3s/rules/taxonomy.smk):\n    * Shell command directly uses variable gtdb_data from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule gtdb_prep (line 38, /tmp/tmpylo5wf3s/rules/taxonomy.smk):\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule taxonomy_gtdb (line 63, /tmp/tmpylo5wf3s/rules/taxonomy.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Shell command directly uses variable gtdb_data from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1597261596.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "lxhuang7/snakemake-workflows-rna-seq-kallisto-sleuth",
    "linting": "Lints for snakefile /tmp/tmp6avq_dz3/workflow/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp6avq_dz3/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 7.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp6avq_dz3/workflow/rules/quant.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp6avq_dz3/workflow/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule compose_sample_sheet (line 6, /tmp/tmp6avq_dz3/workflow/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1573602799.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "myRNASeq/FF2",
    "linting": "Lints for snakefile /tmp/tmp4tvi_v7u/Snakefile:\n    * Deprecated singularity directive used for container definition in line 82.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp4tvi_v7u/rules/qc.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp4tvi_v7u/rules/cell-type.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp4tvi_v7u/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule plot_expression (line 57, /tmp/tmp4tvi_v7u/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1610482432.0
  },
  {
    "data_format": 1,
    "description": "A Snakemake Workflow for Gene Set Enrichment Analysis",
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "LittleFool/snakemake-workflow-gsea",
    "linting": "Lints for snakefile /tmp/tmpluvyy1av/rules/trim.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpluvyy1av/rules/star.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpluvyy1av/rules/gsea.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule cutadapt_pe (line 7, /tmp/tmpluvyy1av/rules/trim.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule cutadapt_se (line 47, /tmp/tmpluvyy1av/rules/trim.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule align (line 17, /tmp/tmpluvyy1av/rules/star.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule count_matrix (line 36, /tmp/tmpluvyy1av/rules/count.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule gsea (line 1, /tmp/tmpluvyy1av/rules/gsea.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule gsea_cleanup (line 40, /tmp/tmpluvyy1av/rules/gsea.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1587047806.0
  },
  {
    "data_format": 1,
    "description": "Adaptation of Derek Croote\u0027s pipeline to process assembled BCR sequences",
    "formatting": "[WARNING] In file \"/tmp/tmp7ioqft5o/Snakefile\":  Keyword \"input\" at line 19 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 3 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "iosonofabio/singlecell-bcr",
    "linting": "Lints for rule get_immcantation_image (line 39, /tmp/tmp7ioqft5o/rules/get_container.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule transfer_contigs (line 7, /tmp/tmp7ioqft5o/rules/assemble.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule blast_constant_region (line 49, /tmp/tmp7ioqft5o/rules/assemble.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule igblast_changeo (line 99, /tmp/tmp7ioqft5o/rules/assemble.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule merge_changeo_constant (line 158, /tmp/tmp7ioqft5o/rules/assemble.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule combine_assemblies (line 200, /tmp/tmp7ioqft5o/rules/assemble.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1560287830.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for single cell RNAseq",
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "rpauly/snakemake_workflow_sc_rnaseq",
    "linting": "Lints for snakefile /tmp/tmp5akux42d/Snakefile:\n    * Deprecated singularity directive used for container definition in line 82.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp5akux42d/rules/qc.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp5akux42d/rules/cell-type.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp5akux42d/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule plot_expression (line 57, /tmp/tmp5akux42d/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1600719050.0
  },
  {
    "data_format": 1,
    "description": "WRF post processing",
    "formatting": "[ERROR] In file \"/tmp/tmpw8v888kk/Snakefile\":  \u0027NoParametersError: L18: In input definition.\u0027\n[INFO] In file \"/tmp/tmpw8v888kk/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmpw8v888kk/Snakefile\":  1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "eelsirhc/wrf_pp",
    "linting": "Lints for snakefile /tmp/tmpw8v888kk/Snakefile:\n    * Deprecated singularity directive used for container definition in line 9.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpw8v888kk/rules/other.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule combined_wrfout (line 18, /tmp/tmpw8v888kk/rules/other.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule diag_simple (line 76, /tmp/tmpw8v888kk/rules/other.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule make_index (line 96, /tmp/tmpw8v888kk/rules/other.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1556896075.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 4 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "metagenome-atlas/genome-annotator",
    "linting": "OSError in line 10 of /tmp/tmpt1gg9pm6/Snakefile:\nneed a \u0027input\u0027 argument in the config file\n  File \"/tmp/tmpt1gg9pm6/Snakefile\", line 10, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1547299782.0
  },
  {
    "data_format": 1,
    "description": "Code to setup and maintain reference assemblies and accompanying data",
    "formatting": "[WARNING] In file \"/tmp/tmpij_hpc62/workflow/Snakefile\":  Keyword \"input\" at line 150 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpij_hpc62/workflow/Snakefile\":  Keyword \"wildcard_constraints\" at line 153 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpij_hpc62/workflow/Snakefile\":  Keyword \"input\" at line 213 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "DKFZ-ODCF/reference-data",
    "linting": "KeyError in line 15 of /tmp/tmpij_hpc62/workflow/Snakefile:\n\u0027genome_config\u0027\n  File \"/tmp/tmpij_hpc62/workflow/Snakefile\", line 15, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1614000715.0
  },
  {
    "data_format": 1,
    "description": "concensus caller for circular amplified long read nanopore data",
    "formatting": "[ERROR] In file \"/tmp/tmp3k4sekbg/Snakefile\":  \u0027NoParametersError: L18: In input definition.\u0027\n[INFO] In file \"/tmp/tmp3k4sekbg/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmp3k4sekbg/Snakefile\":  1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "zztin/concaller",
    "linting": "WorkflowError in line 5 of /tmp/tmp3k4sekbg/Snakefile:\nConfig file must be given as JSON or YAML with keys at top level.\n  File \"/tmp/tmp3k4sekbg/Snakefile\", line 5, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1584550308.0
  },
  {
    "data_format": 1,
    "description": "snakemake workflow for mappind single/paired datas",
    "formatting": "[ERROR] In file \"/tmp/tmp0f_tvp7m/Snakefile\":  \u0027InvalidParameterSyntax: 342R1=f\"{samples_dir}{{samples}}_R1.fastq.gz\" if not demultiplex elsef\"{out_dir}0_demultiplex/{{samples}}.R1.fastq.gz\"\n\u0027\n[INFO] In file \"/tmp/tmp0f_tvp7m/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "sravel/snake-Mapping",
    "linting": "ModuleNotFoundError in line 10 of /tmp/tmp0f_tvp7m/Snakefile:\nNo module named \u0027pysam\u0027\n  File \"/tmp/tmp0f_tvp7m/Snakefile\", line 10, in \u003cmodule\u003e\n  File \"/tmp/tmp0f_tvp7m/script/module.py\", line 10, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1606836153.0
  },
  {
    "data_format": 1,
    "description": "template of single cell sequencing from scilife",
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "sunjiangming/scRNASeq",
    "linting": "Lints for snakefile /tmp/tmp73_rvl84/Snakefile:\n    * Deprecated singularity directive used for container definition in line 82.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp73_rvl84/rules/qc.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp73_rvl84/rules/cell-type.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp73_rvl84/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule plot_expression (line 57, /tmp/tmp73_rvl84/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1593436345.0
  },
  {
    "data_format": 1,
    "description": "learning scRNA workflow",
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dming1024/scRNA-seq_snakemake",
    "linting": "Lints for snakefile /tmp/tmpvulq9p6o/Snakefile:\n    * Deprecated singularity directive used for container definition in line 70.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpvulq9p6o/rules/cell-type.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpvulq9p6o/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1570629741.0
  },
  {
    "data_format": 1,
    "description": "Example Snakemake workflow describing the use of input functions.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jakevc/snakemake_inputfuncs",
    "linting": "Lints for rule first (line 17, /tmp/tmp7mrvjtlc/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1562179304.0
  },
  {
    "data_format": 1,
    "description": "Simplified SAMap workflow",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ebi-gene-expression-group/samap-workflow",
    "linting": "WorkflowError in line 4 of /tmp/tmp7gnunsw9/workflow/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmp7gnunsw9/workflow/Snakefile\", line 4, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1613994142.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "MehdiFard/Skill_test_McGill_Snakemake",
    "linting": "Lints for snakefile /tmp/tmp0_q2g9hf/Snakefile:\n    * Absolute path \"/ID=chr{wildcards.file}/p\" in line 154:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/contig/d\" in line 154:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/##bcftools/d\" in line 154:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule parsing_metadata (line 33, /tmp/tmp0_q2g9hf/Snakefile):\n    * Shell command directly uses variable VCF_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1611403896.0
  },
  {
    "data_format": 1,
    "description": "RNA-Seq data analysis: Quantification, Differential Gene Expression, Differential Transcripts Usage",
    "formatting": "[WARNING] In file \"/tmp/tmptu57crtj/Snakefile\":  Keyword \"input\" at line 233 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "AngryMaciek/snakemake_qdgedtu",
    "linting": "KeyError in line 48 of /tmp/tmptu57crtj/Snakefile:\n\u0027output_dir\u0027\n  File \"/tmp/tmptu57crtj/Snakefile\", line 48, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "snakemake-pipeline",
      "rna-seq",
      "differential-gene-expression",
      "differential-transcripts"
    ],
    "updated_at": 1593795884.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmppcmpm76v/workflow/Snakefile\":  \u0027InvalidParameterSyntax: L50:Invalid key expand(\u0027results/tractmap/transform_tractmaps_to_template/templateSpace-{template}_{seed}_k-{k}_tractmaps_Averaged_dseg_FINAL.nii.gz\u0027, template= config[\u0027template\u0027], seed= seeds, k= range(2, config[\u0027max_k\u0027]+1))\n Gephi_Nodes_and_Edges_Tables_dir\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "nchris5/diffparc-smk_piriform",
    "linting": "SyntaxError in line 50 of /tmp/tmppcmpm76v/workflow/Snakefile:\ninvalid syntax\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1606775179.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "myRNASeq/FF",
    "linting": "Lints for snakefile /tmp/tmptp0nhttm/Snakefile:\n    * Deprecated singularity directive used for container definition in line 82.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmptp0nhttm/rules/qc.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmptp0nhttm/rules/cell-type.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmptp0nhttm/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule plot_expression (line 57, /tmp/tmptp0nhttm/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1610482406.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmpq_3799u_/Snakefile\":  Keyword \"output\" at line 90 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "robinmeyers/cutnrun-snakemake",
    "linting": "ModuleNotFoundError in line 10 of /tmp/tmpq_3799u_/Snakefile:\nNo module named \u0027Bio\u0027\n  File \"/tmp/tmpq_3799u_/Snakefile\", line 10, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1611003549.0
  },
  {
    "data_format": 1,
    "description": "Analysis of xenograft data",
    "formatting": "[ERROR] In file \"/tmp/tmpyl8fjw2k/Snakefile\":  \u0027NoParametersError: L25: In input definition.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "skurscheid/mcf10a_xenografts",
    "linting": "KeyError in line 12 of /tmp/tmpyl8fjw2k/Snakefile:\n\u0027units\u0027\n  File \"/tmp/tmpyl8fjw2k/Snakefile\", line 12, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1590034234.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "myRNASeq/zoe",
    "linting": "Lints for snakefile /tmp/tmp1dtvnm8x/Snakefile:\n    * Deprecated singularity directive used for container definition in line 82.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp1dtvnm8x/rules/qc.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp1dtvnm8x/rules/cell-type.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp1dtvnm8x/rules/diffexp.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule plot_expression (line 57, /tmp/tmp1dtvnm8x/rules/diffexp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1610482751.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline for generation of GISTIC focal alteration frequencies from sWGS absolute copy number profiles",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Phil9S/swgs-gistic",
    "linting": "FileNotFoundError in line 12 of /tmp/tmpw4xftd2b/rules/common.smk:\n[Errno 2] No such file or directory: \u0027sample_sheet.tsv\u0027\n  File \"/tmp/tmpw4xftd2b/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpw4xftd2b/rules/common.smk\", line 12, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 689, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1602260789.0
  },
  {
    "data_format": 1,
    "description": "Snakemake, OpenMS, and more",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "mafreitas/regius",
    "linting": "Lints for snakefile /tmp/tmp6al3rx8d/Snakefile:\n    * Absolute path \"/data\" in line 13:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 62:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 188:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 248:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 79:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 189:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule DecoyDatabaseRule (line 61, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule VBConvertmzML (line 86, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule VBConvertmzXML (line 111, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule MyriMatchAdapterRule (line 140, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule IDPosteriorErrorProbabilityMyr (line 162, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule MzTabExporterMyr (line 185, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule MSGFPlusAdapter (line 212, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule IDPosteriorErrorProbabilityMsgf (line 237, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule MzTabExporterMsgf (line 261, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule IDMergeConsensusPep (line 289, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule ConsensusID (line 315, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule PeptideIndexer (line 340, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule MzTabExporter (line 364, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule IDMergeFido (line 393, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule FidoAdapter (line 419, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule TextExporterProt (line 442, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule TextExporter (line 466, /tmp/tmp6al3rx8d/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1513267939.0
  },
  {
    "data_format": 1,
    "description": "A small snakemake pipeline to perform quality analysis of RNA-Seq data with FastQC.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "AngryMaciek/snakemake_fastqc",
    "linting": "KeyError in line 49 of /tmp/tmp52khf97n/Snakefile:\n\u0027output_dir\u0027\n  File \"/tmp/tmp52khf97n/Snakefile\", line 49, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "snakemake-pipeline",
      "rna-seq",
      "quality-control"
    ],
    "updated_at": 1593795936.0
  },
  {
    "data_format": 1,
    "description": "Amplicon Seq for Apprill Lab",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "microlei/apprill-seq",
    "linting": "Lints for rule clean (line 39, /tmp/tmp9z9a4pfn/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plotQP (line 61, /tmp/tmp9z9a4pfn/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter (line 78, /tmp/tmp9z9a4pfn/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule learnError (line 107, /tmp/tmp9z9a4pfn/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule uniques (line 132, /tmp/tmp9z9a4pfn/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule removeChimeras (line 158, /tmp/tmp9z9a4pfn/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule trackReads (line 183, /tmp/tmp9z9a4pfn/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule taxonomy (line 214, /tmp/tmp9z9a4pfn/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1605109089.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "LCrossman/ribosomal_snakemake",
    "linting": "WorkflowError in line 1 of /tmp/tmpo6rtbuqt/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmpo6rtbuqt/Snakefile\", line 1, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1597405838.0
  },
  {
    "data_format": 1,
    "description": "pipeline i used for calling sQTL in chimps",
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "bfairkun/sQTL",
    "linting": "FileNotFoundError in line 13 of /tmp/tmpg1_sqyou/rules/common.smk:\n[Errno 2] No such file or directory: \u0027RNASeqFileList.tsv\u0027\n  File \"/tmp/tmpg1_sqyou/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpg1_sqyou/rules/common.smk\", line 13, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 689, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1571675952.0
  },
  {
    "data_format": 1,
    "description": "A workflow for getting gene information based on RNA-Seq data",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "DaanJG98/RNA-Seq-Workflow",
    "linting": "Lints for snakefile /tmp/tmpx6h2nee5/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 89:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 154:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 89:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule filter_ids (line 13, /tmp/tmpx6h2nee5/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule get_orthologs (line 34, /tmp/tmpx6h2nee5/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_ncbi_ids (line 53, /tmp/tmpx6h2nee5/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_gene_info (line 72, /tmp/tmpx6h2nee5/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule get_sequence (line 107, /tmp/tmpx6h2nee5/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule conv_kegg_ids (line 140, /tmp/tmpx6h2nee5/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_kegg_ids (line 159, /tmp/tmpx6h2nee5/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule get_genes_per_pubmed (line 194, /tmp/tmpx6h2nee5/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule create_gc_graphs (line 230, /tmp/tmpx6h2nee5/Snakefile):\n    * The dynamic flag is deprecated:\n      Use checkpoints instead, which are more powerful and less error-prone.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#data-dependent-conditional-execution\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule report (line 260, /tmp/tmpx6h2nee5/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1528392888.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline for quality control using Fastqc and Fastq Screen",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "matrs/Quality_control",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1569509367.0
  },
  {
    "data_format": 1,
    "description": "Evaluation workflow for Bitpacked Hopscotch Hashtable.",
    "formatting": "[INFO] 4 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "HenningTimm/bpht_evaluation_workflow",
    "linting": "Lints for snakefile /tmp/tmp4zsfdkjz/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp4zsfdkjz/rules/plotting.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule compile_bpht_eval (line 3, /tmp/tmp4zsfdkjz/rules/analysis.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule eval_fill_rate (line 34, /tmp/tmp4zsfdkjz/rules/analysis.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule eval_fill_time_genome (line 57, /tmp/tmp4zsfdkjz/rules/analysis.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule prepare_bpht_access_time (line 80, /tmp/tmp4zsfdkjz/rules/analysis.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule evaluate_bpht_access_time (line 104, /tmp/tmp4zsfdkjz/rules/analysis.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule compare_access_times_numa0 (line 128, /tmp/tmp4zsfdkjz/rules/analysis.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule compare_access_times_numa1 (line 151, /tmp/tmp4zsfdkjz/rules/analysis.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule new_compare_access_times_numa0 (line 174, /tmp/tmp4zsfdkjz/rules/analysis.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule new_compare_access_times_numa1 (line 197, /tmp/tmp4zsfdkjz/rules/analysis.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_random_fill_rate (line 3, /tmp/tmp4zsfdkjz/rules/plotting.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_all_genome_fill_times (line 35, /tmp/tmp4zsfdkjz/rules/plotting.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_access_time_comparison (line 72, /tmp/tmp4zsfdkjz/rules/plotting.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_new_access_time_comparison (line 115, /tmp/tmp4zsfdkjz/rules/plotting.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_mxanthus_genome (line 9, /tmp/tmp4zsfdkjz/rules/files.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_pfalciparum_genome (line 31, /tmp/tmp4zsfdkjz/rules/files.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_hops_genome (line 52, /tmp/tmp4zsfdkjz/rules/files.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_human_genome (line 74, /tmp/tmp4zsfdkjz/rules/files.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1609867598.0
  },
  {
    "data_format": 1,
    "description": "A benchmark of benchmark workflow",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "kokitsuyuzaki/workflow_benchmark",
    "linting": "Lints for snakefile /tmp/tmpco035syg/Snakefile:\n    * Absolute path \"/home/koki/Software/R-3.6.0/bin/Rscript\" in line 1:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/pca.csv\" in line 8:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/nmf.csv\" in line 9:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mds.csv\" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lda.csv\" in line 11:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/som.csv\" in line 12:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/isomap.csv\" in line 13:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lle.csv\" in line 14:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/dmap.csv\" in line 15:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/tsne.csv\" in line 16:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/umap.csv\" in line 17:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/tumap.csv\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fatlas2.csv\" in line 19:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/pca.csv\" in line 25:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/nmf.csv\" in line 35:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mds.csv\" in line 45:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lda.csv\" in line 56:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/som.csv\" in line 66:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/isomap.csv\" in line 76:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lle.csv\" in line 86:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/dmap.csv\" in line 96:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/tsne.csv\" in line 106:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/umap.csv\" in line 116:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/tumap.csv\" in line 126:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fatlas2.csv\" in line 136:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 8:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 10:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 12:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 14:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 16:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 25:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 35:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 45:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 56:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 66:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 76:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 86:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 96:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 106:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 116:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 126:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 136:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule pca (line 27, /tmp/tmpco035syg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Rscript from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule nmf (line 50, /tmp/tmpco035syg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Rscript from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule mds (line 73, /tmp/tmpco035syg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Rscript from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule lda (line 96, /tmp/tmpco035syg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Rscript from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule som (line 120, /tmp/tmpco035syg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Rscript from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule isomap (line 143, /tmp/tmpco035syg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Rscript from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule lle (line 166, /tmp/tmpco035syg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Rscript from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule dmap (line 189, /tmp/tmpco035syg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Rscript from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule tsne (line 212, /tmp/tmpco035syg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Rscript from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule umap (line 235, /tmp/tmpco035syg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Rscript from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule tumap (line 258, /tmp/tmpco035syg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Rscript from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule fatlas2 (line 281, /tmp/tmpco035syg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable Rscript from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1574841216.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "TatyanaLev/EE283HW4",
    "linting": "Lints for rule r (line 11, /tmp/tmpv3zodw8s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule py (line 30, /tmp/tmpv3zodw8s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean (line 51, /tmp/tmpv3zodw8s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1612316564.0
  },
  {
    "data_format": 1,
    "description": "Evaluation Workflow for Protein Complex Similarity based on Weisfeiler-Lehman labeling",
    "formatting": "[WARNING] In file \"/tmp/tmp_8q0ifgt/Snakefile\":  Keyword \"output\" at line 113 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp_8q0ifgt/Snakefile\":  Keyword \"params\" at line 203 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp_8q0ifgt/Snakefile\":  Keyword \"params\" at line 219 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "BiancaStoecker/complex-similarity-evaluation",
    "linting": "Lints for snakefile /tmp/tmp_8q0ifgt/Snakefile:\n    * Absolute path \"/usr/bin/time -v numactl --physcpubind={params.cpu_list} --membind=1 -- java -jar tools/rangequery/rangequery-29dfc07.jar --queries {input} --dataset simulated_complexes/true_constraints/ --resultfolder $out_dir --thresh {wildcards.thresh} --falsenegativerate {wildcards.false_negative_rate} {params.minhash} \u0026\u003e $out_dir/log.txt ;\" in line 209:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/usr/bin/time -v numactl --physcpubind={params.cpu_list} --membind=1 -- tools/ged_rangequery/ged_rangequery ../../simulated_complexes/true_constraints.gml ../../{input} {wildcards.thresh} ../../{output} \u0026\u003e $out_dir/log.txt\" in line 226:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule compute_threshold_graph (line 34, /tmp/tmp_8q0ifgt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule write_unique_complexes (line 71, /tmp/tmp_8q0ifgt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule generate_candidate_pairs (line 102, /tmp/tmp_8q0ifgt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule calculate_edit_similarities (line 126, /tmp/tmp_8q0ifgt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule calculate_wl_values (line 155, /tmp/tmp_8q0ifgt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule compare_distances (line 184, /tmp/tmp_8q0ifgt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule subsample_complexes (line 218, /tmp/tmp_8q0ifgt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule benchmark_wl_2iter (line 247, /tmp/tmp_8q0ifgt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule benchmark_wl_3iter (line 276, /tmp/tmp_8q0ifgt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule collect_benchmarks (line 345, /tmp/tmp_8q0ifgt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule database_search_wl (line 371, /tmp/tmp_8q0ifgt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule database_search_ges (line 407, /tmp/tmp_8q0ifgt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule extract_times (line 438, /tmp/tmp_8q0ifgt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1611763432.0
  },
  {
    "data_format": 1,
    "description": "Workflow for generating reference phylogenies of AMR sequences in CARD",
    "formatting": "[WARNING] In file \"/tmp/tmp49kvqp9u/workflow/Snakefile\":  Keyword \"input\" at line 331 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "fmaguire/card-phylo",
    "linting": "Lints for snakefile /tmp/tmp49kvqp9u/workflow/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule extract_prevalence (line 105, /tmp/tmp49kvqp9u/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule tree (line 230, /tmp/tmp49kvqp9u/workflow/Snakefile):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule cluster_by_mmseq_0 (line 268, /tmp/tmp49kvqp9u/workflow/Snakefile):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule cluster_by_mmseq_70 (line 308, /tmp/tmp49kvqp9u/workflow/Snakefile):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule cluster_by_mmseq_80 (line 347, /tmp/tmp49kvqp9u/workflow/Snakefile):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule cluster_by_mmseq_90 (line 387, /tmp/tmp49kvqp9u/workflow/Snakefile):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule cluster_by_mmseq_95 (line 427, /tmp/tmp49kvqp9u/workflow/Snakefile):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule mmseqs (line 626, /tmp/tmp49kvqp9u/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule organise_by_family (line 652, /tmp/tmp49kvqp9u/workflow/Snakefile):\n    * Param prev_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param out_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule family (line 700, /tmp/tmp49kvqp9u/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1596120817.0
  },
  {
    "data_format": 1,
    "description": "Collection of scripts for conveniently downloading data from the archs4 resource",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jhawe/archs4_loader",
    "linting": "Lints for snakefile /tmp/tmp_bknmia8/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 29:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 30:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 31:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 32:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 60:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 61:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 62:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 82:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 83:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 84:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 86:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 88:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 101:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 116:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 117:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 118:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 119:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule init_data (line 14, /tmp/tmp_bknmia8/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule explore_data (line 130, /tmp/tmp_bknmia8/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_gtex_tissue_summaries (line 168, /tmp/tmp_bknmia8/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule explore_gtex (line 187, /tmp/tmp_bknmia8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1549681231.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "pp4rs/2019-snakemake-zurich",
    "linting": "Lints for rule tab01 (line 42, /tmp/tmp44gj8v_w/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable LOG_ALL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param filepath is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule make_figs (line 80, /tmp/tmp44gj8v_w/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable LOG_ALL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule solow_model (line 111, /tmp/tmp44gj8v_w/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule rename_vars (line 147, /tmp/tmp44gj8v_w/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable LOG_ALL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule make_variables (line 175, /tmp/tmp44gj8v_w/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable LOG_ALL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule clean (line 206, /tmp/tmp44gj8v_w/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean_windows (line 217, /tmp/tmp44gj8v_w/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1575955912.0
  },
  {
    "data_format": 1,
    "description": "Tutorial to getting started with the Snakemake workflow manager",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "susheelbhanu/snakemake-tutorial",
    "linting": "Lints for rule stats (line 212, /tmp/tmp1hba9tyc/Snakefile):\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1613661716.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpcxowca6i/rules/allelfeqplots.rules.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 3:7: script:\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmpcxowca6i/rules/allelfeqplots.rules.smk\":  1 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmpcxowca6i/rules/allelfeqplots.rules.smk\":  4 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "AnzaGhaffar/QTL-Snakemake-Workflow",
    "linting": "Lints for rule VCF_Homozygous_Filtering (line 14, /tmp/tmpcxowca6i/rules/filtering.rules.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule QTL_VCF_to_Table_Parser (line 14, /tmp/tmpcxowca6i/rules/vcfparser.rules.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule QTL_Plotting (line 21, /tmp/tmpcxowca6i/rules/qtlplots.rules.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule Allel_Frequency_Tsv_Generator (line 21, /tmp/tmpcxowca6i/rules/allelfeqplots.rules.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule Allel_Plots (line 50, /tmp/tmpcxowca6i/rules/allelfeqplots.rules.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1593177001.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpc7r3au1y/rules/transfer.smk\":  \u0027InvalidParameterSyntax: L8:Invalid key config[\"tranfer\"][\"port\"]\n username\u0027\n[ERROR] In file \"/tmp/tmpc7r3au1y/rules/pcrmonitor.smk\":  \u0027EmptyContextError: L1: rule check has no keywords attached to it.\u0027\n[ERROR] In file \"/tmp/tmpc7r3au1y/rules/common.smk\":  \u0027IndentationError: unindent does not match any outer indentation level (\u003ctokenize\u003e, line 42)\u0027\n[INFO] In file \"/tmp/tmpc7r3au1y/rules/common.smk\":  3 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmpc7r3au1y/rules/common.smk\":  9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "mwhitesi/apl_assignment",
    "linting": "IndentationError in line 42 of \u003ctokenize\u003e:\nunindent does not match any outer indentation level (\u003ctokenize\u003e, line 42)\n  File \"/tmp/tmpc7r3au1y/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/tokenize.py\", line 512, in _tokenize\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1599630850.0
  },
  {
    "data_format": 1,
    "description": "Snakemake Pipeline for RNASeq Workflow ",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "alipe2018/Snakemake-RNAseq-Workflow",
    "linting": "/tmp/tmpzodgaj4w/Snakefile:9: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.\n  SAMPLES = sorted(FILES.keys())\nLints for snakefile /tmp/tmpzodgaj4w/Snakefile:\n    * Path composition with \u0027+\u0027 in line 23:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 24:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 25:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 26:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 27:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 28:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 29:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 30:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 31:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 32:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 33:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 34:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 35:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 43:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 44:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 53:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 54:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 56:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 57:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 58:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 59:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 61:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 77:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 78:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 80:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 82:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 84:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 95:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 97:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 108:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 110:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 112:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 114:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 126:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 128:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 137:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 139:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 151:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 152:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 154:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 156:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 158:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 169:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 171:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 182:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 184:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 185:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 12:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule ReName (line 46, /tmp/tmpzodgaj4w/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule hisat2Align (line 104, /tmp/tmpzodgaj4w/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable HISAT2_INDEX_PREFIX from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule sortBam (line 141, /tmp/tmpzodgaj4w/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule stringtieMergeList (line 202, /tmp/tmpzodgaj4w/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule stringtieMerge (line 220, /tmp/tmpzodgaj4w/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule produce_sample_express_list (line 278, /tmp/tmpzodgaj4w/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule prepDE (line 298, /tmp/tmpzodgaj4w/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1544405955.0
  },
  {
    "data_format": 1,
    "description": "project for pp4rs 2020",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "bellni/2020-pp4rs-bellert-project",
    "linting": "Lints for rule paper (line 17, /tmp/tmpz4cvw2w3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_table (line 41, /tmp/tmpz4cvw2w3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param directory is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule ols (line 71, /tmp/tmpz4cvw2w3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule figs (line 109, /tmp/tmpz4cvw2w3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule prepare_data (line 135, /tmp/tmpz4cvw2w3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean (line 162, /tmp/tmpz4cvw2w3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filegraph (line 177, /tmp/tmpz4cvw2w3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule rulegraph (line 196, /tmp/tmpz4cvw2w3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule find_packages (line 218, /tmp/tmpz4cvw2w3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule install_packages (line 234, /tmp/tmpz4cvw2w3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1584046003.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "amberr098/snakemakeOWE11",
    "linting": "Lints for rule entrezID (line 13, /tmp/tmpc6grijqp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule lpID (line 34, /tmp/tmpc6grijqp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule function (line 54, /tmp/tmpc6grijqp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule sequentie (line 75, /tmp/tmpc6grijqp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule names (line 94, /tmp/tmpc6grijqp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule pmids (line 114, /tmp/tmpc6grijqp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule sort (line 140, /tmp/tmpc6grijqp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule comb (line 160, /tmp/tmpc6grijqp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule kegginf (line 180, /tmp/tmpc6grijqp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule pathway (line 199, /tmp/tmpc6grijqp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ortho (line 218, /tmp/tmpc6grijqp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule workflow (line 238, /tmp/tmpc6grijqp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule report (line 254, /tmp/tmpc6grijqp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule clean (line 276, /tmp/tmpc6grijqp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1528467751.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for detecting viral variants.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "RachelRodgers/VirusVariantViewR",
    "linting": "Lints for snakefile /tmp/tmp31fv83ww/workflow/Snakefile:\n    * Absolute path \"/renamed/\", PATTERN_R1 + \" in line 82:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/renamed/\", PATTERN_R2 + \" in line 83:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 82:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 83:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule trim_adapters (line 87, /tmp/tmp31fv83ww/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable XMX from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule quality_trimming (line 125, /tmp/tmp31fv83ww/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable XMX from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule deduplicate (line 158, /tmp/tmp31fv83ww/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable XMX from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule deinterleave (line 190, /tmp/tmp31fv83ww/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable XMX from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule align_to_ref_genome (line 216, /tmp/tmp31fv83ww/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_view (line 250, /tmp/tmp31fv83ww/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_sort (line 278, /tmp/tmp31fv83ww/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_index (line 306, /tmp/tmp31fv83ww/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule genomecov (line 331, /tmp/tmp31fv83ww/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule add_indel_quality (line 356, /tmp/tmp31fv83ww/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule call_variants (line 385, /tmp/tmp31fv83ww/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule calculate_coverage_depth (line 414, /tmp/tmp31fv83ww/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule calculate_alignment_data (line 439, /tmp/tmp31fv83ww/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule concat_alignment_data (line 466, /tmp/tmp31fv83ww/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule annotate_mutations (line 489, /tmp/tmp31fv83ww/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable R from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1601653425.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "max-hoffman/snakemake-ex",
    "linting": "Lints for rule hello (line 15, /tmp/tmp_1qkyb4b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule hello2 (line 30, /tmp/tmp_1qkyb4b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1560542869.0
  },
  {
    "data_format": 1,
    "description": "Process raw Quant-Seq data and run DE-Seq",
    "formatting": "[ERROR] In file \"/tmp/tmpnebomipu/rules/build_indices.smk\":  \u0027AttributeError: \u0027NoneType\u0027 object has no attribute \u0027group\u0027\u0027\n[ERROR] In file \"/tmp/tmpnebomipu/rules/prepare_seqs.smk\":  \u0027NoParametersError: L8: In input definition.\u0027\n[INFO] In file \"/tmp/tmpnebomipu/rules/prepare_seqs.smk\":  2 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmpnebomipu/rules/prepare_seqs.smk\":  6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "marykthompson/ribopop_rnaseq",
    "linting": "WorkflowError in line 12 of /tmp/tmpnebomipu/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmpnebomipu/Snakefile\", line 12, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1597225570.0
  },
  {
    "data_format": 1,
    "description": "Having fun plotting my activity data from Strava!",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "kelly-sovacool/strava",
    "linting": "Lints for rule download (line 28, /tmp/tmp5wkrr_ey/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule process (line 47, /tmp/tmp5wkrr_ey/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_activities (line 68, /tmp/tmp5wkrr_ey/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_summary (line 97, /tmp/tmp5wkrr_ey/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule render_report (line 118, /tmp/tmp5wkrr_ey/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cat_figures_readme (line 140, /tmp/tmp5wkrr_ey/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614621405.0
  },
  {
    "data_format": 1,
    "description": "Workflow to generate gene expression box plot for tissues",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "cu-swe4s-fall-2019/workflow-qyang13",
    "linting": "Lints for rule get_tissue_samples (line 14, /tmp/tmpiwg9oui2/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable TISSUES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule get_gene_counts (line 37, /tmp/tmpiwg9oui2/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable GENES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule box (line 60, /tmp/tmpiwg9oui2/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable GENES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable TISSUES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1574270982.0
  },
  {
    "data_format": 1,
    "description": "SARS-CoV-2 sequencing workflow",
    "formatting": "[WARNING] In file \"/tmp/tmp05n0hij_/workflow/Snakefile\":  Keyword \"params\" at line 434 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "avilab/sarscov2-variation",
    "linting": "FileNotFoundError in line 21 of /tmp/tmp05n0hij_/workflow/Snakefile:\n[Errno 2] No such file or directory: \u0027config/samples.csv\u0027\n  File \"/tmp/tmp05n0hij_/workflow/Snakefile\", line 21, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 610, in read_csv\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 2293, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "snakemake-workflow",
      "snakemake",
      "workflow",
      "sars-cov-2",
      "covid-19",
      "covid-19-estonia"
    ],
    "updated_at": 1614161045.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow to run some basic quality control programs ",
    "formatting": "[INFO] 2 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "pawel125/quality_control_CellRanger",
    "linting": "Lints for rule multiqc (line 14, /tmp/tmp26pf4ojm/workflow/rules/bam_quality_control.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mklink (line 35, /tmp/tmp26pf4ojm/workflow/rules/bam_quality_control.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fastqc (line 64, /tmp/tmp26pf4ojm/workflow/rules/bam_quality_control.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule read_GC (line 94, /tmp/tmp26pf4ojm/workflow/rules/bam_quality_control.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param out_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule bam_stat (line 120, /tmp/tmp26pf4ojm/workflow/rules/bam_quality_control.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule tin (line 141, /tmp/tmp26pf4ojm/workflow/rules/bam_quality_control.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule emptydrops (line 29, /tmp/tmp26pf4ojm/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param input is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1608713691.0
  },
  {
    "data_format": 1,
    "description": "Simple Snakemake example",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ctmrbio/sm3",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 4,
    "topics": [],
    "updated_at": 1613383888.0
  },
  {
    "data_format": 1,
    "description": "The ENCODE-DCC demo workflow in Snakemake (under development)",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "vsoch/encode-demo-workflow",
    "linting": "Lints for snakefile /tmp/tmpvtbzs2mf/Snakefile:\n    * Deprecated singularity directive used for container definition in line 11.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot (line 3, /tmp/tmpvtbzs2mf/rules/plot.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "encode-dcc",
      "snakemake",
      "snakemake-workflows"
    ],
    "updated_at": 1567344079.0
  },
  {
    "data_format": 1,
    "description": "This is a pipeline for the beginning analysis of paired end ATAC seq data",
    "formatting": "[WARNING] In file \"/tmp/tmpt9_uddf0/rules/filter_shift_downsample.smk\":  Keyword \"shell\" at line 138 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmpt9_uddf0/rules/quality_and_align.smk\":  \u0027EmptyContextError: L47: rule trimming has no keywords attached to it.\u0027\n[WARNING] In file \"/tmp/tmpt9_uddf0/rules/peak_catalog.smk\":  Keyword \"input\" at line 50 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpt9_uddf0/Snakefile\":  Keyword \"input\" at line 101 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "maxsonBraunLab/atac_seq---old",
    "linting": "Lints for snakefile /tmp/tmpt9_uddf0/Snakefile:\n    * Absolute path \"/home/groups/MaxsonLab/indices/GRch38/hg38.blacklist.v2.bed\" in line 19:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/groups/MaxsonLab/callahro/atac_seq/fastqscreen.conf\" in line 22:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/groups/MaxsonLab/callahro/atac_seq/MOLM_ATAC_metadata.txt\" in line 24:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/list/to/file/\" + name + \" in line 72:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads.bam\" in line 79:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_read_depths.csv\" in line 80:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_macsout/{merged_sample}_macs_peaks.broadPeak\" in line 81:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_homerout/homerMotifs.all.motifs\" in line 82:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/raw_bigwigs/{merged_sample}_raw.bw\" in line 83:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/non_downsampled_bigwigs/{merged_sample}_non_downsampled.bw\" in line 84:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastqc/{sample}_fastqc_done.txt\" in line 85:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastqscreen/{sample}_fastqscreen_done.txt\" in line 86:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_information_done.txt\" in line 87:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_flagstat.txt\" in line 88:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_tracks_5window_smooth.bw\" in line 89:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_tracks_5window_rough.bw\" in line 90:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_count_peaks_done.txt\" in line 92:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/reads_catalog_intervals_nodownsample.bed_{sample_condition}.bed\" in line 93:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{sample_condition}_merged.bam\" in line 94:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/all_read_catalog_counts.bed\" in line 95:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/reads_catalog_intervals_nodownsample.bed\" in line 96:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/intersected_bedfile_nodownsample.bed\" in line 97:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/all_read_catalog_nodownsample_counts.bed\" in line 98:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/intersected_bedfile_nodownsample_peakinfo.txt\" in line 99:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/intersected_catalog.bed\" in line 100:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/all_read_catalog_nodownsample_counts_ondownsamplepeaks.bed\" in line 101:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/multiqc/done.txt\" in line 103:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 30:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 79:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 80:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 81:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 82:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 83:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 84:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 85:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 86:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 87:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 88:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 89:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 90:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 92:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 93:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 94:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 95:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 96:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 97:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 98:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 99:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 100:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 101:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 103:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 31:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpt9_uddf0/rules/filter_shift_downsample.smk:\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads_downSample.bam\" in line 6:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_tracks_5window_smooth.bw\" in line 8:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_tracks_5window_rough.bw\" in line 9:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads.bam\" in line 32:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/downsample_list.txt\" in line 33:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads_downSample.bam\" in line 35:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads_downSample.bam.bai\" in line 36:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads_sorted.bam.bai\" in line 37:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads_sorted.bam\" in line 38:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads.bam\" in line 56:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_read_depths.csv\" in line 57:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/downsample_list.txt\" in line 59:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/samples_downsample_information.txt\" in line 60:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality.bam\" in line 88:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality.bam.bai\" in line 89:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads.bam\" in line 91:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality.bam\" in line 107:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_merged.bam\" in line 108:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality.bam.bai\" in line 110:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_merged.bam.bai\" in line 111:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup.bam\" in line 127:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality.bam\" in line 130:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_read_depths.csv\" in line 132:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM.bam\" in line 150:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup.bam\" in line 153:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_read_depths.csv\" in line 155:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_sorted.bam\" in line 172:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM.bam\" in line 175:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_read_depths.csv\" in line 176:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_readswmito.txt\" in line 182:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}\" in line 198:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}\" in line 199:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_merged.bam\" in line 201:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 8:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 9:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 32:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 33:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 35:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 36:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 37:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 38:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 56:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 57:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 59:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 60:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 88:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 89:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 91:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 107:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 108:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 110:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 111:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 127:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 130:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 132:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 150:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 153:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 155:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 172:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 175:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 176:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 182:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 198:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 199:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 201:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 198:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpt9_uddf0/rules/peak_catalog_no_downsample.smk:\n    * Absolute path \"/fully_filtered/{merged_sample}_read_catalog_nodownsample_counts.bed\" in line 4:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/all_read_catalog_nodownsample_counts.bed\" in line 6:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/reads_catalog_intervals_nodownsample.bed\" in line 23:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads.bam\" in line 24:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_read_catalog_nodownsample_counts.bed\" in line 26:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads_sorted.bam\" in line 27:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_macsout_nodownsample/{merged_sample}_macs_peaks.broadPeak\" in line 49:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/reads_catalog_intervals_nodownsample.bed\" in line 51:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/reads_catalog_intervals_nodownsample.bed_{sample_condition}.bed\" in line 52:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/all_broad_peaks_nodownsample.bed\" in line 54:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_macsout_nodownsample/{merged_sample}_macs_peaks.broadPeak\" in line 61:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads.bam\" in line 76:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_macsout_nodownsample/{merged_sample}_macs_peaks.broadPeak\" in line 78:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_macsout_nodownsample\" in line 85:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 4:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 23:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 24:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 26:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 27:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 49:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 51:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 52:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 54:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 61:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 76:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 78:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 85:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpt9_uddf0/rules/peak_catalog.smk:\n    * Absolute path \"/fully_filtered/{merged_sample}_read_catalog_counts.bed\" in line 3:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/all_read_catalog_counts.bed\" in line 5:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/reads_catalog_intervals.bed\" in line 19:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads_downSample.bam\" in line 20:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_read_catalog_counts.bed\" in line 22:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/reads_catalog_intervals.bed\" in line 36:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_peaks_information.txt\" in line 38:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_macsout/{merged_sample}_macs_peaks.broadPeak\" in line 51:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads_downSample.bam\" in line 52:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/reads_catalog_intervals.bed\" in line 54:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/reads_catalog_intervals.bed_{sample_condition}.bed\" in line 55:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/all_broad_peaks.bed\" in line 58:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/reads_catalog_intervals.bed\" in line 59:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_macsout/{merged_sample}_macs_peaks.broadPeak\" in line 66:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads_downSample.bam\" in line 81:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_macsout/{merged_sample}_macs_peaks.broadPeak\" in line 83:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_macsout\" in line 90:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 19:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 20:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 22:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 36:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 38:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 51:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 52:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 54:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 55:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 58:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 59:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 66:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 81:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 83:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 90:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpt9_uddf0/rules/non_downsampled_bigwig.smk:\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads.bam\" in line 3:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_non_downsampled.bedGraph\" in line 5:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_non_downsampled.bedGraph\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_non_downsampled_sorted.bedGraph\" in line 20:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_non_downsampled_sorted.bedGraph\" in line 33:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/non_downsampled_bigwigs/{merged_sample}_non_downsampled.bw\" in line 35:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/groups/MaxsonLab/indices/mm10/mm10.chrom.sizes\" in line 39:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 20:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 33:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 35:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpt9_uddf0/rules/final_qc_metrics.smk:\n    * Absolute path \"/results/sample_quality_information.tsv\" in line 4:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/correllation_plot.png\" in line 5:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/intersected_catalog.bed\" in line 6:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/reads_catalog_intervals.bed\" in line 7:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/all_read_catalog_nodownsample_counts_ondownsamplepeaks.bed\" in line 8:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results\" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/sample_quality_information.tsv\" in line 12:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/correlation_plot.png\" in line 13:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/intersected_catalog.bed\" in line 14:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/reads_catalog_intervals.bed\" in line 15:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/all_read_catalog_nodownsample_counts_ondownsamplepeaks.bed\" in line 16:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_read_depths.csv\" in line 30:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_count_peaks_done.txt\" in line 31:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/*.csv\" in line 33:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/all_sample_information_nospaces.csv\" in line 34:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/sample_quality_information.tsv\" in line 36:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/^\\s*$/d\" in line 39:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_tracks_5window_rough.bw\" in line 46:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_tracks_5window_rough.bw\" in line 48:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/sample_scores.npz\" in line 51:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/correllation_plot.png\" in line 52:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/reads_catalog_intervals.bed_{sample_condition}_formatted.bed\" in line 69:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/intersected_catalog.bed\" in line 71:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/reads_catalog_intervals.bed_{sample_condition}_formatted.bed\" in line 73:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/reads_catalog_intervals.bed_{sample_condition}.bed\" in line 87:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/reads_catalog_intervals.bed\" in line 88:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/reads_catalog_intervals.bed_{sample_condition}_formatted.bed\" in line 90:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_information_done.txt\" in line 102:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_macsout_nodownsample/{merged_sample}_macs_peaks.broadPeak\" in line 103:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_count_peaks_done.txt\" in line 105:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_read_depths.csv\" in line 107:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_macsout_nodownsample/{merged_sample}_macs_peaks.broadPeak\" in line 119:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}.bam\" in line 120:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_read_catalog_nodownsample_counts.bed\" in line 121:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_read_catalog_nodownsample_counts.bed\" in line 122:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{merged_sample}_rmChrM_dedup_quality_shiftedReads.bam\" in line 123:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_information_done.txt\" in line 125:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_flagstat.txt\" in line 126:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_read_depths.csv\" in line 128:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{merged_sample}_flagstat.txt\" in line 129:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 4:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 8:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 10:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 13:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 14:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 15:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 16:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 30:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 31:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 33:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 34:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 36:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 46:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 48:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 51:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 52:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 69:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 71:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 73:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 87:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 88:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 90:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 102:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 103:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 105:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 107:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 119:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 120:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 121:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 122:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 123:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 125:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 126:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 128:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 129:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpt9_uddf0/rules/merged_bigwig.smk:\n    * Absolute path \"/bamfiles/\" + name + \" in line 7:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/\" + name + \" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{sample_condition}_merged.bam\" in line 17:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fully_filtered/{sample_condition}_merged.bw\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 10:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 17:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpt9_uddf0/rules/quality_and_align.smk:\n    * Absolute path \"/bamfiles/{sample}.bam\" in line 3:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{sample}_sorted.bam\" in line 5:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles\" in line 8:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/samfiles/{sample}.sam\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bamfiles/{sample}.bam\" in line 20:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample}_1_fastqc_tpaired.fastq\" in line 31:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample}_2_fastqc_tpaired.fastq\" in line 32:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/samfiles/{sample}.sam\" in line 35:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample}_1_fastqc_tpaired.fastq\" in line 53:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample}_2_fastqc_tpaired.fastq\" in line 54:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample}_1_fastqc_tunpaired.fastq\" in line 55:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/trimmed/{sample}_2_fastqc_tunpaired.fastq\" in line 56:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastqc/{sample}_fastqc.done\" in line 70:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastqscreen/{sample}\" in line 71:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/multiqc/done.txt\" in line 73:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastqc/{sample}_fastqc_done.txt\" in line 82:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastqc/{sample}_2_fastqc.zip\" in line 83:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastqc/{sample}\" in line 85:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastqscreen/{sample}/\" + prefix + \" in line 108:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastqscreen/{sample}/\" + prefix + \" in line 109:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastqscreen/{sample}\" in line 110:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fastqscreen/{sample}\" in line 114:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 8:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 20:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 31:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 32:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 35:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 50:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 54:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 55:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 56:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 70:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 71:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 73:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 79:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 83:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 85:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 105:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 108:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 109:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 114:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 51:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 80:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 106:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 108:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule makeBigwig (line 4, /tmp/tmpt9_uddf0/rules/filter_shift_downsample.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule downSample (line 50, /tmp/tmpt9_uddf0/rules/filter_shift_downsample.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule createDownsample (line 98, /tmp/tmpt9_uddf0/rules/filter_shift_downsample.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule shiftReads (line 139, /tmp/tmpt9_uddf0/rules/filter_shift_downsample.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule index (line 178, /tmp/tmpt9_uddf0/rules/filter_shift_downsample.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtoolsQuality (line 219, /tmp/tmpt9_uddf0/rules/filter_shift_downsample.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule dedup (line 264, /tmp/tmpt9_uddf0/rules/filter_shift_downsample.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mergeBam (line 358, /tmp/tmpt9_uddf0/rules/filter_shift_downsample.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule merge_catalog_counts_no_downsmpl (line 2, /tmp/tmpt9_uddf0/rules/peak_catalog_no_downsample.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule peak_catalog_counts_no_downsmpl (line 28, /tmp/tmpt9_uddf0/rules/peak_catalog_no_downsample.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule peak_catalog_no_downsmpl (line 79, /tmp/tmpt9_uddf0/rules/peak_catalog_no_downsample.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule MACS_no_downsmpl (line 125, /tmp/tmpt9_uddf0/rules/peak_catalog_no_downsample.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param directory is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule merge_catalog_counts (line 1, /tmp/tmpt9_uddf0/rules/peak_catalog.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule peak_catalog_counts (line 24, /tmp/tmpt9_uddf0/rules/peak_catalog.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule annotate_peak_names (line 60, /tmp/tmpt9_uddf0/rules/peak_catalog.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule peak_catalog (line 92, /tmp/tmpt9_uddf0/rules/peak_catalog.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param reads_catalog_bed is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule MACS (line 141, /tmp/tmpt9_uddf0/rules/peak_catalog.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param directory is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule non_downsampled_bedGraph (line 1, /tmp/tmpt9_uddf0/rules/non_downsampled_bigwig.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule non_downsampled_sort (line 34, /tmp/tmpt9_uddf0/rules/non_downsampled_bigwig.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule non_downsampled_bedGraphToBigWig (line 67, /tmp/tmpt9_uddf0/rules/non_downsampled_bigwig.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plotCorrelation (line 44, /tmp/tmpt9_uddf0/rules/final_qc_metrics.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule multi_intersect (line 90, /tmp/tmpt9_uddf0/rules/final_qc_metrics.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_union_interval_from_sample_interval (line 125, /tmp/tmpt9_uddf0/rules/final_qc_metrics.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule count_macs_peaks (line 155, /tmp/tmpt9_uddf0/rules/final_qc_metrics.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_info (line 188, /tmp/tmpt9_uddf0/rules/final_qc_metrics.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param flagstat is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule makeMergedBigwig (line 13, /tmp/tmpt9_uddf0/rules/merged_bigwig.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sortbam (line 1, /tmp/tmpt9_uddf0/rules/quality_and_align.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdirectory is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule sam2bam (line 35, /tmp/tmpt9_uddf0/rules/quality_and_align.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule align (line 65, /tmp/tmpt9_uddf0/rules/quality_and_align.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule trimming (line 102, /tmp/tmpt9_uddf0/rules/quality_and_align.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 151, /tmp/tmpt9_uddf0/rules/quality_and_align.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule fastqscreen (line 199, /tmp/tmpt9_uddf0/rules/quality_and_align.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param out_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1613080707.0
  },
  {
    "data_format": 1,
    "description": "Basic Snakemake wf for wordcloud generation.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "NajlaBH/snaketmpl",
    "linting": "Lints for rule get_text (line 5, /tmp/tmpi0rzlnzx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_plot (line 32, /tmp/tmpi0rzlnzx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_shape (line 59, /tmp/tmpi0rzlnzx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1613065388.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dirkrepsilber/metagenomics-workflow",
    "linting": "WorkflowError in line 58 of /tmp/tmppfprwtu3/Snakefile:\nFailed to open /glob/brynjar/github/snakemake-workflows/bio/ngs/rules/quality_control/fastqc.rules.\n  File \"/tmp/tmppfprwtu3/Snakefile\", line 58, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1481113840.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "skyriakidis/Snakemake_haps",
    "linting": "WorkflowError in line 6 of /tmp/tmph0xssgud/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmph0xssgud/Snakefile\", line 6, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1544099658.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "AbernathyClose/AbernathyClose_IbdCdi_mBio_2020",
    "linting": "AttributeError in line 129 of /tmp/tmp3gib5x8a/Snakefile:\ninvalid name for input, output, wildcard, params or log: count is reserved for internal use\n  File \"/tmp/tmp3gib5x8a/Snakefile\", line 129, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1596054079.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpgapk1ru_/workflow/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 1:0: elif config[\u0027input_type\u0027] == \u0027assemblies\u0027:\n```\nwhile formatting code with black.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "maxlcummins/pipelord2_0",
    "linting": "Cloning into \u0027resources/tools/pointfinder\u0027...\nCloning into \u0027resources/tools/pointfinder/pointfinder_db\u0027...\nCloning into \u0027resources/tools/pmlst\u0027...\nCloning into \u0027resources/tools/pmlst/pmlst_db\u0027...\nLints for snakefile /tmp/tmpgapk1ru_/workflow/Snakefile:\n    * Absolute path \"/{sample}.R1.fastq.gz\" in line 20:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}.R1.fastq.gz\" in line 23:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}.fasta\" in line 25:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/shovill/assemblies/{sample}.fasta\" in line 48:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/shovill/assembly_stats/{sample}_assembly_stats.txt\" in line 49:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/abricate/{gene_db}/{sample}.tab\" in line 50:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/pMLST/{scheme}/{sample}.out/results_named.txt\" in line 51:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/pointfinder/{sample}/{sample}_blastn_results_named.tsv\" in line 52:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/kraken2/{sample}_clean.report\" in line 53:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/fastp/{sample}.R1.fastq.gz\" in line 54:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/mlst/{sample}_mlst.txt\" in line 55:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summaries/fastp_summary.json\" in line 58:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summaries/assembly_stats.txt\" in line 59:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summaries/{prefix}_simple_summary_N\" in line 60:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summaries/mlst.txt\" in line 61:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summaries/Pointfinder.txt\" in line 62:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/abricate/{gene_db}/{sample}.tab\" in line 63:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summaries/abricate_hits.txt\" in line 64:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summaries/pMLST.txt\" in line 65:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summaries/kraken2_full_summary.txt\" in line 66:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpgapk1ru_/workflow/rules/read_cleaning.smk:\n    * Absolute path \"/{sample}.R1.fastq.gz\" in line 14:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}.R2.fastq.gz\" in line 15:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/fastp/{sample}.R1.fastq.gz\" in line 17:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/fastp/{sample}.R2.fastq.gz\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/fastp/{sample}.fastp.json\" in line 19:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/fastp/{sample}.fastp.html\" in line 20:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/fastp/run/{sample}.log\" in line 22:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmpgapk1ru_/workflow/rules/genome_assembly.smk:\n    * Absolute path \"/\"+config[\u0027prefix\u0027]+\" in line 6:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}.fasta\" in line 14:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/shovill/assemblies/{sample}.fasta\" in line 16:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/shovill/assemblies/{sample}.fasta\" in line 22:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/shovill/assembly_stats/{sample}_assembly_stats.txt\" in line 24:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/fastp/{sample}.R1.fastq.gz\" in line 34:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/fastp/{sample}.R2.fastq.gz\" in line 35:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/shovill/shovill_out/{sample}.out\" in line 37:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/shovill/assemblies/{sample}.fasta\" in line 38:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/shovill/run/{sample}_out.log\" in line 40:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/shovill/run/{sample}_err.log\" in line 41:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/shovill/assemblies/{sample}.fasta\" in line 53:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/shovill/assembly_stats/{sample}_assembly_stats.txt\" in line 55:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpgapk1ru_/workflow/rules/summarise.smk:\n    * Absolute path \"/{prefix}/summaries/mlst.txt\" in line 3:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summaries/Pointfinder.txt\" in line 4:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summaries/abricate_hits.txt\" in line 5:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summaries/pMLST.txt\" in line 6:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summaries/kraken2_full_summary.txt\" in line 7:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summaries/assembly_stats.txt\" in line 8:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summaries/{prefix}_simple_summary_N\" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summarise/summarise_out.log\" in line 14:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/summarise/summarise_err.log\" in line 15:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpgapk1ru_/workflow/rules/species_id.smk:\n    * Absolute path \"/{prefix}/shovill/assemblies/{sample}.fasta\" in line 12:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/kraken2/{sample}.out\" in line 14:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/kraken2/{sample}.report\" in line 15:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/kraken2/run/{sample}_err.log\" in line 17:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/kraken2/{sample}.report\" in line 27:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/kraken2/{sample}_clean.report\" in line 29:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmpgapk1ru_/workflow/rules/genotype_abricate.smk:\n    * Absolute path \"/{prefix}/shovill/assemblies/{sample}.fasta\" in line 16:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/abricate/{gene_db}/{sample}.tab\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/abricate/run/{gene_db}/{sample}.log\" in line 20:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmpgapk1ru_/workflow/rules/point_mutations.smk:\n    * Absolute path \"/{prefix}/shovill/assemblies/{sample}.fasta\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/pointfinder/{sample}/{sample}_blastn_results.tsv\" in line 20:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/pointfinder/pointfinder_run/{sample}.log\" in line 24:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/pointfinder/{sample}\" in line 26:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/pointfinder/{sample}/{sample}_blastn_results.tsv\" in line 35:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/pointfinder/{sample}/{sample}_blastn_results_named.tsv\" in line 37:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmpgapk1ru_/workflow/rules/strain_mlst.smk:\n    * Absolute path \"/{prefix}/shovill/assemblies/{sample}.fasta\" in line 15:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/mlst/{sample}_mlst.txt\" in line 17:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmpgapk1ru_/workflow/rules/plasmid_mlst.smk:\n    * Absolute path \"/{prefix}/shovill/assemblies/{sample}.fasta\" in line 20:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/pMLST/{scheme}/{sample}.out/results.txt\" in line 22:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/pMLST/{scheme}/{sample}.out\" in line 26:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/pMLST/{scheme}/temp_{sample}\" in line 27:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/pMLST/{scheme}/{sample}.out/results.txt\" in line 42:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{prefix}/pMLST/{scheme}/{sample}.out/results_named.txt\" in line 44:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule run_assembly_stats (line 95, /tmp/tmpgapk1ru_/workflow/rules/genome_assembly.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule name_kraken2_inline (line 42, /tmp/tmpgapk1ru_/workflow/rules/species_id.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule pointfinder_run (line 16, /tmp/tmpgapk1ru_/workflow/rules/point_mutations.smk):\n    * Param output_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule name_append (line 52, /tmp/tmpgapk1ru_/workflow/rules/point_mutations.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mlst_run (line 13, /tmp/tmpgapk1ru_/workflow/rules/strain_mlst.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule pMLST_run (line 18, /tmp/tmpgapk1ru_/workflow/rules/plasmid_mlst.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param output_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule name_files_pMLST (line 58, /tmp/tmpgapk1ru_/workflow/rules/plasmid_mlst.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614230000.0
  },
  {
    "data_format": 1,
    "description": "Simple text analysis using Snakemake",
    "formatting": "[ERROR] In file \"/tmp/tmp0dyg62cp/Snakefile\":  \u0027SyntaxError: L22: Newline expected after keyword \u0027run\u0027\u0027\n[INFO] In file \"/tmp/tmp0dyg62cp/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "sipv/snakemake-text-analysis",
    "linting": "ModuleNotFoundError in line 1 of /tmp/tmp0dyg62cp/Snakefile:\nNo module named \u0027matplotlib\u0027\n  File \"/tmp/tmp0dyg62cp/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmp0dyg62cp/util/__init__.py\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmp0dyg62cp/util/plot.py\", line 2, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1572337568.0
  },
  {
    "data_format": 1,
    "description": "no more boiler plate in your execution scripts.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "RossLab/snakemake-cluster-template",
    "linting": "Lints for rule help (line 26, /tmp/tmp7hc49_93/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_data (line 37, /tmp/tmp7hc49_93/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_results (line 53, /tmp/tmp7hc49_93/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1596106536.0
  },
  {
    "data_format": 1,
    "description": "Integrative Pipeline for Splicing Analysis",
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Leoberium/pyIPSA",
    "linting": "ModuleNotFoundError in line 2 of /tmp/tmpntigl9py/workflow/Snakefile:\nNo module named \u0027pysam\u0027\n  File \"/tmp/tmpntigl9py/workflow/Snakefile\", line 2, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614342277.0
  },
  {
    "data_format": 1,
    "description": "A workflow for metagenomics analysis",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ORU-BIOINF/metagenomics-workflow",
    "linting": "WorkflowError in line 49 of /tmp/tmp_zyv79kg/Snakefile:\nFailed to open https://raw.githubusercontent.com/binnisb/snakemake-workflows/master/bio/ngs/rules/quality_control/fastqc.rules.\n  File \"/tmp/tmp_zyv79kg/Snakefile\", line 49, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1427278649.0
  },
  {
    "data_format": 1,
    "description": "Estimate pi using a snakemake workflow",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "PabRod/snakePi",
    "linting": "Lints for rule gather (line 8, /tmp/tmps1vi4n14/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule set_path (line 25, /tmp/tmps1vi4n14/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_pi (line 47, /tmp/tmps1vi4n14/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean (line 68, /tmp/tmps1vi4n14/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1608222544.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "rr-mrc-bsu/containerization-example",
    "linting": "Lints for snakefile /tmp/tmpt3q_j3tj/Snakefile:\n    * Deprecated singularity directive used for container definition in line 1.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_report (line 5, /tmp/tmpt3q_j3tj/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1551699396.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow: Toy example, compliant with HPC Sumner at JAX",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "TheJacksonLaboratory/toymake",
    "linting": "FileNotFoundError in line 25 of /tmp/tmpmw13t7dn/Snakefile:\n[Errno 2] No such file or directory: \u0027/home/runner/work/snakemake-workflow-catalog/snakemake-workflow-catalog/config.yaml\u0027\n  File \"/tmp/tmpmw13t7dn/Snakefile\", line 25, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [
      "snakemake",
      "workflow",
      "python3",
      "slurm",
      "slurm-job-scheduler",
      "hpc",
      "cluster-computing",
      "centos7"
    ],
    "updated_at": 1589224874.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 16 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "shukwong/dna-seq-varlociraptor-test",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1608310889.0
  },
  {
    "data_format": 1,
    "description": "Code to run the analysis of the Ultra Deep Sequencing",
    "formatting": "[WARNING] In file \"/tmp/tmp6dlgfis1/Snakefile\":  Keyword \"input\" at line 34 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp6dlgfis1/Snakefile\":  Keyword \"input\" at line 59 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "knights-lab/uds-analysis",
    "linting": "ValueError in line 28 of /tmp/tmp6dlgfis1/Snakefile:\nnot enough values to unpack (expected 2, got 0)\n  File \"/tmp/tmp6dlgfis1/Snakefile\", line 28, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1508439216.0
  },
  {
    "data_format": 1,
    "description": "Snakemake Workflow: Impute HLA and/or KIR alleles from SNPs",
    "formatting": "[ERROR] In file \"/tmp/tmpi834a765/Snakefile\":  \u0027SyntaxError: L39: Newline expected after keyword \u0027run\u0027\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "bjohnnyd/hla-kir-imputation",
    "linting": "Lints for snakefile /tmp/tmpi834a765/Snakefile:\n    * Deprecated singularity directive used for container definition in line 15.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpi834a765/rules/freq_encode_snps.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule print_defaults (line 65, /tmp/tmpi834a765/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule create_dag (line 71, /tmp/tmpi834a765/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_kirimp_panel (line 6, /tmp/tmpi834a765/rules/kirimp_panel.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_overchain (line 14, /tmp/tmpi834a765/rules/liftover.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule generate_ucsc_bed (line 30, /tmp/tmpi834a765/rules/liftover.smk):\n    * Param baseout is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule create_plink_lifted (line 91, /tmp/tmpi834a765/rules/liftover.smk):\n    * Param baseout is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule create_vcf (line 132, /tmp/tmpi834a765/rules/liftover.smk):\n    * Param baseout is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule shapeit4 (line 27, /tmp/tmpi834a765/rules/shapeit.smk):\n    * Param out is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1589639041.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ORU-BIOI/metagenomics-testproject",
    "linting": "WorkflowError in line 58 of /tmp/tmpdqol5t49/Snakefile:\nFailed to open /glob/brynjar/github/snakemake-workflows/bio/ngs/rules/quality_control/fastqc.rules.\n  File \"/tmp/tmpdqol5t49/Snakefile\", line 58, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1432992248.0
  },
  {
    "data_format": 1,
    "description": "Alignment based workflow for Illumina Short reads",
    "formatting": "[ERROR] In file \"/tmp/tmp4fy9hcym/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 2:0:     \"FC/without_dups_gene_level/counts.txt.summary\"\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmp4fy9hcym/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "tgstoecker/RAW-ABS",
    "linting": "Lints for rule STAR_index (line 22, /tmp/tmp4fy9hcym/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule create_rRNA_gtf (line 72, /tmp/tmp4fy9hcym/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule create_rRNA_fasta (line 92, /tmp/tmp4fy9hcym/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bbduk (line 316, /tmp/tmp4fy9hcym/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fastqc (line 347, /tmp/tmp4fy9hcym/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule trimmed_fastqc (line 414, /tmp/tmp4fy9hcym/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule STAR (line 442, /tmp/tmp4fy9hcym/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param name is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule index_sorted_bams_with_dups (line 527, /tmp/tmp4fy9hcym/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule remove_duplicates_samtools (line 579, /tmp/tmp4fy9hcym/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule index_sorted_bams_without_dups (line 619, /tmp/tmp4fy9hcym/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule featureCounts (line 656, /tmp/tmp4fy9hcym/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1596061036.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpxcbzd07u/Snakefile\":  \u0027IndentationError: unindent does not match any outer indentation level (\u003ctokenize\u003e, line 4)\u0027\n[INFO] In file \"/tmp/tmpxcbzd07u/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "PrincetonUniversity/gtex-gatk4",
    "linting": "FileNotFoundError in line 19 of /tmp/tmpxcbzd07u/Snakefile:\n[Errno 2] No such file or directory: \u0027/tigress/AKEY/akey_vol1/home/selinav/GTEx/SampInfo/sample_details.txt\u0027\n  File \"/tmp/tmpxcbzd07u/Snakefile\", line 19, in \u003cmodule\u003e\n  File \"/tmp/tmpxcbzd07u/scripts/get_samples.py\", line 18, in get_samples\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1558379531.0
  },
  {
    "data_format": 1,
    "description": "My personal snakemake pipeline for VAST-TOOLS execution",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "AngryMaciek/snakemake_vast_tools",
    "linting": "KeyError in line 65 of /tmp/tmpye_wy0ev/Snakefile:\n\u0027output_dir\u0027\n  File \"/tmp/tmpye_wy0ev/Snakefile\", line 65, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "snakemake-pipeline",
      "rna-seq",
      "alternative-splicing"
    ],
    "updated_at": 1599235514.0
  },
  {
    "data_format": 1,
    "description": "Snakemake Pipeline for Virus Detection",
    "formatting": "[WARNING] In file \"/tmp/tmp0k1ykgb6/rules/makeReport.smk\":  Keyword \"output\" at line 185 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp0k1ykgb6/rules/assemble.smk\":  Keyword \"output\" at line 146 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmp0k1ykgb6/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 53:37:     if not os.path.exists(rawReadDir)\n```\nwhile formatting code with black.\u0027\n[WARNING] In file \"/tmp/tmp0k1ykgb6/rules/cleanReads.smk\":  Keyword \"input\" at line 190 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp0k1ykgb6/rules/cleanReads.smk\":  Keyword \"input\" at line 220 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp0k1ykgb6/rules/cleanReads.smk\":  Keyword \"shell\" at line 306 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp0k1ykgb6/rules/cleanReads.smk\":  Keyword \"output\" at line 385 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp0k1ykgb6/rules/cleanReads.smk\":  Keyword \"output\" at line 415 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "healthyPlant/VDflow",
    "linting": "SyntaxError in line 73 of /tmp/tmp0k1ykgb6/Snakefile:\ninvalid syntax\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1614284401.0
  },
  {
    "data_format": 1,
    "description": "Repository to process ITS amplicon sequencing data and produce figures for Schneider et al (2021)",
    "formatting": "[INFO] 2 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "andnischneider/its_workflow",
    "linting": "SystemExit in line 19 of /tmp/tmp9n1xeeuc/workflow/rules/common.smk:\n\n\n###### WORKFLOW ERROR ######\nSample its.mock.none.t5.0-0 has no SRA id and missing at least one of\nR1: data/ITS_needle/its.mock.none.t5.0_R1.fastq.gz\nR2: data/ITS_needle/its.mock.none.t5.0_R2.fastq.gz\n###### WORKFLOW ERROR ######\n\n            \n  File \"/tmp/tmp9n1xeeuc/workflow/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmp9n1xeeuc/workflow/rules/common.smk\", line 19, in \u003cmodule\u003e\n  File \"/tmp/tmp9n1xeeuc/workflow/scripts/common.py\", line 63, in get_samples\n  File \"/tmp/tmp9n1xeeuc/workflow/scripts/common.py\", line 5, in exit\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [
      "amplicon-data-preprocessing",
      "snakemake-workflow"
    ],
    "updated_at": 1614616263.0
  },
  {
    "data_format": 1,
    "description": "Instructions and examples for using PanVC with founders",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "algbio/panvc-founders",
    "linting": "WorkflowError in line 4 of /tmp/tmp2kbq2ia2/Snakefile:\nFailed to open source file /tmp/tmp2kbq2ia2/panvc-sample-workflow/Snakefile.install\nFileNotFoundError: [Errno 2] No such file or directory: \u0027/tmp/tmp2kbq2ia2/panvc-sample-workflow/Snakefile.install\u0027\n  File \"/tmp/tmp2kbq2ia2/Snakefile\", line 4, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 5,
    "topics": [],
    "updated_at": 1614592014.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 4 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ohsu-cedar-comp-hub/DIDA",
    "linting": "FileNotFoundError in line 24 of /tmp/tmpkf7p08s7/Snakefile:\n[Errno 2] No such file or directory: \u0027data/snakemake_pipeline_NovaSeq_8bp_barcodes.txt\u0027\n  File \"/tmp/tmpkf7p08s7/Snakefile\", line 24, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1589323783.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 14 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "vsoch/dna-seq-varlociraptor",
    "linting": "Lints for snakefile /tmp/tmp_o2i3voq/workflow/Snakefile:\n    * Deprecated singularity directive used for container definition in line 9.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp_o2i3voq/workflow/rules/annotation/pass2.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 15:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp_o2i3voq/workflow/rules/filtering.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_srr (line 1, /tmp/tmp_o2i3voq/workflow/rules/download.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_genome (line 1, /tmp/tmp_o2i3voq/workflow/rules/ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule genome_faidx (line 24, /tmp/tmp_o2i3voq/workflow/rules/ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_known_variants (line 68, /tmp/tmp_o2i3voq/workflow/rules/ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule remove_iupac_codes (line 95, /tmp/tmp_o2i3voq/workflow/rules/ref.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bwa_index (line 147, /tmp/tmp_o2i3voq/workflow/rules/ref.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule merge_fastqs (line 67, /tmp/tmp_o2i3voq/workflow/rules/trimming.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule map_reads (line 1, /tmp/tmp_o2i3voq/workflow/rules/mapping.smk):\n    * Param index is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule render_scenario (line 1, /tmp/tmp_o2i3voq/workflow/rules/calling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bcftools_concat (line 97, /tmp/tmp_o2i3voq/workflow/rules/calling.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule annotate_vcfs (line 20, /tmp/tmp_o2i3voq/workflow/rules/annotation/pass2.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule annotate_dgidb (line 51, /tmp/tmp_o2i3voq/workflow/rules/annotation/pass2.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule filter_by_annotation (line 1, /tmp/tmp_o2i3voq/workflow/rules/filtering.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule control_fdr (line 29, /tmp/tmp_o2i3voq/workflow/rules/filtering.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule merge_calls (line 69, /tmp/tmp_o2i3voq/workflow/rules/filtering.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule igv_report (line 1, /tmp/tmp_o2i3voq/workflow/rules/report.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule vg2svg (line 1, /tmp/tmp_o2i3voq/workflow/rules/vega.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bcf_index (line 1, /tmp/tmp_o2i3voq/workflow/rules/utils.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bam_index (line 25, /tmp/tmp_o2i3voq/workflow/rules/utils.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule build_oncoprint_table (line 1, /tmp/tmp_o2i3voq/workflow/rules/oncoprint.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_oncoprint (line 24, /tmp/tmp_o2i3voq/workflow/rules/oncoprint.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1581227362.0
  },
  {
    "data_format": 1,
    "description": "The assignment for the course PP4RS 2019 ",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "lucaMoretti90/PP4RS_assignment_KG",
    "linting": "Lints for rule plot (line 28, /tmp/tmpfi92gv5q/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable LOG_ALL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule analysis (line 56, /tmp/tmpfi92gv5q/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable LOG_ALL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule merge (line 84, /tmp/tmpfi92gv5q/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable LOG_ALL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule clean (line 154, /tmp/tmpfi92gv5q/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1552322006.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpbn4jluw9/Snakefile\":  \u0027TokenError: (\u0027EOF in multi-line statement\u0027, (109, 0))\u0027\n[INFO] In file \"/tmp/tmpbn4jluw9/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "bjmorgan/data_argyrodite_disorder",
    "linting": "SyntaxError in line 83 of /tmp/tmpbn4jluw9/Snakefile:\nEOF in multi-line statement (Snakefile, line 83)\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1608221695.0
  },
  {
    "data_format": 1,
    "description": "Houses a snakemake workflow used for multiple sequence alignment and maximum likelihood phylogeny construction of genes or proteins. Originally used to study sex determination genes in mosquitoes.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "JamesTanShengYi/Snakemake-Alignment_Phylogeny",
    "linting": "Lints for rule GeneAlignmentClustal (line 1, /tmp/tmp5vurlzs1/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule GeneAlignmentFasta (line 34, /tmp/tmp5vurlzs1/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule GeneAlignmentTrimmed (line 67, /tmp/tmp5vurlzs1/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule GeneTree (line 105, /tmp/tmp5vurlzs1/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ProteinAlignmentClustal (line 148, /tmp/tmp5vurlzs1/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ProteinAlignmentFasta (line 181, /tmp/tmp5vurlzs1/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ProteinAlignmentTrimmed (line 211, /tmp/tmp5vurlzs1/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ProteinTree (line 249, /tmp/tmp5vurlzs1/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "phylogenetic-trees",
      "alignment",
      "snakemake-workflows"
    ],
    "updated_at": 1607966955.0
  },
  {
    "data_format": 1,
    "description": "old repo. see dib-lab/elvers for this snakemake workflow",
    "formatting": "[ERROR] In file \"/tmp/tmpnpzoz0qo/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 2:0:     fastqc_targs = get_targets(units , base , QC_DIR)\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmpnpzoz0qo/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "bluegenes/2018-snakemake-eel-pond",
    "linting": "KeyError in line 12 of /tmp/tmpnpzoz0qo/Snakefile:\n\u0027samples\u0027\n  File \"/tmp/tmpnpzoz0qo/Snakefile\", line 12, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1554845901.0
  },
  {
    "data_format": 1,
    "description": "Build indices for STAR, Kallisto etc. Add data for specified spike-in RNAs.",
    "formatting": "[ERROR] In file \"/tmp/tmp0v0ngg7s/rules/prepare_seqs.smk\":  \u0027NoParametersError: L8: In input definition.\u0027\n[ERROR] In file \"/tmp/tmp0v0ngg7s/rules/build_indices.smk\":  \u0027AttributeError: \u0027NoneType\u0027 object has no attribute \u0027group\u0027\u0027\n[INFO] In file \"/tmp/tmp0v0ngg7s/rules/build_indices.smk\":  2 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmp0v0ngg7s/rules/build_indices.smk\":  1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "marykthompson/build_genome_indices",
    "linting": "WorkflowError in line 11 of /tmp/tmp0v0ngg7s/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmp0v0ngg7s/Snakefile\", line 11, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1605549114.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpgsra56nh/Snakefile\":  \u0027NoParametersError: L78: In input definition.\u0027\n[INFO] In file \"/tmp/tmpgsra56nh/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "deanpettinga/ecc_workflow",
    "linting": "Wildcard constraints in inputs are ignored. (rule: merge_tech_reps)\nWildcard constraints in inputs are ignored. (rule: merge_tech_reps)\nWildcard constraints in inputs are ignored. (rule: merge_tech_reps)\nLints for rule download_ref (line 83, /tmp/tmpgsra56nh/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule trim_galore (line 168, /tmp/tmpgsra56nh/Snakefile):\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule gunzip_reads (line 240, /tmp/tmpgsra56nh/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ecc_caller_align (line 314, /tmp/tmpgsra56nh/Snakefile):\n    * Param outname is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule ecc_caller_callEccRegions (line 380, /tmp/tmpgsra56nh/Snakefile):\n    * Param sample is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule assign_confidence (line 438, /tmp/tmpgsra56nh/Snakefile):\n    * Param sample is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule filter_by_conf (line 500, /tmp/tmpgsra56nh/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_tech_reps (line 548, /tmp/tmpgsra56nh/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule merge_bio_reps (line 588, /tmp/tmpgsra56nh/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_flagstat (line 647, /tmp/tmpgsra56nh/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule prepare_chip_datasets (line 726, /tmp/tmpgsra56nh/Snakefile):\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule get_centromere_bw (line 983, /tmp/tmpgsra56nh/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_TE_bw (line 1071, /tmp/tmpgsra56nh/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_GC_bw (line 1149, /tmp/tmpgsra56nh/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule extract_random_eccs (line 1379, /tmp/tmpgsra56nh/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param out is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614012450.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ImperialCollegeLondon/rcs-snakemake-tutorial",
    "linting": "Lints for rule bwa_map (line 15, /tmp/tmp7d_3x_go/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_sort (line 36, /tmp/tmp7d_3x_go/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_index (line 58, /tmp/tmp7d_3x_go/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bcftools_call (line 78, /tmp/tmp7d_3x_go/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_quals (line 102, /tmp/tmp7d_3x_go/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1596555560.0
  },
  {
    "data_format": 1,
    "description": "Scripts associated with our study, \"Genomic and transcriptomic characterization of relapsed small cell lung cancer through rapid research autopsy\"",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "OSU-SRLab/SCLC-autopsy-genomics",
    "linting": "PermissionError in line 16 of /tmp/tmpwohwf09k/Snakefile:\n[Errno 13] Permission denied: \u0027/parh\u0027\n  File \"/tmp/tmpwohwf09k/Snakefile\", line 16, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 225, in makedirs\n",
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1614368088.0
  },
  {
    "data_format": 1,
    "description": "RADSex paper analyses workflow",
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "RomainFeron/paper-sexdetermination-radsex",
    "linting": "Lints for snakefile /tmp/tmpou70fpup/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpou70fpup/rules/data.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpou70fpup/rules/default_workflow.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpou70fpup/rules/supplementary.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule medaka_update_popmap (line 99, /tmp/tmpou70fpup/rules/medaka.smk):\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule medaka_chromosomes_file (line 346, /tmp/tmpou70fpup/rules/medaka.smk):\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "workflow",
      "snakemake",
      "analyses"
    ],
    "updated_at": 1613771177.0
  },
  {
    "data_format": 1,
    "description": "Multiplex Accurate Sensitive Quantitation (MASQ) analysis and primer design",
    "formatting": "[ERROR] In file \"/tmp/tmpvzo078b8/Snakefile\":  \u0027AttributeError: \u0027NoneType\u0027 object has no attribute \u0027group\u0027\u0027\n[INFO] In file \"/tmp/tmpvzo078b8/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "amoffitt/MASQ",
    "linting": "Lints for snakefile /tmp/tmpvzo078b8/Snakefile:\n    * Absolute path \"/r1.fastq.gz\" in line 143:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/r2.fastq.gz\" in line 144:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/r1.fastq.gz\" in line 176:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/r2.fastq.gz\" in line 177:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/extended_var_table.txt\" in line 178:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/extended_var_table.txt\" in line 223:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 65:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 178:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 223:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 72:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 110:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 425:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 426:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule convert_SNV_table (line 120, /tmp/tmpvzo078b8/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule barcode_split (line 145, /tmp/tmpvzo078b8/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param output_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule fastqc (line 176, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule check_loci_extend_and_plot (line 207, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sort_data_by_tag_and_locus (line 239, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule all_base_report (line 290, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_within_tag_errors (line 337, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule tag_count_graphs_per_region (line 363, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule tag_count_graphs_combined (line 395, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule rollup_tags (line 426, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_reports_alignment (line 462, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_reports_basecount (line 488, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_reports_per_base (line 513, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_reports_rollup (line 538, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_reports_readspertag (line 563, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule extract_variant_bases_from_report (line 589, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_rollup_results (line 614, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule final_report (line 643, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bad_loci (line 671, /tmp/tmpvzo078b8/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule qc_plots (line 684, /tmp/tmpvzo078b8/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter_base_report (line 708, /tmp/tmpvzo078b8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1563039774.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "qbicsoftware-archive/rnaseq",
    "linting": "WorkflowError in line 9 of /tmp/tmpxwpavlx8/Snakefile:\nConfig file config.json not found.\n  File \"/tmp/tmpxwpavlx8/Snakefile\", line 9, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 8,
    "topics": [
      "workflow",
      "ngs",
      "rna"
    ],
    "updated_at": 1600945244.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 15 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "whtns/dna-seq-varlociraptor",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1596732037.0
  },
  {
    "data_format": 1,
    "description": "An introduction to Snakemake with simple examples of central snakemake features",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "oskarvid/snakemake-intro",
    "linting": "Lints for rule BasicRule (line 18, /tmp/tmpbe3qust7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ParallelProcessingRule (line 37, /tmp/tmpbe3qust7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule MultipleInputsToOneToolRule (line 56, /tmp/tmpbe3qust7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule MoreThanOneFileAsInputRule (line 75, /tmp/tmpbe3qust7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule CondaInstallBCFToolsRule (line 95, /tmp/tmpbe3qust7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule CondaShowBCFToolsVersionWithParamsRule (line 118, /tmp/tmpbe3qust7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule CondaBCFToolsMultipleParamsRule (line 148, /tmp/tmpbe3qust7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule MultipleThreadsRule (line 179, /tmp/tmpbe3qust7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1604660348.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "LucilleWerner/owe11_workflows",
    "linting": "Lints for rule get_data_from_ncbi (line 11, /tmp/tmpsje9105a/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_data_from_uniprot (line 35, /tmp/tmpsje9105a/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_data_from_eggnog (line 59, /tmp/tmpsje9105a/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_data_from_oma (line 83, /tmp/tmpsje9105a/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mine_text (line 107, /tmp/tmpsje9105a/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_gc_plot (line 131, /tmp/tmpsje9105a/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_report (line 155, /tmp/tmpsje9105a/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cleanup (line 180, /tmp/tmpsje9105a/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule surprise (line 195, /tmp/tmpsje9105a/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dag (line 210, /tmp/tmpsje9105a/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1528846840.0
  },
  {
    "data_format": 1,
    "description": "Detect replication slippage variants at microsatellite regions",
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "tdayris-perso/bam-msisensor",
    "linting": "FileNotFoundError in line 21 of /tmp/tmpygybh6ps/rules/common.smk:\n[Errno 2] No such file or directory: \u0027design.tsv\u0027\n  File \"/tmp/tmpygybh6ps/Snakefile\", line 12, in \u003cmodule\u003e\n  File \"/tmp/tmpygybh6ps/rules/common.smk\", line 21, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 610, in read_csv\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "bioinformatics-pipeline",
      "snakemake-workflows",
      "reproducible-workflows",
      "microsatellite-instability"
    ],
    "updated_at": 1586510173.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 14 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "zhuakexi/scDrop-Seq",
    "linting": "WorkflowError in line 20 of /tmp/tmpz6gqzlfs/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmpz6gqzlfs/Snakefile\", line 20, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1601219664.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmp0sbfzfre/Snakefile\":  \u0027SyntaxError: L69: Unrecognised keyword \u0027Ensembl\u0027 in rule report definition\u0027\n[INFO] In file \"/tmp/tmp0sbfzfre/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "RnRoger/API_course_11",
    "linting": "ModuleNotFoundError in line 1 of /tmp/tmp0sbfzfre/Snakefile:\nNo module named \u0027pytools\u0027\n  File \"/tmp/tmp0sbfzfre/Snakefile\", line 1, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1597860000.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpq6kwrmad/rules/2.1.BQSR.smk\":  \u0027InvalidParameterSyntax: L41:Invalid key REFERENCE\n recal\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "rimjhimroy/snakeGATK4",
    "linting": "FileNotFoundError in line 15 of /tmp/tmpq6kwrmad/Snakefile:\n[Errno 2] No such file or directory: \u0027data/genome/biscutV2.1_new.fa\u0027\n  File \"/tmp/tmpq6kwrmad/Snakefile\", line 15, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1607589582.0
  },
  {
    "data_format": 1,
    "description": "Workflow to simulate an RNA-seq reads and perform DE-analysis",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "rstats-tartu/simulate-rnaseq",
    "linting": "ModuleNotFoundError in line 2 of /tmp/tmp4rln3lkd/Snakefile:\nNo module named \u0027Bio\u0027\n  File \"/tmp/tmp4rln3lkd/Snakefile\", line 2, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [
      "rna-seq-pipeline",
      "simulation",
      "snakemake-workflow",
      "deseq2",
      "polyester"
    ],
    "updated_at": 1611645822.0
  },
  {
    "data_format": 1,
    "description": "Snakemake tutorial ready to be used",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "mstamenk/snakemake-tutorial",
    "linting": "TypeError in line 11 of /tmp/tmpw0wevory/Snakefile:\nunsupported operand type(s) for +: \u0027NoneType\u0027 and \u0027str\u0027\n  File \"/tmp/tmpw0wevory/Snakefile\", line 11, in \u003cmodule\u003e\n  File \"/tmp/tmpw0wevory/routines/Analysis.py\", line 18, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1500753613.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow that reanalyzes proteomics data from a PRIDE Archive project to create a spectral library",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "RalfG/workflow_pxd_to_speclib",
    "linting": "ModuleNotFoundError in line 4 of /tmp/tmp1fivvuwz/get_data.smk:\nNo module named \u0027wget\u0027\n  File \"/tmp/tmp1fivvuwz/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmp1fivvuwz/get_data.smk\", line 4, in \u003cmodule\u003e\n  File \"/tmp/tmp1fivvuwz/scripts/download_pride_project.py\", line 16, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [
      "proteomics",
      "msgfplus",
      "percolator",
      "thermorawfileparser",
      "snakemake",
      "pride-database",
      "mass-spectrometry"
    ],
    "updated_at": 1583943853.0
  },
  {
    "data_format": 1,
    "description": " ",
    "formatting": "[ERROR] In file \"/tmp/tmp8mx2pvf1/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 3:0:     \"cutadapt/tophat/htseq/map_count.txt\"\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmp8mx2pvf1/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "ORU-BIOI/rna-seq-workflow",
    "linting": "WorkflowError in line 93 of /tmp/tmp8mx2pvf1/Snakefile:\nDuplicate output file pattern in rule qc. First two duplicate for entries qcout and zipout\n  File \"/tmp/tmp8mx2pvf1/Snakefile\", line 93, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1433000612.0
  },
  {
    "data_format": 1,
    "description": "run dropseq - slight modifications from original dropSeqPipe",
    "formatting": "[ERROR] In file \"/tmp/tmp1xq3ogec/rules/map.smk\":  \u0027SyntaxError: L227: Unrecognised keyword \u0027STAR_output\u0027 in rule plot_yield definition\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 13 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dylkot/dropSeqPipe-dak",
    "linting": "WorkflowError in line 18 of /tmp/tmp1xq3ogec/Snakefile:\nConfig file /home/runDropseqPipeGCP/dropSeqPipe-dak/templates/gtf_biotypes.yaml not found.\n  File \"/tmp/tmp1xq3ogec/Snakefile\", line 18, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1606611634.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "hobrien/GENEX-FB1",
    "linting": "Lints for snakefile /tmp/tmppuljrhv4/Snakefile:\n    * Path composition with \u0027+\u0027 in line 27:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 105:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule format_bed (line 18, /tmp/tmppuljrhv4/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule transcript_seqs (line 37, /tmp/tmppuljrhv4/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_index (line 59, /tmp/tmppuljrhv4/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule run_kalliso (line 82, /tmp/tmppuljrhv4/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule estimate_counts (line 112, /tmp/tmppuljrhv4/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param out_name is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule join_factors (line 181, /tmp/tmppuljrhv4/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule format_cov (line 201, /tmp/tmppuljrhv4/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule gene_level (line 221, /tmp/tmppuljrhv4/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param out_name is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule transcript_level (line 255, /tmp/tmppuljrhv4/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param out_name is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1531409849.0
  },
  {
    "data_format": 1,
    "description": "Workflow for Burrows wheeler alignment on CRAM input files using snakemake  and Healthrecord system analytics",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Umar-Ayub/Human-Genome-Analysis-Pipeline",
    "linting": "Lints for rule bwa_mem (line 11, /tmp/tmp5ztskfbr/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1544046285.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for Salmon quantification and FastQC quality controls",
    "formatting": "[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "tdayris-perso/rna-count-salmon",
    "linting": "FileNotFoundError in line 33 of /tmp/tmpb9x_ypr0/rules/common.smk:\n[Errno 2] No such file or directory: \u0027tests/design.tsv\u0027\n  File \"/tmp/tmpb9x_ypr0/Snakefile\", line 11, in \u003cmodule\u003e\n  File \"/tmp/tmpb9x_ypr0/rules/common.smk\", line 33, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 610, in read_csv\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [
      "snakemake-workflows",
      "bioinformatics-pipeline",
      "reproducible-workflows",
      "rnaseq-pipeline",
      "fastqc",
      "salmon",
      "multiqc"
    ],
    "updated_at": 1613463894.0
  },
  {
    "data_format": 1,
    "description": "Cancer Selection",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "pmonnahan/CanSel",
    "linting": "FileNotFoundError in line 30 of /tmp/tmpeer72_pe/workflow/Snakefile:\n[Errno 2] No such file or directory: \u0027/home/spectorl/pmonnaha/misc/h1kgp_samps.txt\u0027\n  File \"/tmp/tmpeer72_pe/workflow/Snakefile\", line 30, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1611095431.0
  },
  {
    "data_format": 1,
    "description": "Trade-off between land use and cost of renewable electricity in Europe.",
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "timtroendle/money-land",
    "linting": "Lints for snakefile /tmp/tmpcei4z2a9/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpcei4z2a9/rules/sync.smk:\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule send (line 10, /tmp/tmpcei4z2a9/rules/sync.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable SYNCIGNORE from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable EULER_URL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable EULER_BASE_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule receive (line 25, /tmp/tmpcei4z2a9/rules/sync.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable EULER_URL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable EULER_BUILD_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable LOCAL_EULER_RESULTS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule clean_euler (line 40, /tmp/tmpcei4z2a9/rules/sync.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable LOCAL_EULER_RESULTS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule copy_euro_calliope (line 19, /tmp/tmpcei4z2a9/rules/construct.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule copy_resolution_specific_euro_calliope (line 39, /tmp/tmpcei4z2a9/rules/construct.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule import_restrictions (line 59, /tmp/tmpcei4z2a9/rules/construct.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule model (line 89, /tmp/tmpcei4z2a9/rules/construct.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule run_continental (line 26, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule run_national (line 58, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule aggregated_results (line 90, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule visualise_supply_shares (line 119, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sample_x (line 145, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule xy (line 175, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_observations (line 201, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ternary_plots (line 227, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule flexibility_plot (line 253, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule technology_plot (line 279, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule relative_boxenplot_uncertainty (line 308, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule absolute_boxenplot_uncertainty (line 334, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule wind_share_plot (line 360, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule map_land_requirements (line 386, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule overview_cost_assumptions (line 414, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule overview_uncertainty_parameters (line 442, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule test (line 468, /tmp/tmpcei4z2a9/rules/analyse.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule figures (line 5, /tmp/tmpcei4z2a9/rules/publication.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule prepare_publication (line 38, /tmp/tmpcei4z2a9/rules/publication.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule copy_report_file (line 59, /tmp/tmpcei4z2a9/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule report (line 107, /tmp/tmpcei4z2a9/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable PANDOC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule supplementary_material (line 164, /tmp/tmpcei4z2a9/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable PANDOC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule clean (line 210, /tmp/tmpcei4z2a9/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1596792411.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for removing mapping bias from sequencing data, and then counting the number of reads per allele at loci of interest.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "durrantmm/ase_read_counting_workflow",
    "linting": "Lints for snakefile /tmp/tmpemn_8uei/Snakefile:\n    * Path composition with \u0027+\u0027 in line 140:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule all (line 41, /tmp/tmpemn_8uei/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule star_genome (line 54, /tmp/tmpemn_8uei/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule star_align (line 90, /tmp/tmpemn_8uei/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param out_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule make_snp_dir (line 196, /tmp/tmpemn_8uei/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule star_remap (line 260, /tmp/tmpemn_8uei/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param out_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule samtools_merge (line 394, /tmp/tmpemn_8uei/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_sort (line 418, /tmp/tmpemn_8uei/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_index (line 446, /tmp/tmpemn_8uei/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule index_genome (line 469, /tmp/tmpemn_8uei/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1543259552.0
  },
  {
    "data_format": 1,
    "description": "Collection of scripts for the Bayesian GGM project",
    "formatting": "[ERROR] In file \"/tmp/tmp1eba3yxw/Snakefile\":  \u0027SyntaxError: L590: Unrecognised keyword \u0027snp_summary\u0027 in rule magma_on_genes_snpwise_top definition\u0027\n[INFO] In file \"/tmp/tmp1eba3yxw/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "jhawe/bggm",
    "linting": "ValueError in line 83 of /tmp/tmp1eba3yxw/workflows/2_2_simulation.sm:\nlist.remove(x): x not in list\n  File \"/tmp/tmp1eba3yxw/Snakefile\", line 64, in \u003cmodule\u003e\n  File \"/tmp/tmp1eba3yxw/workflows/2_2_simulation.sm\", line 83, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1590568086.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "z-sector/stepik_snakemake",
    "linting": "Lints for rule copy (line 15, /tmp/tmpbfvkp1um/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1560418918.0
  },
  {
    "data_format": 1,
    "description": "Consists of Snakemake workflows for the analysis of genomic and epigenomic data",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "RewatiAtGit/Snakemake-Pipelines",
    "linting": "SyntaxError:\nNot all output, log and benchmark files of rule hisat_map contain the same wildcards. This is crucial though, in order to avoid that two or more jobs write to the same file.\n  File \"/tmp/tmp6acbbe08/Snakefile\", line 23, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1526549226.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for MDT",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "akhanf/mdt_smk",
    "linting": "Lints for snakefile /tmp/tmpa7lpq8f5/Snakefile:\n    * Absolute path \"/project/6050199/akhanf/singularity/bids-apps/khanlab_mdt-bids_v0.1.sif\" in line 21:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/project/6050199/akhanf/singularity/bids-apps/khanlab_mdt-bids_v0.1.sif\" in line 38:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule create_protocol (line 19, /tmp/tmpa7lpq8f5/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule model_fit (line 48, /tmp/tmpa7lpq8f5/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1613082614.0
  },
  {
    "data_format": 1,
    "description": "workflow-jamo4892 created by GitHub Classroom",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "cu-swe4s-fall-2019/workflow-jamo4892",
    "linting": "Lints for rule get_gene_counts (line 4, /tmp/tmp8hz9evpd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable GENES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule get_tissue_samples (line 22, /tmp/tmp8hz9evpd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable TISSUES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1574400545.0
  },
  {
    "data_format": 1,
    "description": "Count your fastq-formatted rna-seq reads with Salmon",
    "formatting": "[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "gustaveroussy/rna-count-salmon",
    "linting": "TypeError in line 103 of /tmp/tmplhks204s/rules/common.smk:\nexpected str, bytes or os.PathLike object, not NoneType\n  File \"/tmp/tmplhks204s/Snakefile\", line 11, in \u003cmodule\u003e\n  File \"/tmp/tmplhks204s/rules/common.smk\", line 103, in \u003cmodule\u003e\n  File \"/tmp/tmplhks204s/rules/../scripts/common_script_rna_count_salmon.py\", line 208, in ref_link\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/posixpath.py\", line 142, in basename\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [
      "bioinformatics-pipeline",
      "salmon",
      "fastqc",
      "multiqc",
      "snakemake-workflow",
      "conda",
      "reproducible-workflows"
    ],
    "updated_at": 1586505888.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "SmitsG/Workflows-bi11",
    "linting": "ModuleNotFoundError in line 5 of /tmp/tmp31x4qz6q/Snakefile:\nNo module named \u0027Bio\u0027\n  File \"/tmp/tmp31x4qz6q/Snakefile\", line 5, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1531178141.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmplw9vpuvc/Snakefile\":  \u0027NoParametersError: L155: In envmodules definition.\u0027\n[INFO] In file \"/tmp/tmplw9vpuvc/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "vari-bbc/scRNAseq",
    "linting": "WorkflowError in line 20 of /tmp/tmplw9vpuvc/Snakefile:\nFailed to open /secondary/projects/bbc/research/shared_snakemake/rules/preprocess/convert2fastq_gz.\n  File \"/tmp/tmplw9vpuvc/Snakefile\", line 20, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1614259832.0
  },
  {
    "data_format": 1,
    "description": "Analysis of RNA-seq data from Covid19 samples",
    "formatting": "[WARNING] In file \"/tmp/tmpc3u0a_ra/rules/quality_control.smk\":  Keyword \"input\" at line 52 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "sambitmishra0628/RNA-Seq-1",
    "linting": "The flag \u0027directory\u0027 used in rule fetch_samples is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule multiqc_raw is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule multiqc_trimmed is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule fetch_references is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nLints for snakefile /tmp/tmpc3u0a_ra/Snakefile:\n    * Absolute path \"/results/samples_trimmed/\" + \" in line 26:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/samples_trimmed/\" + \" in line 27:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/reference_genomes/\", dd=config[\" in line 36:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/reference_genomes/\" + \" in line 37:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/reference_genomes/\" + \" in line 38:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/reference_genomes/\" + \" in line 39:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/reference_genomes/\" + \" in line 40:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/human_genome_indexed/\", dd=config[\" in line 43:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/sars2_genome_indexed/\", dd=config[\" in line 44:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/mapped_reads/human/\", dd=config[\" in line 47:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/mapped_reads/human/\" + \" in line 48:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/mapped_reads/human/\" + \" in line 49:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpc3u0a_ra/rules/fetch_samples.smk:\n    * Absolute path \"/\" + file_id + \" in line 22:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\" + file_id + \" in line 23:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\" + file_id + \" in line 34:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\" + file_id + \" in line 35:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 22:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 24:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 10:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 22:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 24:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 34:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpc3u0a_ra/rules/quality_control.smk:\n    * Absolute path \"/samples/\" + \" in line 34:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/samples/\" + \" in line 35:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/samples_trimmed/\" + \" in line 37:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/samples_trimmed/\" + \" in line 38:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/samples_trimmed/\" + \" in line 41:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/samples_trimmed/\" + \" in line 53:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmpc3u0a_ra/rules/fetch_references.smk:\n    * Absolute path \"/reference_genomes/\" + config[\" in line 9:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/reference_genomes/\" + config[\" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/reference_genomes/\" + config[\" in line 11:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/reference_genomes/\" + config[\" in line 12:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 9:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 10:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 11:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpc3u0a_ra/rules/index_genomes.smk:\n    * Absolute path \"/reference_genomes/\" + config[\" in line 6:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/reference_genomes/\" + config[\" in line 7:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/reference_genomes/\" + config[\" in line 8:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/reference_genomes/\" + config[\" in line 9:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/human_genome_indexed/\", dd=config[\" in line 11:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/sars2_genome_indexed/\", dd=config[\" in line 12:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/reference_genomes/\" + config[\" in line 17:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/reference_genomes/\" + config[\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 8:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 9:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 17:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpc3u0a_ra/rules/map_reads.smk:\n    * Absolute path \"/results/samples_trimmed/\" + \" in line 7:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/samples_trimmed/\" + \" in line 8:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/mapped_reads_control/human/\",dd=config[\" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/mapped_reads/human/\" + \" in line 11:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/samples_trimmed/\" + \" in line 26:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/samples_trimmed/\" + \" in line 27:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/samples_trimmed/\" + \" in line 28:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/samples_trimmed/\" + \" in line 29:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/mapped_reads/human/\",dd=config[\" in line 31:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/results/mapped_reads/human/\" + \" in line 32:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule fetch_samples (line 8, /tmp/tmpc3u0a_ra/rules/fetch_samples.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule fastqc_raw (line 5, /tmp/tmpc3u0a_ra/rules/quality_control.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule multiqc_raw (line 40, /tmp/tmpc3u0a_ra/rules/quality_control.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc_trimmed (line 100, /tmp/tmpc3u0a_ra/rules/quality_control.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule multiqc_trimmed (line 138, /tmp/tmpc3u0a_ra/rules/quality_control.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fetch_references (line 4, /tmp/tmpc3u0a_ra/rules/fetch_references.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule index_genomes (line 4, /tmp/tmpc3u0a_ra/rules/index_genomes.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule map_reads (line 5, /tmp/tmpc3u0a_ra/rules/map_reads.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "rna-seq",
      "rna-seq-pipeline"
    ],
    "updated_at": 1614320016.0
  },
  {
    "data_format": 1,
    "description": "Download sars-covid-2 sequencing runs from NCBI",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "avilab/sars-covid-2-ncbi",
    "linting": "Lints for rule get_fastq_pe (line 15, /tmp/tmpz29kne2v/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1584351589.0
  },
  {
    "data_format": 1,
    "description": "Examples showcasing usage of snakemake in R data processing workflow",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Chr96er/snakemake_examples",
    "linting": "KeyError in line 32 of /tmp/tmpnanj1pii/Snakefile:\n\u0027workdir\u0027\n  File \"/tmp/tmpnanj1pii/Snakefile\", line 32, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1542236412.0
  },
  {
    "data_format": 1,
    "description": "Portion of snakemake workflow for creating a gif for hippocampal visualization ",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "kaitj/snakemake_hippo_gif",
    "linting": "Lints for snakefile /tmp/tmpo42bjinn/Snakefile:\n    * Deprecated singularity directive used for container definition in line 20.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1607102252.0
  },
  {
    "data_format": 1,
    "description": "The workflow project",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "rubenvermaas/Workflow",
    "linting": "Lints for rule all (line 1, /tmp/tmp_lxcjstm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule isolation (line 14, /tmp/tmp_lxcjstm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule search (line 30, /tmp/tmp_lxcjstm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sequence (line 46, /tmp/tmp_lxcjstm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sequenceID (line 62, /tmp/tmp_lxcjstm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sequenceDeel (line 78, /tmp/tmp_lxcjstm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule pubmedID (line 94, /tmp/tmp_lxcjstm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule GCperc (line 110, /tmp/tmp_lxcjstm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1547202300.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "durrantmm/mustache_OLD",
    "linting": "Lints for rule all (line 45, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_taxonomy_db (line 62, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_genomes (line 78, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_insertseqs (line 98, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bowtie_build_genomes (line 118, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bowtie_build_insertseqs (line 143, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bowtie_align_to_genomes (line 168, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bowtie_align_to_insertseqs (line 199, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule split_genome_alignments (line 230, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule split_insertseq_alignments (line 250, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule split_sam_by_class (line 270, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sam_merge_taxonomy (line 309, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_sort (line 330, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_index (line 350, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule call_peaks (line 370, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_peaks (line 396, /tmp/tmptz_oss68/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1516747861.0
  },
  {
    "data_format": 1,
    "description": "Snakemake enabled pipeline for coverage estimation with GATK DepthOfCoverage",
    "formatting": "[ERROR] In file \"/tmp/tmpa7mq0688/rules/multiqc.smk\":  \u0027SyntaxError: L20: Unrecognised keyword \u0027expand\u0027 in rule multiqc definition\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "massiddamt/coverest",
    "linting": "Lints for snakefile /tmp/tmpa7mq0688/Snakefile:\n    * Absolute path \"/functions.py\" in line 33:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/depth_cov.smk\" in line 35:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/bbmap.smk\" in line 37:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/multiqc.smk\" in line 39:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/plots.smk\" in line 41:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/qualimap.smk\" in line 43:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 33:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 37:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 41:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpa7mq0688/rules/depth_cov.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpa7mq0688/rules/bbmap.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpa7mq0688/rules/qualimap.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule active_gatk (line 1, /tmp/tmpa7mq0688/rules/depth_cov.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule active_gatkdoc_plugin (line 1, /tmp/tmpa7mq0688/rules/multiqc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_bbmap_coverage (line 2, /tmp/tmpa7mq0688/rules/plots.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_depthofcoverage (line 24, /tmp/tmpa7mq0688/rules/plots.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qualimap (line 5, /tmp/tmpa7mq0688/rules/qualimap.smk):\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1592925441.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline to map DNA datasets to a given reference genome using BWA MEM and Samtools.",
    "formatting": "[ERROR] In file \"/tmp/tmpisbawg1i/rules/trimming.smk\":  \u0027InvalidParameterSyntax: 50( conservative_cpu_count( reserve_cores=2, max_cores=99))/4 if( conservative_cpu_count( reserve_cores=2, max_cores=99))\u003e4 else1\n\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "solida-core/dima",
    "linting": "KeyError in line 10 of /tmp/tmpisbawg1i/Snakefile:\n\u0027samples\u0027\n  File \"/tmp/tmpisbawg1i/Snakefile\", line 10, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [
      "snakemake",
      "snakemake-workflows",
      "genomics",
      "bioinformatics",
      "ngs-pipeline",
      "workflows"
    ],
    "updated_at": 1611765698.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "JuliaSprenger/PhD_thesis",
    "linting": "AssertionError in line 7 of /tmp/tmptucqpb3y/Snakefile.\n  File \"/tmp/tmptucqpb3y/Snakefile\", line 7, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1594229139.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpiutckw9l/Snakefile\":  \u0027NoParametersError: L119: In params definition.\u0027\n[INFO] In file \"/tmp/tmpiutckw9l/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "bjpop/tp53_tamseq",
    "linting": "FileNotFoundError in line 6 of /tmp/tmpiutckw9l/Snakefile:\n[Errno 2] No such file or directory: \u0027sample_names.tsv\u0027\n  File \"/tmp/tmpiutckw9l/Snakefile\", line 6, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 689, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1567246990.0
  },
  {
    "data_format": 1,
    "description": "A snakemake workflow for rapid execution of codiversification analysis",
    "formatting": "[ERROR] In file \"/tmp/tmpynv1ryu3/Snakefile\":  \u0027AttributeError: \u0027NoneType\u0027 object has no attribute \u0027group\u0027\u0027\n[INFO] In file \"/tmp/tmpynv1ryu3/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "tanaes/snakemake_codiversification",
    "linting": "KeyError in line 4 of /tmp/tmpynv1ryu3/Snakefile:\n\u0027envs\u0027\n  File \"/tmp/tmpynv1ryu3/Snakefile\", line 4, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1478835342.0
  },
  {
    "data_format": 1,
    "description": "snakemake workflow example for msprime",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "kr-colab/snakemake_example",
    "linting": "ModuleNotFoundError in line 1 of /tmp/tmp_0i5jf2x/Snakefile:\nNo module named \u0027msprime\u0027\n  File \"/tmp/tmp_0i5jf2x/Snakefile\", line 1, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1572649135.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ddesvillechabrol/pool_variant_calling",
    "linting": "Lints for snakefile /tmp/tmpr9fkjree/Snakefile:\n    * Absolute path \"/{sample}.fastq.gz\" in line 26:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 26:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 49:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 68:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 82:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 49:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 50:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 54:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule bwa_sample (line 31, /tmp/tmpr9fkjree/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule bwa_ref (line 69, /tmp/tmpr9fkjree/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule create_dict (line 107, /tmp/tmpr9fkjree/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mutect (line 139, /tmp/tmpr9fkjree/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_results (line 177, /tmp/tmpr9fkjree/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1457714169.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "durrantmm/genomic_ase_read_counting_workflow",
    "linting": "Lints for snakefile /tmp/tmpnbtq1nag/Snakefile:\n    * Path composition with \u0027+\u0027 in line 112:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule all (line 39, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bowtie2_build_genome (line 52, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bowtie2_map (line 75, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule add_read_groups (line 101, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mark_duplicates (line 121, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule make_snp_dir (line 142, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule find_intersecting_snps (line 171, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bowtie2_remap (line 203, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule remap_add_read_groups (line 229, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule remap_mark_duplicates (line 249, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule filter_remapped_reads (line 270, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_merge (line 295, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_sort (line 316, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_index (line 336, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule index_genome (line 356, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule create_genome_dictionary (line 376, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ase_read_counter (line 396, /tmp/tmpnbtq1nag/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1498256481.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpc45_d7_b/Snakefile\":  \u0027SyntaxError: L307: Unrecognised keyword \u0027\"short_reads/{sample}-{genome}/{sample}.chr1.shrt.vip.bed\"\u0027 in rule create_sym_folder definition\u0027\n[INFO] In file \"/tmp/tmpc45_d7_b/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "yuxuth/hicar_tools",
    "linting": "Lints for snakefile /tmp/tmpc45_d7_b/Snakefile:\n    * Absolute path \"/datacommons/ydiaolab/genome_ref/maps_feature/hg38_cviqi/hg38/CviQI/F_GC_M_CviQI_10Kb_el.txt\" in line 24:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\"setname\" in line 289:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\"setname\" in line 302:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule fastq_preprocessing (line 83, /tmp/tmpc45_d7_b/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bwa_mem_mapping (line 124, /tmp/tmpc45_d7_b/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable BWA_INDEX from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule prase_pairs_from_BAM_files (line 163, /tmp/tmpc45_d7_b/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable chromsizes from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable genome from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule select_valid_pairs (line 200, /tmp/tmpc45_d7_b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable chromsizes from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable tmp from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule remove_duplicate_pairs (line 231, /tmp/tmpc45_d7_b/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule remove_same_fragment_pairs (line 262, /tmp/tmpc45_d7_b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable frag_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule make_index (line 293, /tmp/tmpc45_d7_b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule HiC_contact_matrices_Cooler (line 320, /tmp/tmpc45_d7_b/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable chromsizes from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule read_info (line 351, /tmp/tmpc45_d7_b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule extract_R2_ATAC_reads (line 373, /tmp/tmpc45_d7_b/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ATAC_reads_Tn5_shifting_duplicate_remove (line 402, /tmp/tmpc45_d7_b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable tmp from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule merged_ATAC_peaks (line 437, /tmp/tmpc45_d7_b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_cooler (line 479, /tmp/tmpc45_d7_b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mcooler (line 503, /tmp/tmpc45_d7_b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ATAC_macs2_peaks (line 530, /tmp/tmpc45_d7_b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable genome_version from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable pval_thresh from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable shiftsize from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable smooth_window from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule dump_ATAC_reads (line 561, /tmp/tmpc45_d7_b/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dump_long_reads (line 591, /tmp/tmpc45_d7_b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule create_sym_folder (line 622, /tmp/tmpc45_d7_b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule run_maps (line 655, /tmp/tmpc45_d7_b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable maps_background from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param readsdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614094202.0
  },
  {
    "data_format": 1,
    "description": "Toy workflow for running on slurm cluster",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "hertzsprung/snakemake-slurm-demo",
    "linting": "Lints for rule clean (line 15, /tmp/tmpglvro9ve/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cpp (line 25, /tmp/tmpglvro9ve/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule cpp_local (line 50, /tmp/tmpglvro9ve/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1581418869.0
  },
  {
    "data_format": 1,
    "description": "Reproducible code for benchmark evaluations and Snakemake workflow for using genetic variation-based demultiplexing tools (Vireo) in cancer",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "lmweber/snp-dmx-cancer",
    "linting": "Lints for snakefile /tmp/tmpbckp04rh/workflow/Snakefile:\n    * Absolute path \"/cellranger/refdata-gex-GRCh38-2020-A\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/HGSOC\" in line 21:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/HGSOC\" in line 23:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/HGSOC\" in line 25:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/HGSOC/doublets_sims/20pc/vireo/timestamp_vireo_HGSOC_20pc.txt\" in line 61:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/HGSOC/doublets_sims/20pc/cellSNP/timestamp_cellSNP_HGSOC_20pc.txt\" in line 72:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/run_vireo.sh\" in line 73:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/HGSOC/doublets_sims/20pc/vireo/timestamp_vireo_HGSOC_20pc.txt\" in line 75:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/HGSOC/doublets_sims/20pc/parse_and_index_BAM_doublets/timestamp_parse_and_index_BAM_doublets_HGSOC_20pc.txt\" in line 94:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/run_cellSNP.sh\" in line 95:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/HGSOC/doublets_sims/20pc/cellSNP/timestamp_cellSNP_HGSOC_20pc.txt\" in line 97:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/HGSOC/doublets_sims/20pc/lookup_table_doublets/timestamp_lookup_table_doublets_HGSOC_20pc.txt\" in line 115:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/parse_and_index_BAM_doublets_HGSOC_20pc.sh\" in line 116:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/HGSOC/doublets_sims/20pc/parse_and_index_BAM_doublets/timestamp_parse_and_index_BAM_doublets_HGSOC_20pc.txt\" in line 118:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/parse_and_merge_barcodes/timestamp_parse_and_merge_barcodes.txt\" in line 136:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/generate_awk_lookup_tables_doublets.sh\" in line 137:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/HGSOC/doublets_sims/20pc/lookup_table_doublets/timestamp_lookup_table_doublets_HGSOC_20pc.txt\" in line 139:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/merge_and_index_BAM/timestamp_merge_and_index_BAM.txt\" in line 153:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/parse_and_merge_barcodes_HGSOC.sh\" in line 154:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/parse_and_merge_barcodes/timestamp_parse_and_merge_barcodes.txt\" in line 156:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/parse_BAM_files/timestamp_parse_BAM_files_{sample_HGSOC}.txt\" in line 179:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/merge_and_index_BAM_HGSOC.sh\" in line 180:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/merge_and_index_BAM/timestamp_merge_and_index_BAM.txt\" in line 182:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cellranger/timestamp_cellranger_{sample_HGSOC}.txt\" in line 200:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/parse_BAM_files.sh\" in line 201:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/parse_BAM_files/timestamp_parse_BAM_files_{sample_HGSOC}.txt\" in line 203:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/run_cellranger.sh\" in line 220:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cellranger/timestamp_cellranger_{sample_HGSOC}.txt\" in line 222:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 23:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 25:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 61:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 72:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 73:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 94:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 95:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 115:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 116:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 136:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 137:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 153:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 154:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 179:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 180:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 200:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 201:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 220:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule run_vireo_HGSOC_20pc (line 76, /tmp/tmpbckp04rh/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable dir_runtimes from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_timestamps from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_outputs from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_cellSNP_HGSOC_20pc (line 115, /tmp/tmpbckp04rh/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable dir_runtimes from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_timestamps from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_outputs from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_genotype from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule parse_and_index_BAM_doublets_HGSOC_20pc (line 153, /tmp/tmpbckp04rh/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable dir_runtimes from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_timestamps from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_outputs from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_awk_lookup_tables (line 191, /tmp/tmpbckp04rh/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable dir_runtimes from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_timestamps from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_outputs from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_scripts from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule parse_and_merge_barcodes_HGSOC (line 222, /tmp/tmpbckp04rh/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable dir_runtimes_HGSOC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_timestamps_HGSOC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_outputs_HGSOC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule merge_and_index_BAM_HGSOC (line 266, /tmp/tmpbckp04rh/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable dir_runtimes_HGSOC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_timestamps_HGSOC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_outputs_HGSOC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule parse_BAM_files_HGSOC (line 303, /tmp/tmpbckp04rh/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable dir_runtimes_HGSOC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_timestamps_HGSOC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_outputs_HGSOC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_cellranger_HGSOC (line 339, /tmp/tmpbckp04rh/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable dir_runtimes_HGSOC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_timestamps_HGSOC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_data_cellranger_ref from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable dir_outputs_HGSOC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614636352.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "yh154/Pyup",
    "linting": "Lints for rule samtools_split_bam (line 26, /tmp/tmp4bb0maht/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_filter (line 53, /tmp/tmp4bb0maht/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_sort (line 86, /tmp/tmp4bb0maht/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 113, /tmp/tmp4bb0maht/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule umitools_dedup (line 136, /tmp/tmp4bb0maht/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_depth (line 160, /tmp/tmp4bb0maht/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule running_median (line 183, /tmp/tmp4bb0maht/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cat_roi (line 212, /tmp/tmp4bb0maht/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1585613284.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "rikenbit/scTensor-experiments",
    "linting": null,
    "stargazers_count": 0,
    "subscribers_count": 10,
    "topics": [],
    "updated_at": 1600673853.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "vitmy0000/SnaMP",
    "linting": "Lints for snakefile /tmp/tmpgkf3fk8c/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 87:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 96:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule mkdir (line 44, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule unzip (line 57, /tmp/tmpgkf3fk8c/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule join (line 77, /tmp/tmpgkf3fk8c/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable version from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * The version directive is deprecated:\n      It was meant for documenting tool version, but this has been replaced by\n      using the conda or container directive.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter (line 96, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable version from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * The version directive is deprecated:\n      It was meant for documenting tool version, but this has been replaced by\n      using the conda or container directive.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fq_2_fa (line 120, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable version from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * The version directive is deprecated:\n      It was meant for documenting tool version, but this has been replaced by\n      using the conda or container directive.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule strip (line 139, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule collapse (line 160, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable version from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * The version directive is deprecated:\n      It was meant for documenting tool version, but this has been replaced by\n      using the conda or container directive.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mkdb (line 179, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable version from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * The version directive is deprecated:\n      It was meant for documenting tool version, but this has been replaced by\n      using the conda or container directive.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule blast (line 201, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable version from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * The version directive is deprecated:\n      It was meant for documenting tool version, but this has been replaced by\n      using the conda or container directive.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule blast_parse (line 228, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_otu_table (line 244, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qc (line 264, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean (line 284, /tmp/tmpgkf3fk8c/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1488999657.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "J-81/isSwitch_ssDis_workflow",
    "linting": "Lints for snakefile /tmp/tmpj22o96bq/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule download_pdb_seqs (line 22, /tmp/tmpj22o96bq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_scop_ids (line 91, /tmp/tmpj22o96bq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule convert_scop_ids (line 116, /tmp/tmpj22o96bq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cluster_pdb (line 145, /tmp/tmpj22o96bq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule derive_cluster_from_scop (line 173, /tmp/tmpj22o96bq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cluster_msa (line 239, /tmp/tmpj22o96bq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_ssdis (line 273, /tmp/tmpj22o96bq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule process_ssdis (line 296, /tmp/tmpj22o96bq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ssdis_overlay (line 326, /tmp/tmpj22o96bq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule alignment_csv (line 355, /tmp/tmpj22o96bq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule assess_isSwitch (line 383, /tmp/tmpj22o96bq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule aggregate_isSwitch (line 500, /tmp/tmpj22o96bq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1595447996.0
  },
  {
    "data_format": 1,
    "description": "A small-but-real-ish example of spacegraphcats on a mock metagenome.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "spacegraphcats/spacegraphcats-twofoo-example",
    "linting": "ModuleNotFoundError in line 2 of /tmp/tmpc9pinpes/Snakefile:\nNo module named \u0027spacegraphcats\u0027\n  File \"/tmp/tmpc9pinpes/Snakefile\", line 2, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1606318204.0
  },
  {
    "data_format": 1,
    "description": "For designing RT primers with blast search, tm constraints, etc",
    "formatting": "[ERROR] In file \"/tmp/tmpkws3ejk7/Snakefile\":  \u0027NoParametersError: L37: In log definition.\u0027\n[INFO] In file \"/tmp/tmpkws3ejk7/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "bfairkun/design-mpeseq-primers",
    "linting": "Lints for rule MakeBlastDatabase (line 20, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule FastaIndex (line 41, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule DetermineLowcomplexityRegions (line 60, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule SortTargetSpliceSites (line 86, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule SortRepeatRegions (line 110, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule SortAnnotatedExons (line 153, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule SortRNASeq (line 196, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param GenomeFasta is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule CreateWindowsForCandidatePrimersFromTargetList (line 246, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule CreateAllCandidatePrimerSequencesFromWindows (line 277, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule FilterOutPrimersByTm (line 308, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule FilterOutPrimersThatOverlapRepetitiveRegions (line 337, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule BlastCandidatePrimers (line 367, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule CalculateExpressionOfBlastHits (line 400, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule InSilicoPredictionOfOnAndOffTargetCounts (line 425, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ScorePrimersAndPickTheBestForEachTarget (line 454, /tmp/tmpkws3ejk7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1562171066.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for processing small RNA-seq libaries",
    "formatting": "[WARNING] In file \"/tmp/tmpkbtziqkm/Snakefile\":  Keyword \"input\" at line 53 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmpkbtziqkm/Snakefile\":  \u0027AttributeError: \u0027NoneType\u0027 object has no attribute \u0027group\u0027\u0027\n[INFO] In file \"/tmp/tmpkbtziqkm/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "seb-mueller/snakemake_sRNAseq",
    "linting": "Lints for snakefile /tmp/tmpkbtziqkm/Snakefile:\n    * Path composition with \u0027+\u0027 in line 76:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 89:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 100:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 175:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule fastq_to_fasta (line 174, /tmp/tmpkbtziqkm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule star_se (line 267, /tmp/tmpkbtziqkm/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bowtie (line 462, /tmp/tmpkbtziqkm/Snakefile):\n    * Shell command directly uses variable reference from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable missmatches from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable multi_m from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable extra_params_bowtie from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule calccoverage (line 546, /tmp/tmpkbtziqkm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [
      "snakemake",
      "snakemake-workflows",
      "conda",
      "epigenetics",
      "small-rna"
    ],
    "updated_at": 1612789511.0
  },
  {
    "data_format": 1,
    "description": "Collection of functions for running/interacting with SHAPEIT from a python environment",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "hardingnj/snakeit",
    "linting": "ModuleNotFoundError in line 4 of /tmp/tmp29ul98f5/Snakefile:\nNo module named \u0027sh\u0027\n  File \"/tmp/tmp29ul98f5/Snakefile\", line 4, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1494257821.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "durrantmm/ISHunter",
    "linting": "Lints for rule all (line 22, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule filter_contigs (line 34, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule find_inverted_repeats (line 60, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter_contigs_inverted_repeats (line 89, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule blastx_contigs (line 114, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_genbank (line 142, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule ensure_genbank_dir (line 167, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule identify_transposases (line 182, /tmp/tmpd3chcrfa/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1502315546.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "mgildea87/RNAseq_PE_HISAT2_stringtie",
    "linting": "Lints for rule fastqc (line 39, /tmp/tmpsx1ennoy/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule trim (line 63, /tmp/tmpsx1ennoy/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule align (line 97, /tmp/tmpsx1ennoy/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule count (line 132, /tmp/tmpsx1ennoy/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule deseq_prep (line 163, /tmp/tmpsx1ennoy/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1610383451.0
  },
  {
    "data_format": 1,
    "description": "Snakemake 16S workflow for analyzing Swift Amplicon 16S\u2122+ITS Panel data using mothur phylotype-based approach.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "wclose/Swift_Mothur16SITS_2019",
    "linting": "AttributeError in line 106 of /tmp/tmpurf7sj1c/Snakefile:\ninvalid name for input, output, wildcard, params or log: count is reserved for internal use\n  File \"/tmp/tmpurf7sj1c/Snakefile\", line 106, in \u003cmodule\u003e\n",
    "stargazers_count": 0,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1587482954.0
  },
  {
    "data_format": 1,
    "description": "Integrated workflow for SV calling from single-cell Strand-seq data",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "friendsofstrandseq/pipeline",
    "linting": "IndexError in line 362 of /tmp/tmputogo8gw/Snakefile:\nlist index out of range\n  File \"/tmp/tmputogo8gw/Snakefile\", line 362, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 8,
    "topics": [],
    "updated_at": 1607095752.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "fbartusch/snakemake_tutorial",
    "linting": "PermissionError in line 2 of /tmp/tmpjz4eujjq/Snakefile:\n[Errno 13] Permission denied: \u0027/scif\u0027\n  File \"/tmp/tmpjz4eujjq/Snakefile\", line 2, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 225, in makedirs\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1555340554.0
  },
  {
    "data_format": 1,
    "description": "Creating a variant calling pipeline ",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "LandiMi2/Variant_Calling_Project-",
    "linting": "Lints for rule sort_bam (line 157, /tmp/tmp6s2t8w0w/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bam_index (line 176, /tmp/tmp6s2t8w0w/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule removal_deduplication (line 197, /tmp/tmp6s2t8w0w/Snakefile):\n    * Param sam_index is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule ref_samtools_index (line 261, /tmp/tmp6s2t8w0w/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule Create_Ref_Dictonary (line 283, /tmp/tmp6s2t8w0w/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n\nLints for rule Index_Feature_File (line 312, /tmp/tmp6s2t8w0w/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule AddOrReplaceReadGroups (line 336, /tmp/tmp6s2t8w0w/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule BaseRecalibrator (line 362, /tmp/tmp6s2t8w0w/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ApplyBQSR (line 391, /tmp/tmp6s2t8w0w/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule HaplotypeCaller (line 415, /tmp/tmp6s2t8w0w/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1599728428.0
  },
  {
    "data_format": 1,
    "description": "Snakemake-based pipeline for analyzing the V4 region of the 16S rRNA gene with mothur.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "wclose/mothurPipeline",
    "linting": "AttributeError in line 129 of /tmp/tmpn52cs0my/Snakefile:\ninvalid name for input, output, wildcard, params or log: count is reserved for internal use\n  File \"/tmp/tmpn52cs0my/Snakefile\", line 129, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1597680449.0
  },
  {
    "data_format": 1,
    "description": "Snakemake rules for parallel QC of shotgun data",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "tanaes/snakemake_shotqual",
    "linting": "KeyError in line 7 of /tmp/tmp6sn7n5x9/Snakefile:\n\u0027TMP_DIR_ROOT\u0027\n  File \"/tmp/tmp6sn7n5x9/Snakefile\", line 7, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1526361916.0
  },
  {
    "data_format": 1,
    "description": "Rules for CASINO tasks",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Konjkov/QMC-snakemake-workflow",
    "linting": "WorkflowError in line 8 of /tmp/tmp3e1h2oxy/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmp3e1h2oxy/Snakefile\", line 8, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1567920794.0
  },
  {
    "data_format": 1,
    "description": "A workflow for some simple Mass spectrometry QC.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "KeepCalmAndRushB/QCSlowPipeline",
    "linting": "Lints for rule copy_raw_file (line 26, /tmp/tmpa8vdmj5b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule prepare_max_quant_analysis (line 42, /tmp/tmpa8vdmj5b/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param adir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule run_max_quant_analysis (line 67, /tmp/tmpa8vdmj5b/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable maxquant_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule extract_qc_metrics (line 88, /tmp/tmpa8vdmj5b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule add_metrics_to_database (line 112, /tmp/tmpa8vdmj5b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1555575202.0
  },
  {
    "data_format": 1,
    "description": "AMBIC Epigenomics project analysis",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "timplab/ambic-epigenome",
    "linting": "PermissionError in line 7 of /tmp/tmpsx8he_cd/Snakefile:\n[Errno 13] Permission denied: \u0027/home/[user]\u0027\n  File \"/tmp/tmpsx8he_cd/Snakefile\", line 7, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 225, in makedirs\n",
    "stargazers_count": 1,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1603387944.0
  },
  {
    "data_format": 1,
    "description": "snakemake files of the tuxedo v2 pipeline from Pertea et al 2016",
    "formatting": "[WARNING] In file \"/tmp/tmpz1i_qya8/Snakefile\":  Keyword \"input\" at line 70 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jlanga/smsk_tuxedo2",
    "linting": "/tmp/tmpz1i_qya8/Snakefile:12: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.\n  params = yaml.load(open(\"params.yml\", \"r\"))\n/tmp/tmpz1i_qya8/Snakefile:13: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.\n  features = yaml.load(open(\"features.yml\", \"r\"))\nAttributeError in line 21 of /tmp/tmpz1i_qya8/src/snakefiles/raw.py:\ninvalid name for input, output, wildcard, params or log: reverse is reserved for internal use\n  File \"/tmp/tmpz1i_qya8/Snakefile\", line 26, in \u003cmodule\u003e\n  File \"/tmp/tmpz1i_qya8/src/snakefiles/raw.py\", line 21, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [
      "snakemake",
      "tuxedo2",
      "samtools",
      "hisat2",
      "stringtie",
      "ballgown",
      "rskittlebrewer",
      "r",
      "smsk",
      "differential",
      "expression",
      "rnaseq",
      "rna-seq",
      "conda",
      "conda-environment"
    ],
    "updated_at": 1557312196.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dgag0811/Snakemake-Diamond-Megan",
    "linting": "Lints for rule align (line 3, /tmp/tmpoxrhft5x/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule view (line 25, /tmp/tmpoxrhft5x/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule daa2rma (line 47, /tmp/tmpoxrhft5x/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule rma2info (line 66, /tmp/tmpoxrhft5x/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1578419055.0
  },
  {
    "data_format": 1,
    "description": "A Snakemake pipeline for RRBS data analysis",
    "formatting": "[ERROR] In file \"/tmp/tmptzw74foe/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 3:10: benchmark:\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmptzw74foe/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "ftabaro/MethylSnake",
    "linting": "KeyError in line 3 of /tmp/tmptzw74foe/Snakefile:\n\u0027singularity_container\u0027\n  File \"/tmp/tmptzw74foe/Snakefile\", line 3, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [
      "bioinformatics-pipeline",
      "methylation",
      "rrbs-pipeline",
      "snakemake",
      "rrbs-data-analysis"
    ],
    "updated_at": 1613445122.0
  },
  {
    "data_format": 1,
    "description": "Example workflow using snakemake",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "panoptes-organization/snakemake_example_workflow",
    "linting": "Lints for rule merge_results (line 129, /tmp/tmpq0774kjs/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1603918413.0
  },
  {
    "data_format": 1,
    "description": "A basic boilerplate structure for snakemake based pipelines.",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "codingene/snakemake-base",
    "linting": "Lints for rule fastqc (line 1, /tmp/tmpfgptfvdv/rules/pre-align-qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 1,
    "subscribers_count": 0,
    "topics": [
      "snakemake",
      "conda",
      "codingene"
    ],
    "updated_at": 1592542294.0
  },
  {
    "data_format": 1,
    "description": "snakemake pipeline to generate art_illumina profiles from public datasets",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "hzi-bifo/art_illumina_profiles",
    "linting": "Lints for snakefile /tmp/tmpts9bmiub/Snakefile:\n    * Path composition with \u0027+\u0027 in line 27:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 27:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule samtools_bam2fq_separate (line 72, /tmp/tmpts9bmiub/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 1,
    "subscribers_count": 5,
    "topics": [],
    "updated_at": 1589987504.0
  },
  {
    "data_format": 1,
    "description": "Kallisto Bus for 10X",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "kevinrue/snakemake_kallisto_10x",
    "linting": "Lints for snakefile /tmp/tmpzfadcokn/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 8.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpzfadcokn/workflow/rules/kallisto.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1592919803.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "limbo1996/GATK-snakemake-pipeline",
    "linting": "SyntaxError in line 16 of /tmp/tmprk96crb5/Snakefile:\ninvalid syntax\n",
    "stargazers_count": 1,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1598956758.0
  },
  {
    "data_format": 1,
    "description": "A snakemake workflow for the OrthoEvol python package.",
    "formatting": "[ERROR] In file \"/tmp/tmpx112p856/Snakefile\":  \u0027NoParametersError: L8: In input definition.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 2 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "datasnakes/orthoevol-snakemake",
    "linting": "ModuleNotFoundError in line 2 of /tmp/tmpx112p856/rules/setup.smk:\nNo module named \u0027OrthoEvol\u0027\n  File \"/tmp/tmpx112p856/Snakefile\", line 8, in \u003cmodule\u003e\n  File \"/tmp/tmpx112p856/rules/setup.smk\", line 2, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 2,
    "topics": [
      "snakemake",
      "snakemake-workflow",
      "snakemake-pipelines",
      "orthology-inference",
      "orthoevol"
    ],
    "updated_at": 1562624607.0
  },
  {
    "data_format": 1,
    "description": "A Snakemake workflow for the chain of models approach to hydrologic modeling",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jhamman/chains",
    "linting": "ModuleNotFoundError in line 11 of /tmp/tmp84n34lwj/Snakefile:\nNo module named \u0027xarray\u0027\n  File \"/tmp/tmp84n34lwj/Snakefile\", line 11, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1568320138.0
  },
  {
    "data_format": 1,
    "description": "Example Nextstrain workflow based on public SARS-CoV-2 sequences from GenBank",
    "formatting": "[INFO] 2 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "huddlej/example-nextstrain-workflow",
    "linting": null,
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1592354008.0
  },
  {
    "data_format": 1,
    "description": "Workflow for transcript expression analysis",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "AntonieV/fprdg1",
    "linting": "The flag \u0027directory\u0027 used in rule svg_pdf is only valid for outputs, not inputs.\nLints for rule kallisto_idx (line 30, /tmp/tmplkn97bpd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule kallisto_quant (line 53, /tmp/tmplkn97bpd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sleuth (line 83, /tmp/tmplkn97bpd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule gage (line 110, /tmp/tmplkn97bpd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule pizzly (line 135, /tmp/tmplkn97bpd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule pizzly_flatten (line 168, /tmp/tmplkn97bpd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule pizzly_fragment_length (line 187, /tmp/tmplkn97bpd/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule volcano (line 213, /tmp/tmplkn97bpd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule heatmap (line 238, /tmp/tmplkn97bpd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule pca (line 268, /tmp/tmplkn97bpd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule boxen_plot (line 291, /tmp/tmplkn97bpd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule p_value_hist (line 314, /tmp/tmplkn97bpd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule strip_plot (line 337, /tmp/tmplkn97bpd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule svg_pdf (line 363, /tmp/tmplkn97bpd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1610511505.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for processing pdx exome data.",
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jrderuiter/snakemake-pdx-exome",
    "linting": "Lints for snakefile /tmp/tmpop98egj7/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpop98egj7/rules/input.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpop98egj7/rules/alignment.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule copy_input (line 43, /tmp/tmpop98egj7/rules/input.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_merge (line 85, /tmp/tmpop98egj7/rules/alignment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule disambiguate (line 113, /tmp/tmpop98egj7/rules/alignment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sambamba_sort (line 144, /tmp/tmpop98egj7/rules/alignment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 201, /tmp/tmpop98egj7/rules/alignment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule freebayes (line 3, /tmp/tmpop98egj7/rules/freebayes.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n\nLints for rule fastqc (line 38, /tmp/tmpop98egj7/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_stats (line 63, /tmp/tmpop98egj7/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1517246502.0
  },
  {
    "data_format": 1,
    "description": "snakemake snp calling pipeline based on freebayes",
    "formatting": "[WARNING] In file \"/tmp/tmp5o5_uc9h/Snakefile\":  Keyword \"input\" at line 30 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dwheelerau/snakemake-snp",
    "linting": "SyntaxError:\nNot all output, log and benchmark files of rule sample_qc contain the same wildcards. This is crucial though, in order to avoid that two or more jobs write to the same file.\n  File \"/tmp/tmp5o5_uc9h/Snakefile\", line 97, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1563507584.0
  },
  {
    "data_format": 1,
    "description": "Snakemake Workflow For WGBS Data",
    "formatting": "[WARNING] In file \"/tmp/tmp52ptnce4/Snakefile\":  Keyword \"input\" at line 59 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "vari-bbc/WGBS_Biscuit_Snakemake",
    "linting": "Lints for snakefile /tmp/tmp52ptnce4/Snakefile:\n    * Absolute path \"/secondary/projects/bbc/research/shared_snakemake/rules/fastq_qc/fastq_lengths\" in line 13:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule rename_fastq (line 70, /tmp/tmp52ptnce4/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule trim_galore (line 102, /tmp/tmp52ptnce4/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule biscuit_align (line 174, /tmp/tmp52ptnce4/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param unmapped is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule biscuit_pileup (line 280, /tmp/tmp52ptnce4/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule biscuit_mergecg (line 355, /tmp/tmp52ptnce4/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule biscuit_qc (line 414, /tmp/tmp52ptnce4/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule multiQC (line 502, /tmp/tmp52ptnce4/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1613418166.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmprismja67/Snakefile\":  Keyword \"input\" at line 9 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ctmrbio/mgi-ncov19-snakemake",
    "linting": "Lints for rule coverage_bwa_filter (line 415, /tmp/tmprismja67/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule coverage_samtools (line 461, /tmp/tmprismja67/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 5,
    "topics": [],
    "updated_at": 1594914099.0
  },
  {
    "data_format": 1,
    "description": "A simple Snakemake workflow to perform network analyses using the Python Geneset Network Analysis (PyGNA) package.",
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "stracquadaniolab/workflow-pygna",
    "linting": "Lints for snakefile /tmp/tmpbvc2mjgh/Snakefile:\n    * Path composition with \u0027+\u0027 in line 26:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpbvc2mjgh/rules/pygna.smk:\n    * Path composition with \u0027+\u0027 in line 29:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 43:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 59:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 73:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 87:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 102:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 118:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 134:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 150:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 166:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 181:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule generate_matrix_sp (line 6, /tmp/tmpbvc2mjgh/rules/pygna.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule generate_matrix_rwr (line 28, /tmp/tmpbvc2mjgh/rules/pygna.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule topology_module (line 50, /tmp/tmpbvc2mjgh/rules/pygna.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule topology_internal_degree (line 79, /tmp/tmpbvc2mjgh/rules/pygna.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule topology_total_degree (line 107, /tmp/tmpbvc2mjgh/rules/pygna.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule topology_sp (line 135, /tmp/tmpbvc2mjgh/rules/pygna.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule topology_rwr (line 164, /tmp/tmpbvc2mjgh/rules/pygna.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule association_RW (line 193, /tmp/tmpbvc2mjgh/rules/pygna.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule association_SP (line 224, /tmp/tmpbvc2mjgh/rules/pygna.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule comparison_RW (line 255, /tmp/tmpbvc2mjgh/rules/pygna.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule comparison_SP (line 286, /tmp/tmpbvc2mjgh/rules/pygna.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule within_comparison_RW (line 318, /tmp/tmpbvc2mjgh/rules/pygna.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule within_comparison_SP (line 348, /tmp/tmpbvc2mjgh/rules/pygna.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_topology_module (line 7, /tmp/tmpbvc2mjgh/rules/pygna_visualise.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_topology_internal_degree (line 26, /tmp/tmpbvc2mjgh/rules/pygna_visualise.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_topology_total_degree (line 45, /tmp/tmpbvc2mjgh/rules/pygna_visualise.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_topology_sp (line 64, /tmp/tmpbvc2mjgh/rules/pygna_visualise.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_topology_rwr (line 83, /tmp/tmpbvc2mjgh/rules/pygna_visualise.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_within_comparison_rwr (line 102, /tmp/tmpbvc2mjgh/rules/pygna_visualise.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_within_comparison_sp (line 121, /tmp/tmpbvc2mjgh/rules/pygna_visualise.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_association_rwr (line 140, /tmp/tmpbvc2mjgh/rules/pygna_visualise.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_association_sp (line 159, /tmp/tmpbvc2mjgh/rules/pygna_visualise.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1593442526.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline for paired-end sanger sequences of 16s rRNA",
    "formatting": "[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "matrs/16s-rRNA-Sanger",
    "linting": "Wildcard constraints in inputs are ignored.\nLints for rule abi_to_fastq (line 2, /tmp/tmpl5vau7rp/rules/abi_to_fastq.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fastqc_pre (line 1, /tmp/tmpl5vau7rp/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule qual_trim (line 21, /tmp/tmpl5vau7rp/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fastqc_post (line 41, /tmp/tmpl5vau7rp/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule merger_quality (line 89, /tmp/tmpl5vau7rp/rules/qc.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule reverse_complement (line 1, /tmp/tmpl5vau7rp/rules/merge.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_fastq (line 20, /tmp/tmpl5vau7rp/rules/merge.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule blastn (line 1, /tmp/tmpl5vau7rp/rules/blast.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule blast_top (line 35, /tmp/tmpl5vau7rp/rules/blast.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule seqmatch (line 1, /tmp/tmpl5vau7rp/rules/rdp.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule classifier (line 28, /tmp/tmpl5vau7rp/rules/rdp.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule genus_list (line 53, /tmp/tmpl5vau7rp/rules/rdp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ncbi_tree (line 72, /tmp/tmpl5vau7rp/rules/rdp.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1600235906.0
  },
  {
    "data_format": 1,
    "description": "Pipeline running \u0027salmon alevin\u0027 for CITE-seq data",
    "formatting": "[INFO] 2 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "kevinrue/snakemake_alevin_citeseq_tutorial",
    "linting": "Lints for snakefile /tmp/tmp98ou82qc/workflow/Snakefile:\n    * Absolute path \"/alevin/quants_mat.gz\" in line 24:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/alevin/quants_mat.gz\" in line 55:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/alevin/quants_mat.gz\" in line 87:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule alevin_rna (line 25, /tmp/tmp98ou82qc/workflow/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule alevin_adt (line 84, /tmp/tmp98ou82qc/workflow/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule alevin_hto (line 142, /tmp/tmp98ou82qc/workflow/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1592323315.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "sraorao/snakemake_code_clinic",
    "linting": "Lints for snakefile /tmp/tmp5f5mdezq/Snakefile:\n    * Absolute path \"/home/srao/PycharmProjects/snakemake_cc\" in line 2:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule count_words (line 6, /tmp/tmp5f5mdezq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule count_reduplicated_words (line 27, /tmp/tmp5f5mdezq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule count_lines (line 62, /tmp/tmp5f5mdezq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_counts (line 98, /tmp/tmp5f5mdezq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule generate_data_files (line 119, /tmp/tmp5f5mdezq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1606139625.0
  },
  {
    "data_format": 1,
    "description": "Extended genecatalog workflow for metagenome-atlas",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "metagenome-atlas/genecatalog_atlas",
    "linting": "KeyError in line 6 of /tmp/tmpo28am77x/rules/clustering.smk:\n\u0027input_faa\u0027\n  File \"/tmp/tmpo28am77x/Snakefile\", line 35, in \u003cmodule\u003e\n  File \"/tmp/tmpo28am77x/rules/clustering.smk\", line 6, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1592410796.0
  },
  {
    "data_format": 1,
    "description": "A computational method to generate causal explanations for proteomic profiles using prior mechanistic knowledge in the literature, as recorded in cellular pathway maps. ",
    "formatting": "[INFO] 2 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ohsu-cedar-comp-hub/causal-path-pipeline",
    "linting": "FileNotFoundError in line 16 of /tmp/tmp5lyy9bg2/Snakefile:\n[Errno 2] No such file or directory: \u0027/home/groups/CEDAR/estabroj/experiments/causal-path-pipeline/data/JE_modified_meta.txt\u0027\n  File \"/tmp/tmp5lyy9bg2/Snakefile\", line 16, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 610, in read_csv\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 1,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1613583007.0
  },
  {
    "data_format": 1,
    "description": "snakemake workflows for processing TCGA RNA-Seq data for the CAMDA2019 challenge",
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "skurscheid/camda2019-workflows",
    "linting": "FileNotFoundError in line 28 of /tmp/tmpn5rqg6as/Snakefile:\n[Errno 2] No such file or directory: \u0027kirc_ids.tsv\u0027\n  File \"/tmp/tmpn5rqg6as/Snakefile\", line 28, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 610, in read_csv\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1611071862.0
  },
  {
    "data_format": 1,
    "description": "Template for running mikRopML with Snakemake",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "SchlossLab/mikropml-snakemake-workflow",
    "linting": "Lints for rule preprocess_data (line 23, /tmp/tmpjpgecxab/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule run_ml (line 59, /tmp/tmpjpgecxab/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_results (line 100, /tmp/tmpjpgecxab/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_hp_performance (line 128, /tmp/tmpjpgecxab/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine_benchmarks (line 156, /tmp/tmpjpgecxab/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_performance (line 180, /tmp/tmpjpgecxab/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_hp_performance (line 204, /tmp/tmpjpgecxab/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_benchmarks (line 228, /tmp/tmpjpgecxab/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule render_report (line 252, /tmp/tmpjpgecxab/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean (line 286, /tmp/tmpjpgecxab/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 3,
    "topics": [
      "snakemake",
      "machine-learning",
      "rstats"
    ],
    "updated_at": 1614290946.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline for Illumina RNA-sequencing experiments, including variant calling and more - relating to pop gen and insecticide resistance",
    "formatting": "[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "sanjaynagi/rna-seq-ir",
    "linting": "WorkflowError in line 11 of /tmp/tmpm5hczkq4/workflow/Snakefile:\nConfig file config/config.yaml not found.\n  File \"/tmp/tmpm5hczkq4/workflow/Snakefile\", line 11, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [
      "snakemake-workflow",
      "rna-seq",
      "variant-calling",
      "differential-expression",
      "population-genomics",
      "snakemake",
      "transcriptomics"
    ],
    "updated_at": 1614608489.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "steveped/snakemake_rnaseq_se",
    "linting": "Lints for snakefile /tmp/tmpo_icb9nw/Snakefile:\n    * Path composition with \u0027+\u0027 in line 15:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 4:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 15:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpo_icb9nw/rules/trimming.smk:\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpo_icb9nw/rules/qc.smk:\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpo_icb9nw/rules/staralign.smk:\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule make_rulegraph (line 1, /tmp/tmpo_icb9nw/rules/rulegraph.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule index_bam (line 37, /tmp/tmpo_icb9nw/rules/staralign.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule count (line 1, /tmp/tmpo_icb9nw/rules/count.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule make_rproj (line 26, /tmp/tmpo_icb9nw/rules/workflowr.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1610515548.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmp2g5lrkpk/rules/qc.smk\":  Keyword \"params\" at line 39 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp2g5lrkpk/rules/qc.smk\":  Keyword \"input\" at line 101 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp2g5lrkpk/rules/dimensionReduct.smk\":  Keyword \"params\" at line 76 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp2g5lrkpk/rules/clustering.smk\":  Keyword \"input\" at line 130 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp2g5lrkpk/rules/normalization.smk\":  Keyword \"input\" at line 50 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp2g5lrkpk/rules/batchRm.smk\":  Keyword \"output\" at line 14 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp2g5lrkpk/rules/batchRm.smk\":  Keyword \"input\" at line 38 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp2g5lrkpk/rules/batchRm.smk\":  Keyword \"output\" at line 44 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp2g5lrkpk/rules/batchRm.smk\":  Keyword \"input\" at line 151 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 16 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "lybird300/single_cell_rna_seq_snakemake",
    "linting": "FileNotFoundError in line 9 of /tmp/tmp2g5lrkpk/Snakefile:\n[Errno 2] No such file or directory: \u0027config/samples_GEJ_IM.txt\u0027\n  File \"/tmp/tmp2g5lrkpk/Snakefile\", line 9, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 689, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614344182.0
  },
  {
    "data_format": 1,
    "description": "BIDS app to facilitate determining which set of experimental confounds to include in a standard task-based fMRI GLM analysis.",
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "switt4/confounder-snakemake",
    "linting": "ModuleNotFoundError in line 4 of /tmp/tmpk66zjkpz/Snakefile:\nNo module named \u0027bids\u0027\n  File \"/tmp/tmpk66zjkpz/Snakefile\", line 4, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1597222665.0
  },
  {
    "data_format": 1,
    "description": "atlas extension for phage discovery",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "metagenome-atlas/virome_atlas",
    "linting": "KeyError in line 8 of /tmp/tmp72v_rvjz/rules/vibrant.smk:\n\u0027database_dir\u0027\n  File \"/tmp/tmp72v_rvjz/Snakefile\", line 3, in \u003cmodule\u003e\n  File \"/tmp/tmp72v_rvjz/rules/vibrant.smk\", line 8, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1588054541.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "metagenome-atlas/plasmid_atlas",
    "linting": "FileNotFoundError in line 21 of /tmp/tmpb_8bcw6m/rules/sample_table.smk:\n[Errno 2] No such file or directory: \u0027samples.tsv\u0027\n  File \"/tmp/tmpb_8bcw6m/Snakefile\", line 14, in \u003cmodule\u003e\n  File \"/tmp/tmpb_8bcw6m/rules/spades.smk\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpb_8bcw6m/rules/sample_table.smk\", line 26, in \u003cmodule\u003e\n  File \"/tmp/tmpb_8bcw6m/rules/sample_table.smk\", line 21, in load_sample_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 610, in read_csv\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1588839730.0
  },
  {
    "data_format": 1,
    "description": "A snakemake workflow to perform Alternative Splicing analysis from RNA-Seq with SUPPA2.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "AngryMaciek/snakemake_suppa2",
    "linting": "KeyError in line 31 of /tmp/tmp3lw7pk6m/Snakefile:\n\u0027result_dir\u0027\n  File \"/tmp/tmp3lw7pk6m/Snakefile\", line 31, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [
      "snakemake-pipeline",
      "rna-seq",
      "alternative-splicing"
    ],
    "updated_at": 1593795916.0
  },
  {
    "data_format": 1,
    "description": "High throughput Next Generation Sequencing (NGS) data analysis using Python 3 Snakemake",
    "formatting": "[ERROR] In file \"/tmp/tmpsd_l2dor/Snakefile\":  \u0027InvalidParameterSyntax: 87\"~/ miniconda2/ bin/ featureCounts- a genome/ gencode. v32. annotation. gtf- o{ output. counts}{ input. bam}- T{ threads}\n\n\u0027\n[INFO] In file \"/tmp/tmpsd_l2dor/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "ACSoupir/SnakeMake",
    "linting": "SyntaxError in line 88 of /tmp/tmpsd_l2dor/Snakefile:\nEOL while scanning string literal\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1608092170.0
  },
  {
    "data_format": 1,
    "description": "WORK IN PROGRESS!",
    "formatting": "[ERROR] In file \"/tmp/tmpvedap0tm/rules/analysis.smk\":  \u0027NoParametersError: L25: In log definition.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 8 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "lachlandeer/snakemake-econ-python",
    "linting": "Lints for snakefile /tmp/tmpvedap0tm/Snakefile:\n    * Path composition with \u0027+\u0027 in line 27:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpvedap0tm/rules/paper.smk:\n    * Path composition with \u0027+\u0027 in line 25:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpvedap0tm/rules/slides.smk:\n    * Path composition with \u0027+\u0027 in line 10:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule clean_all (line 45, /tmp/tmpvedap0tm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule help_main (line 60, /tmp/tmpvedap0tm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule gen_regression_vars (line 7, /tmp/tmpvedap0tm/rules/data_mgt.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule rename_vars (line 35, /tmp/tmpvedap0tm/rules/data_mgt.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ols_model (line 21, /tmp/tmpvedap0tm/rules/analysis.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule figures (line 19, /tmp/tmpvedap0tm/rules/figures.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule paper2root (line 21, /tmp/tmpvedap0tm/rules/paper.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_pdf (line 41, /tmp/tmpvedap0tm/rules/paper.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slides2root (line 8, /tmp/tmpvedap0tm/rules/slides.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_slides (line 27, /tmp/tmpvedap0tm/rules/slides.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule pdf_clean (line 68, /tmp/tmpvedap0tm/rules/slides.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean_output (line 7, /tmp/tmpvedap0tm/rules/clean.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean_log (line 19, /tmp/tmpvedap0tm/rules/clean.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dag (line 8, /tmp/tmpvedap0tm/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filegraph (line 29, /tmp/tmpvedap0tm/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule rulegraph (line 49, /tmp/tmpvedap0tm/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule rulegraph_to_png (line 69, /tmp/tmpvedap0tm/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule graphviz (line 92, /tmp/tmpvedap0tm/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule graphviz_mac (line 104, /tmp/tmpvedap0tm/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule install_poppler (line 116, /tmp/tmpvedap0tm/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule help_analysis (line 6, /tmp/tmpvedap0tm/rules/help.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule help_data_mgt (line 21, /tmp/tmpvedap0tm/rules/help.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule help_figures (line 36, /tmp/tmpvedap0tm/rules/help.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule help_paper (line 51, /tmp/tmpvedap0tm/rules/help.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule help_slides (line 66, /tmp/tmpvedap0tm/rules/help.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule help_tables (line 81, /tmp/tmpvedap0tm/rules/help.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1609866020.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "kipkurui/snakemake-demo",
    "linting": "Lints for snakefile /tmp/tmpje1thg3s/Snakefile:\n    * Path composition with \u0027+\u0027 in line 1:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule quantify_genes (line 13, /tmp/tmpje1thg3s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule collate_outputs (line 34, /tmp/tmpje1thg3s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1563092837.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for evaluating varlociraptor",
    "formatting": "[INFO] 16 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "varlociraptor/varlociraptor-evaluation",
    "linting": "Lints for snakefile /tmp/tmp3crtfslp/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp3crtfslp/rules/mapping.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp3crtfslp/rules/lancet.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 16:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp3crtfslp/rules/neusomatic.smk:\n    * Deprecated singularity directive used for container definition in line 26.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp3crtfslp/rules/varlociraptor.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp3crtfslp/rules/eval.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 9:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule prepare_bam (line 7, /tmp/tmp3crtfslp/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bam2fq (line 34, /tmp/tmp3crtfslp/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bwa_index (line 60, /tmp/tmp3crtfslp/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_sort (line 142, /tmp/tmp3crtfslp/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 198, /tmp/tmp3crtfslp/rules/mapping.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule delly_concat (line 39, /tmp/tmp3crtfslp/rules/delly.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule delly_samples (line 63, /tmp/tmp3crtfslp/rules/delly.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule delly_adhoc (line 81, /tmp/tmp3crtfslp/rules/delly.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule build_lancet (line 1, /tmp/tmp3crtfslp/rules/lancet.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fix_lancet (line 102, /tmp/tmp3crtfslp/rules/lancet.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule merge_lancet (line 127, /tmp/tmp3crtfslp/rules/lancet.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule lancet_adhoc (line 155, /tmp/tmp3crtfslp/rules/lancet.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule manta_raw (line 51, /tmp/tmp3crtfslp/rules/manta.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule manta_default (line 75, /tmp/tmp3crtfslp/rules/manta.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule manta_adhoc (line 103, /tmp/tmp3crtfslp/rules/manta.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule strelka_default (line 51, /tmp/tmp3crtfslp/rules/strelka.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule strelka_adhoc (line 80, /tmp/tmp3crtfslp/rules/strelka.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_region_bed (line 1, /tmp/tmp3crtfslp/rules/neusomatic.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fix_neusomatic (line 101, /tmp/tmp3crtfslp/rules/neusomatic.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule neusomatic_adhoc (line 131, /tmp/tmp3crtfslp/rules/neusomatic.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule novobreak_adhoc (line 38, /tmp/tmp3crtfslp/rules/novobreak.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule novobreak_all (line 62, /tmp/tmp3crtfslp/rules/novobreak.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bpi_convert (line 41, /tmp/tmp3crtfslp/rules/bpi.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bpi_adhoc (line 65, /tmp/tmp3crtfslp/rules/bpi.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule varlociraptor_call (line 20, /tmp/tmp3crtfslp/rules/varlociraptor.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule varlociraptor_merge (line 72, /tmp/tmp3crtfslp/rules/varlociraptor.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule varlociraptor_filter_by_odds (line 96, /tmp/tmp3crtfslp/rules/varlociraptor.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule varlociraptor_control_fdr (line 120, /tmp/tmp3crtfslp/rules/varlociraptor.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule adhoc_varlociraptor (line 148, /tmp/tmp3crtfslp/rules/varlociraptor.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule adhoc_filter (line 1, /tmp/tmp3crtfslp/rules/adhoc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule annotate_truth (line 7, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule match_varlociraptor_calls (line 44, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule match_other_calls (line 75, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule truth_to_tsv (line 106, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule varlociraptor_calls_to_tsv (line 154, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule varlociraptor_all_calls_to_tsv (line 183, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule other_calls_to_tsv (line 212, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule obtain_tp_fp (line 248, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_precision_recall (line 307, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_allelefreq_recall (line 346, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_fdr (line 379, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_allelefreq (line 410, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_allelefreq_scatter (line 440, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_score_dist (line 470, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_softclips (line 499, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule concordance_match (line 523, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule aggregate_concordance (line 558, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule concordance_to_tsv (line 589, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_concordance_upset (line 619, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_concordance (line 650, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule lancet_frequencies (line 680, /tmp/tmp3crtfslp/rules/eval.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule depth (line 31, /tmp/tmp3crtfslp/rules/stats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule svg2pdf (line 1, /tmp/tmp3crtfslp/rules/tools.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule index_bcf (line 128, /tmp/tmp3crtfslp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule rank_fps (line 152, /tmp/tmp3crtfslp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule testcase (line 182, /tmp/tmp3crtfslp/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 1,
    "subscribers_count": 2,
    "topics": [
      "snakemake",
      "workflow",
      "reproducible-research"
    ],
    "updated_at": 1588121769.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "j2moreno/biobakery",
    "linting": "Lints for snakefile /tmp/tmpvyh14m03/Snakefile:\n    * Absolute path \"/shares/hii/images/morenoj/biobakery/test.simg\" in line 5:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/shares/hii/sw/singularity/latest/bin/singularity exec \" in line 7:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/shares/hii/sw/bowtie2/2.2.9/bin/bowtie2\" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/shares/hii/sw/bowtie2/2.2.9/bin/bowtie2-build\" in line 11:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/shares/hii/sw/bowtie2/2.2.9/bin\" in line 13:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/shares/hii/data/bt2/GRCh38\" in line 22:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/shares/hii/bioinfo/ref/biobakery-workflows/humann2/chocophlan\" in line 23:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/shares/hii/bioinfo/ref/biobakery-workflows/humann2/uniref\" in line 24:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/shares/hii/bioinfo/ref/biobakery-workflows/humann2/utility_mapping/map_level4ec_uniref90.txt.gz\" in line 25:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 4:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule kneaddata (line 42, /tmp/tmpvyh14m03/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable BOWTIE_GRCH38_BUILD from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable BOWTIE_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable TRIMMOMATIC_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param directory is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule kneaddata_post_processing (line 88, /tmp/tmpvyh14m03/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable KNEADDATA_LOGS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule metaphlan (line 122, /tmp/tmpvyh14m03/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable METAPHLAN_PY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable BOWTIE2_EXEC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable BOWTIE2_BUILD from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule metaphlan_post_processing (line 155, /tmp/tmpvyh14m03/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable METAPHLAN_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule humann (line 181, /tmp/tmpvyh14m03/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable BOWTIE_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable METAPHLAN_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable NUCLEO_DB from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable PROTEIN_DB from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param directory is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule huamnn_post_processing (line 224, /tmp/tmpvyh14m03/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable UTILITY_MAPPING from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SINGULARITY from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1538959919.0
  },
  {
    "data_format": 1,
    "description": "deepvariant snakemake wrapper",
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "tetsuro90/snakemake-deepvariant",
    "linting": "WorkflowError in line 11 of /tmp/tmp9htekgsy/workflow/rules/common.smk:\nConfig file config.yaml not found.\n  File \"/tmp/tmp9htekgsy/workflow/Snakefile\", line 2, in \u003cmodule\u003e\n  File \"/tmp/tmp9htekgsy/workflow/rules/common.smk\", line 11, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1611601961.0
  },
  {
    "data_format": 1,
    "description": "Workflow for MAG construction",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "WatsonLab/GoogleMAGs",
    "linting": "Lints for snakefile /tmp/tmpwiazsjpc/Snakefile:\n    * Absolute path \"/bin/bash\" in line 1:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule download (line 16, /tmp/tmpwiazsjpc/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cutadapt (line 39, /tmp/tmpwiazsjpc/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule megahit (line 63, /tmp/tmpwiazsjpc/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bwa_index (line 90, /tmp/tmpwiazsjpc/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param idx is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule bwa_mem (line 118, /tmp/tmpwiazsjpc/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 1,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1580245202.0
  },
  {
    "data_format": 1,
    "description": "Perform Cytoscans/Oncoscans CNV analysis with EaCoN",
    "formatting": "[INFO] 4 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "tdayris/cel-cnv-eacon",
    "linting": "WorkflowError in line 18 of /tmp/tmpupzb12uj/rules/common.smk:\nError validating config file.\nValidationError: \u0027threads\u0027 is a required property\n\nFailed validating \u0027required\u0027 in schema:\n    OrderedDict([(\u0027$schema\u0027, \u0027http://json-schema.org/draft-04/schema#\u0027),\n                 (\u0027description\u0027, \u0027Snakemake configuration file\u0027),\n                 (\u0027type\u0027, \u0027object\u0027),\n                 (\u0027proprerties\u0027,\n                  OrderedDict([(\u0027workdir\u0027,\n                                OrderedDict([(\u0027type\u0027, \u0027string\u0027)])),\n                               (\u0027threads\u0027,\n                                OrderedDict([(\u0027type\u0027, \u0027integer\u0027)])),\n                               (\u0027singularity_docker_image\u0027,\n                                OrderedDict([(\u0027type\u0027, \u0027string\u0027)])),\n                               (\u0027cold_storage\u0027,\n                                OrderedDict([(\u0027type\u0027, \u0027array\u0027),\n                                             (\u0027items\u0027,\n                                              OrderedDict([(\u0027type\u0027,\n                                                            \u0027string\u0027)])),\n                                             (\u0027uniqueItems\u0027, True),\n                                             (\u0027minItems\u0027, 1)]))])),\n                 (\u0027params\u0027,\n                  OrderedDict([(\u0027type\u0027, \u0027object\u0027),\n                               (\u0027proprerties\u0027,\n                                OrderedDict([(\u0027arraytype\u0027,\n                                              OrderedDict([(\u0027type\u0027,\n                                                            \u0027string\u0027)])),\n                                             (\u0027baf_filter\u0027,\n                                              OrderedDict([(\u0027type\u0027,\n                                                            \u0027float\u0027)])),\n                                             (\u0027genome\u0027,\n                                              OrderedDict([(\u0027type\u0027,\n                                                            \u0027string\u0027)])),\n                                             (\u0027ldb\u0027,\n                                              OrderedDict([(\u0027type\u0027,\n                                                            \u0027string\u0027)])),\n                                             (\u0027nar\u0027,\n                                              OrderedDict([(\u0027type\u0027,\n                                                            \u0027string\u0027)])),\n                                             (\u0027nrf\u0027,\n                                              OrderedDict([(\u0027type\u0027,\n                                                            \u0027string\u0027)])),\n                                             (\u0027scripts\u0027,\n                                              OrderedDict([(\u0027type\u0027,\n                                                            \u0027string\u0027)])),\n                                             (\u0027segmenter\u0027,\n                                              OrderedDict([(\u0027type\u0027,\n                                                            \u0027string\u0027)])),\n                                             (\u0027ser_pen\u0027,\n                                              OrderedDict([(\u0027type\u0027,\n                                                            \u0027integer\u0027)])),\n                                             (\u0027smooth_k\u0027,\n                                              OrderedDict([(\u0027type\u0027,\n                                                            \u0027integer\u0027)])),\n                                             (\u0027required\u0027,\n                                              [\u0027arraytype\u0027,\n                                               \u0027baf_filter\u0027,\n                                               \u0027genome\u0027,\n                                               \u0027nar\u0027,\n                                               \u0027nrf\u0027,\n                                               \u0027scripts\u0027,\n                                               \u0027segmenter\u0027,\n                                               \u0027ser_pen\u0027,\n                                               \u0027smooth_k\u0027])]))])),\n                 (\u0027required\u0027,\n                  [\u0027threads\u0027,\n                   \u0027params\u0027,\n                   \u0027singularity_docker_image\u0027,\n                   \u0027workdir\u0027])])\n\nOn instance:\n    {}\n  File \"/tmp/tmpupzb12uj/Snakefile\", line 11, in \u003cmodule\u003e\n  File \"/tmp/tmpupzb12uj/rules/common.smk\", line 18, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1612260655.0
  },
  {
    "data_format": 1,
    "description": "Notes on Snakemake",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dantaki/snakemake_tutorial",
    "linting": "Lints for rule bwa_map (line 14, /tmp/tmpm0tvv02h/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_sort (line 34, /tmp/tmpm0tvv02h/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_index (line 55, /tmp/tmpm0tvv02h/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bcftools_call (line 74, /tmp/tmpm0tvv02h/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_quals (line 97, /tmp/tmpm0tvv02h/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1551028733.0
  },
  {
    "data_format": 1,
    "description": "Dosage Compensation Analyses Pipeline using Snakemake ",
    "formatting": "[WARNING] In file \"/tmp/tmpxc6ein3b/Snakefile\":  Keyword \"input\" at line 32 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "rameshbalan/ARChES",
    "linting": "Lints for snakefile /tmp/tmpxc6ein3b/Snakefile:\n    * Path composition with \u0027+\u0027 in line 9:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule summary_table (line 739, /tmp/tmpxc6ein3b/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1600383202.0
  },
  {
    "data_format": 1,
    "description": "Whole exome sequencing data analysis pipeline developed on Snakemake workflow management system.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "huzuner/WES-data-analysis-pipeline",
    "linting": "Lints for snakefile /tmp/tmpo0hgh4nk/Snakefile:\n    * Path composition with \u0027+\u0027 in line 4:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 15:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule bwa_map (line 41, /tmp/tmpo0hgh4nk/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_sort (line 69, /tmp/tmpo0hgh4nk/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule align_stat (line 92, /tmp/tmpo0hgh4nk/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule add_rg (line 117, /tmp/tmpo0hgh4nk/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mark_dup (line 145, /tmp/tmpo0hgh4nk/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule base_recal (line 175, /tmp/tmpo0hgh4nk/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule appy_bqsr (line 203, /tmp/tmpo0hgh4nk/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule variant_call (line 229, /tmp/tmpo0hgh4nk/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1596581785.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow designed to annotate VCF files withe SnpEff / SniSift",
    "formatting": "[WARNING] In file \"/tmp/tmpwq48o2yi/rules/snpsift.smk\":  Keyword \"output\" at line 12 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwq48o2yi/rules/snpsift.smk\":  Keyword \"output\" at line 42 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwq48o2yi/rules/snpsift.smk\":  Keyword \"output\" at line 73 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwq48o2yi/rules/snpsift.smk\":  Keyword \"output\" at line 104 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwq48o2yi/rules/snpsift.smk\":  Keyword \"output\" at line 135 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwq48o2yi/rules/snpsift.smk\":  Keyword \"output\" at line 165 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwq48o2yi/rules/snpsift.smk\":  Keyword \"output\" at line 195 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwq48o2yi/rules/snpsift.smk\":  Keyword \"output\" at line 226 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwq48o2yi/rules/snpsift.smk\":  Keyword \"output\" at line 257 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwq48o2yi/rules/snpeff.smk\":  Keyword \"output\" at line 20 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "tdayris-perso/vcf-annotate-snpeff-snpsift",
    "linting": "KeyError in line 70 of /tmp/tmpwq48o2yi/rules/copy.smk:\n\u0027SnpEff_db\u0027\n  File \"/tmp/tmpwq48o2yi/Snakefile\", line 12, in \u003cmodule\u003e\n  File \"/tmp/tmpwq48o2yi/rules/copy.smk\", line 70, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [
      "snakemake-workflows",
      "bioinformatics-pipeline",
      "reproducible-science",
      "snpeff",
      "dbnsfp",
      "gwas-catalog",
      "msigdb"
    ],
    "updated_at": 1613659855.0
  },
  {
    "data_format": 1,
    "description": "Snakemake and cluster-based exome workflows for the XiaoLab",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "stevenpastor/snakemake-exome-workflow",
    "linting": "Lints for rule bwa_map (line 15, /tmp/tmpxf0nq6pg/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_sort (line 53, /tmp/tmpxf0nq6pg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_index (line 78, /tmp/tmpxf0nq6pg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bcftools_call (line 98, /tmp/tmpxf0nq6pg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule report (line 123, /tmp/tmpxf0nq6pg/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1573225052.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "RaphaelHablesreiter/refphase-preprocessing",
    "linting": "Lints for rule bcftools_query_germline (line 95, /tmp/tmpgoezeizq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bcftools_query_samples (line 148, /tmp/tmpgoezeizq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1611758263.0
  },
  {
    "data_format": 1,
    "description": "Estimate fastq-formatted read abundace in RNA-Seq analysis with Kallisto",
    "formatting": "[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "gustaveroussy/rna-count-kallisto",
    "linting": "KeyError in line 32 of /tmp/tmpmqe5chwt/rules/common.smk:\n\u0027Sample_id\u0027\n  File \"/tmp/tmpmqe5chwt/Snakefile\", line 11, in \u003cmodule\u003e\n  File \"/tmp/tmpmqe5chwt/rules/common.smk\", line 32, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/core/frame.py\", line 3024, in __getitem__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3082, in get_loc\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [
      "snakemake-workflow",
      "snakemake",
      "bioinformatics",
      "reproducible-workflows",
      "kallisto",
      "fastqc",
      "multiqc",
      "conda",
      "json-schema"
    ],
    "updated_at": 1582549984.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dgag0811/Snakemake-Diamond-Megan",
    "linting": "Lints for rule align (line 3, /tmp/tmpoxrhft5x/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule view (line 25, /tmp/tmpoxrhft5x/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule daa2rma (line 47, /tmp/tmpoxrhft5x/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule rma2info (line 66, /tmp/tmpoxrhft5x/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1578419055.0
  },
  {
    "data_format": 1,
    "description": "Snakefile pipeline for  taxonomic and functional annotation of (Metagenome assembled) genome",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "metagenome-atlas/genome_atlas",
    "linting": "KeyError in line 25 of /tmp/tmp8fb7gp6b/Snakefile:\n\u0027database_dir\u0027\n  File \"/tmp/tmp8fb7gp6b/Snakefile\", line 25, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1606765573.0
  },
  {
    "data_format": 1,
    "description": "Repository containing detailed installation instructions for ganon with cami2 datasets",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "mirand863/ganon_cami2",
    "linting": "KeyError in line 1 of /tmp/tmp_qr8v8vu/Snakefile:\n\u0027workdir\u0027\n  File \"/tmp/tmp_qr8v8vu/Snakefile\", line 1, in \u003cmodule\u003e\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1590690854.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "biplabua/rna_seq_workflow",
    "linting": "Lints for rule download_reads (line 35, /tmp/tmpu6jsiql7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_reads_pe (line 58, /tmp/tmpu6jsiql7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param output_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule download_transcriptome (line 82, /tmp/tmpu6jsiql7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_salmon_index (line 101, /tmp/tmpu6jsiql7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule salmon_count_se (line 124, /tmp/tmpu6jsiql7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule salmon_count_pe (line 148, /tmp/tmpu6jsiql7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule dge_deseq2 (line 173, /tmp/tmpu6jsiql7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule volcano_plot (line 196, /tmp/tmpu6jsiql7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 1,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1607484984.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for benchmarking taxonomy assignments",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "gwarmstrong/taxa-assign-benchmarking",
    "linting": "ModuleNotFoundError in line 1 of /tmp/tmpehbty_t0/Snakefile:\nNo module named \u0027scipy\u0027\n  File \"/tmp/tmpehbty_t0/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpehbty_t0/benchutils/metrics.py\", line 5, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1580305945.0
  },
  {
    "data_format": 1,
    "description": "Command line bioinformatics workflows, created with Snakemake workflow management tool.",
    "formatting": "[WARNING] In file \"/tmp/tmpbnshk6mk/Snakefile\":  Keyword \"input\" at line 56 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpbnshk6mk/Snakefile\":  Keyword \"shell\" at line 175 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "AAFC-BICoE/snakemake-amplicon-metagenomics",
    "linting": "KeyError in line 18 of /tmp/tmpbnshk6mk/Snakefile:\n\u0027workdir\u0027\n  File \"/tmp/tmpbnshk6mk/Snakefile\", line 18, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 10,
    "topics": [],
    "updated_at": 1547055710.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline optimized for usage on SLURM",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "kkchau/RNAseq_Pipeline",
    "linting": "Lints for snakefile /tmp/tmph6vpyqh0/Snakefile:\n    * Path composition with \u0027+\u0027 in line 1:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 35:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 36:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 37:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 38:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 39:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 40:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 41:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 42:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 43:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 45:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 46:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1603249042.0
  },
  {
    "data_format": 1,
    "description": "Code for replicating \"Right and left, partisanship predicts vulnerability to misinformation\" by Dimitar Nikolov, Alessandro Flammini and Filippo Menczer",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "osome-iu/misinfo-partisanship-hksmisinforeview-2021",
    "linting": "WorkflowError in line 1 of /tmp/tmp1cj_kl5p/workflow/Snakefile:\nConfig file config.json not found.\n  File \"/tmp/tmp1cj_kl5p/workflow/Snakefile\", line 1, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1613920056.0
  },
  {
    "data_format": 1,
    "description": "Reproducible Scalable Pipeline For Amplicon-based Metagenomics (RSP4ABM) is a bioinformatic pipeline designed for convenient, reproducible and scalable amplicon-based metagenomics",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "metagenlab/microbiome16S_pipeline",
    "linting": "IndexError in line 39 of /tmp/tmp6toim2ew/rules/0_preprocessing/scripts/logging.py:\nlist index out of range\n  File \"/tmp/tmp6toim2ew/Snakefile\", line 19, in \u003cmodule\u003e\n  File \"/tmp/tmp6toim2ew/rules/0_preprocessing/scripts/logging.py\", line 39, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [
      "snakemake",
      "pipeline",
      "metagenomics",
      "amplicon"
    ],
    "updated_at": 1612689291.0
  },
  {
    "data_format": 1,
    "description": "A pipeline for extracting SSU rRNA gene from wgs data and applying them for further diversity analysis",
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jiarong/SSUsearch",
    "linting": "KeyError in line 14 of /tmp/tmpoibroi6z/Snakefile:\n\u0027Workdir\u0027\n  File \"/tmp/tmpoibroi6z/Snakefile\", line 14, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1574156379.0
  },
  {
    "data_format": 1,
    "description": "Use an ensemble of variant callers to call variants from ATAC-seq data",
    "formatting": "[ERROR] In file \"/tmp/tmptx680q5b/rules/prepare.smk\":  \u0027IndentationError: unindent does not match any outer indentation level (\u003ctokenize\u003e, line 21)\u0027\n[ERROR] In file \"/tmp/tmptx680q5b/rules/classify.smk\":  \u0027InvalidParameterSyntax: 109balance=int( config[\u0027balance\u0027]) if\u0027balance\u0027 in config else0\n\u0027\n[INFO] In file \"/tmp/tmptx680q5b/rules/classify.smk\":  2 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmptx680q5b/rules/classify.smk\":  1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "aryarm/varCA",
    "linting": "FileNotFoundError in line 26 of /tmp/tmptx680q5b/Snakefile:\n[Errno 2] No such file or directory: \u0027data/samples.tsv\u0027\n  File \"/tmp/tmptx680q5b/Snakefile\", line 37, in \u003cmodule\u003e\n  File \"/tmp/tmptx680q5b/Snakefile\", line 26, in read_samples\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [
      "random-forest",
      "machine-learning",
      "snakemake",
      "atac-seq-data",
      "variant-calling"
    ],
    "updated_at": 1614560110.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpdgwntzku/Snakefile\":  \u0027NoParametersError: L199: In input definition.\u0027\n[INFO] In file \"/tmp/tmpdgwntzku/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "PEDIA-Charite/classifier",
    "linting": "WorkflowError in line 1 of /tmp/tmpdgwntzku/Snakefile:\nConfig file ../config.yml not found.\n  File \"/tmp/tmpdgwntzku/Snakefile\", line 1, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1578247121.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpzylxeahv/rules/align_reads.smk\":  \u0027NoParametersError: L4: In input definition.\u0027\n[ERROR] In file \"/tmp/tmpzylxeahv/rules/merge_expr.smk\":  \u0027NoParametersError: L4: In input definition.\u0027\n[ERROR] In file \"/tmp/tmpzylxeahv/rules/merge_alignment_statistics.smk\":  \u0027NoParametersError: L4: In input definition.\u0027\n[INFO] 3 file(s) raised parsing errors \ud83e\udd15\n[INFO] 6 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "acshetty/sncRNA-seq-analysis",
    "linting": "FileNotFoundError in line 14 of /tmp/tmpzylxeahv/Snakefile:\n[Errno 2] No such file or directory: \u0027.test/info/samples.txt\u0027\n  File \"/tmp/tmpzylxeahv/Snakefile\", line 14, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 689, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1604381140.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 2 file(s) would be changed \ud83d\ude2c\n[INFO] 13 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "koesterlab/snakemake-workflow-sars-cov2",
    "linting": null,
    "stargazers_count": 2,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1614588324.0
  },
  {
    "data_format": 1,
    "description": "A Snakemake workflow for guide RNA identification using CRISPRseek.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "sschmeier/workflow-crispr-grna-identification",
    "linting": "SystemExit in line 27 of /tmp/tmpoumn94rv/Snakefile:\n1\n  File \"/tmp/tmpoumn94rv/Snakefile\", line 27, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [
      "crispr",
      "bioinformatics",
      "grna",
      "crispr-design",
      "snakemake"
    ],
    "updated_at": 1588369900.0
  },
  {
    "data_format": 1,
    "description": "The repository for the Snakemake implementation of the ImcSegmentationPipeline",
    "formatting": "[ERROR] In file \"/tmp/tmpsjzkegqp/workflow/rules/ilastik.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 111:0: \u003cline number missing in source\u003e\n```\nwhile formatting code with black.\u0027\n[ERROR] In file \"/tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 130:0: \u003cline number missing in source\u003e\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk\":  2 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk\":  1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "BodenmillerGroup/ImcSegmentationSnakemake",
    "linting": "Lints for snakefile /tmp/tmpsjzkegqp/workflow/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 473:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 13:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpsjzkegqp/workflow/rules/ilastik.smk:\n    * Absolute path \"/ilastik-release/run_ilastik.sh\" in line 9:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule generate_sample_list (line 396, /tmp/tmpsjzkegqp/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mcdfolder2imcfolder (line 431, /tmp/tmpsjzkegqp/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ome2analysis (line 478, /tmp/tmpsjzkegqp/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule analysis2channelmeta (line 515, /tmp/tmpsjzkegqp/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule exportacmeta (line 538, /tmp/tmpsjzkegqp/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param fol_path_out is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule compensation_copy_sm (line 642, /tmp/tmpsjzkegqp/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule modify_measurement_pipeline (line 703, /tmp/tmpsjzkegqp/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule move_panel_to_cpout (line 730, /tmp/tmpsjzkegqp/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_untrained_ilastik (line 743, /tmp/tmpsjzkegqp/workflow/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule generate_channelmeta_probab (line 769, /tmp/tmpsjzkegqp/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule zip_output_data (line 781, /tmp/tmpsjzkegqp/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule 20 (line 129, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 21 (line 129, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 22 (line 129, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 23 (line 154, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 24 (line 154, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 25 (line 154, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 26 (line 154, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 27 (line 154, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 28 (line 154, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 29 (line 129, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule 30 (line 129, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cp_get_plugins (line 180, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule generate_file_list (line 202, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule cp_create_batch_data (line 227, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outfolder is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule cp_run_batch (line 291, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cp_get_groups (line 354, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cp_combine_batch_output (line 378, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule open_project (line 398, /tmp/tmpsjzkegqp/workflow/rules/cellprofiler.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule 38 (line 110, /tmp/tmpsjzkegqp/workflow/rules/ilastik.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ilastik_run_batch (line 164, /tmp/tmpsjzkegqp/workflow/rules/ilastik.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ilastik_combine_batch_output (line 226, /tmp/tmpsjzkegqp/workflow/rules/ilastik.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_example_data (line 833, /tmp/tmpsjzkegqp/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule download_spillover_data (line 853, /tmp/tmpsjzkegqp/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule clean (line 866, /tmp/tmpsjzkegqp/workflow/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable fol_path_base from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 2,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1612014684.0
  },
  {
    "data_format": 1,
    "description": "Hand output of Atlas to Anvio",
    "formatting": "[ERROR] In file \"/tmp/tmphdcc2ek5/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 2:0:     \" --collection-name {params.name} \"\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmphdcc2ek5/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "metagenome-atlas/Atlas2Anvio",
    "linting": "Lints for snakefile /tmp/tmphdcc2ek5/Snakefile:\n    * Path composition with \u0027+\u0027 in line 112:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule get_contigs (line 28, /tmp/tmphdcc2ek5/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule create_bam_index (line 139, /tmp/tmphdcc2ek5/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule anvi_import_binning_results (line 269, /tmp/tmphdcc2ek5/Snakefile):\n    * Param name is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule interactive (line 321, /tmp/tmphdcc2ek5/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param name is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 2,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1593614402.0
  },
  {
    "data_format": 1,
    "description": "a small exercise using Angrist \u0026 Krueger\u0027s 1991 data in a reproducible workflow",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "lachlandeer/angrist-krueger-1991",
    "linting": "Lints for rule all (line 20, /tmp/tmpbve232nt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slides (line 51, /tmp/tmpbve232nt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule paper (line 78, /tmp/tmpbve232nt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_table (line 107, /tmp/tmpbve232nt/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param directory is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule run_iv_fe (line 151, /tmp/tmpbve232nt/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule run_ols (line 191, /tmp/tmpbve232nt/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule create_figure (line 231, /tmp/tmpbve232nt/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule gen_cohort_sum (line 266, /tmp/tmpbve232nt/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule gen_reg_vars (line 297, /tmp/tmpbve232nt/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_data (line 328, /tmp/tmpbve232nt/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule find_packages (line 364, /tmp/tmpbve232nt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule install_packages (line 380, /tmp/tmpbve232nt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule install_rmd (line 397, /tmp/tmpbve232nt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule install_tinytex (line 413, /tmp/tmpbve232nt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean (line 430, /tmp/tmpbve232nt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule help (line 443, /tmp/tmpbve232nt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dag (line 465, /tmp/tmpbve232nt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filegraph (line 486, /tmp/tmpbve232nt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule rulegraph (line 506, /tmp/tmpbve232nt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule graphviz (line 528, /tmp/tmpbve232nt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule graphviz_mac (line 540, /tmp/tmpbve232nt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [
      "snakemake",
      "snakemake-workflow",
      "reproducible-research",
      "harmless-econometrics"
    ],
    "updated_at": 1601672650.0
  },
  {
    "data_format": 1,
    "description": "gatk4 workflow",
    "formatting": "[ERROR] In file \"/tmp/tmp5uh5ojg1/rules/1.fastq2ubam.smk\":  \u0027InvalidParameterSyntax: L38:Invalid key lambda wildcards: get_read_group( wildcards)[\u0027sampleid\u0027]\n platform\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "bakeronit/snakemake-gatk4-non-model",
    "linting": "SyntaxError in line 38 of /tmp/tmp5uh5ojg1/rules/1.fastq2ubam.smk:\ninvalid syntax\n  File \"/tmp/tmp5uh5ojg1/Snakefile\", line 38, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1607485921.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmpvh4hug20/Snakefile\":  Keyword \"input\" at line 25 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Lufpa/TM3Seq-Pipeline",
    "linting": "AssertionError in line 14 of /tmp/tmpvh4hug20/Snakefile:\nERROR: No fastq files were found using pattern \u0027data/{sample}.fastq.gz\u0027 (set in configfile)\n  File \"/tmp/tmpvh4hug20/Snakefile\", line 14, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1613577160.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpyjohb803/Snakefile\":  \u0027SyntaxError: L18: Newline expected after keyword \u0027onsuccess\u0027\u0027\n[INFO] In file \"/tmp/tmpyjohb803/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "sraorao/snakemake_code_clinic_2",
    "linting": "Lints for rule align (line 40, /tmp/tmpyjohb803/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sort_bams (line 71, /tmp/tmpyjohb803/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mark_dups (line 96, /tmp/tmpyjohb803/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_dupmetrics (line 123, /tmp/tmpyjohb803/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_dupmetrics_python (line 145, /tmp/tmpyjohb803/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1608227648.0
  },
  {
    "data_format": 1,
    "description": "Snakemake implementation of GATK4 pipeline for GTEx Project",
    "formatting": "[ERROR] In file \"/tmp/tmph6xzf_bu/Snakefile\":  \u0027IndentationError: unindent does not match any outer indentation level (\u003ctokenize\u003e, line 4)\u0027\n[INFO] In file \"/tmp/tmph6xzf_bu/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "troycomi/gtex-gatk4",
    "linting": "ModuleNotFoundError in line 4 of /tmp/tmph6xzf_bu/Snakefile:\nNo module named \u0027slurm_scrub\u0027\n  File \"/tmp/tmph6xzf_bu/Snakefile\", line 4, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1575296570.0
  },
  {
    "data_format": 1,
    "description": "A Snakemake workflow for TAP-seq data processing",
    "formatting": "[WARNING] In file \"/tmp/tmpid7eiewk/rules/align_reads.smk\":  Keyword \"shell\" at line 172 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "argschwind/TAPseq_workflow",
    "linting": "Lints for snakefile /tmp/tmpid7eiewk/rules/create_alignment_refs.smk:\n    * Path composition with \u0027+\u0027 in line 23:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 8:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpid7eiewk/rules/align_reads.smk:\n    * Absolute path \"/*\" in line 12:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/*\" in line 13:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/genomeDir\" in line 164:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cropseq_ref.fasta\" in line 206:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cropseq_ref.dict\" in line 207:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cropseq_ref.refFlat\" in line 226:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 12:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 13:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 11:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 12:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpid7eiewk/rules/extract_dge.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 11:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule create_vector_ref (line 74, /tmp/tmpid7eiewk/rules/create_alignment_refs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param output_bn is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule create_cropseq_ref (line 107, /tmp/tmpid7eiewk/rules/create_alignment_refs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule star_align (line 320, /tmp/tmpid7eiewk/rules/align_reads.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outprefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule align_report (line 529, /tmp/tmpid7eiewk/rules/align_reads.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule dge_report (line 144, /tmp/tmpid7eiewk/rules/extract_dge.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1595252030.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for the vg toolkit.",
    "formatting": "[ERROR] In file \"/tmp/tmpo9pktfeq/Snakefile\":  \u0027AttributeError: \u0027NoneType\u0027 object has no attribute \u0027group\u0027\u0027\n[INFO] In file \"/tmp/tmpo9pktfeq/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "vgteam/vg_snakemake",
    "linting": "KeyError in line 11 of /tmp/tmpo9pktfeq/Snakefile:\n\u0027chrs\u0027\n  File \"/tmp/tmpo9pktfeq/Snakefile\", line 11, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 5,
    "topics": [],
    "updated_at": 1600434993.0
  },
  {
    "data_format": 1,
    "description": "Pipeline for CAGE data analysis using icetea",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "vivekbhr/cage_pipeline",
    "linting": "KeyError in line 38 of /tmp/tmpnmgi1igk/internals.Snakefile:\n\u0027knownAnnotations\u0027\n  File \"/tmp/tmpnmgi1igk/Snakefile\", line 2, in \u003cmodule\u003e\n  File \"/tmp/tmpnmgi1igk/internals.Snakefile\", line 38, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [
      "cage-seq"
    ],
    "updated_at": 1585033965.0
  },
  {
    "data_format": 1,
    "description": "WES HLA Typing based on multiple alternative tools",
    "formatting": "[INFO] 10 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "lkuchenb/MultiHLA",
    "linting": "Lints for snakefile /tmp/tmp3sope_6y/workflow/rules/multihla.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp3sope_6y/workflow/rules/map.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 49:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp3sope_6y/workflow/rules/hla_vbseq.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp3sope_6y/workflow/rules/xhla.smk:\n    * Absolute path \"/usr/bin/diamond blastx -p {threads} \"$@\"\" in line 58:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmp3sope_6y/workflow/rules/hla_la.smk:\n    * Absolute path \"/{input:q} \u0026\u003e\u003e\" in line 52:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/opt/hla-la/bin/HLA-LA --action prepareGraph --PRG_graph_dir \" in line 55:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/PRG_MHC_GRCh38_withIMGT \u0026\u003e\u003e\" in line 55:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/opt/hla-la/src/* . \u0026\u003e\u003e\" in line 93:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/opt/hla-la/src/HLA-LA.pl . \u0026\u003e\u003e\" in line 95:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/opt/hla-la/bin/HLA-LA bin/ \u0026\u003e\u003e\" in line 99:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule xhla_conversion (line 61, /tmp/tmp3sope_6y/workflow/rules/multihla.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule hla_xhla_dataset (line 106, /tmp/tmp3sope_6y/workflow/rules/multihla.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule hla_la_conversion (line 139, /tmp/tmp3sope_6y/workflow/rules/multihla.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule hla_la_dataset (line 184, /tmp/tmp3sope_6y/workflow/rules/multihla.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule hla_vbseq_conversion (line 217, /tmp/tmp3sope_6y/workflow/rules/multihla.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule hla_vbseq_dataset (line 254, /tmp/tmp3sope_6y/workflow/rules/multihla.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule optitype_conversion (line 288, /tmp/tmp3sope_6y/workflow/rules/multihla.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule optitype_dataset (line 334, /tmp/tmp3sope_6y/workflow/rules/multihla.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule collect (line 368, /tmp/tmp3sope_6y/workflow/rules/multihla.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ucsc_hg_download (line 24, /tmp/tmp3sope_6y/workflow/rules/ucsc_hg_download.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule compare (line 21, /tmp/tmp3sope_6y/workflow/rules/compare.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bwa_index (line 25, /tmp/tmp3sope_6y/workflow/rules/map.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule samtools_index (line 70, /tmp/tmp3sope_6y/workflow/rules/map.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bwa_mem_dataset_collector (line 150, /tmp/tmp3sope_6y/workflow/rules/map.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 2,
    "subscribers_count": 3,
    "topics": [
      "workflow",
      "immunology",
      "immunoinformatics",
      "sequencing",
      "exome",
      "genome"
    ],
    "updated_at": 1611262738.0
  },
  {
    "data_format": 1,
    "description": "Amplicon sequencing workflow with snakemake and dada2",
    "formatting": "[ERROR] In file \"/tmp/tmpsibb0fej/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 18:4:     return expand(\"output/fastqc/{sample}\" + config[\"R1\"] + \"_fastqc.html\" , sample = SAMPLES)\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmpsibb0fej/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "ramay/dada2_snakemake_workflow",
    "linting": "Lints for snakefile /tmp/tmpsibb0fej/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 20:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpsibb0fej/utils/rules/qc_cutadapt.smk:\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 17:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule combine_read_counts (line 64, /tmp/tmpsibb0fej/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule cutadapt (line 60, /tmp/tmpsibb0fej/utils/rules/qc_cutadapt.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule plotQualityProfile (line 4, /tmp/tmpsibb0fej/utils/rules/dada2.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule dada2_filter (line 36, /tmp/tmpsibb0fej/utils/rules/dada2.smk):\n    * Param nread is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule IDtaxa (line 221, /tmp/tmpsibb0fej/utils/rules/dada2.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1613140246.0
  },
  {
    "data_format": 1,
    "description": "Python tools for metagenomic data",
    "formatting": "[ERROR] In file \"/tmp/tmpdkm08tu5/rules/annotation.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 2:0:     \"-db {params} -query {input} -outfmt \u00276 std qlen slen\u0027 -out {output.ssu}\\n\"\n```\nwhile formatting code with black.\u0027\n[WARNING] In file \"/tmp/tmpdkm08tu5/rules/athena.smk\":  Keyword \"shell\" at line 65 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmpdkm08tu5/rules/beadsCluster.smk\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 2:0:     o6 = \"{sample}/mash/lv\" + str(config[\"p_dist_lv\"]) + \"/tree.cluster.count\"\n```\nwhile formatting code with black.\u0027\n[INFO] 2 file(s) raised parsing errors \ud83e\udd15\n[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ZeweiSong/metaSeq",
    "linting": "KeyError in line 17 of /tmp/tmpdkm08tu5/Snakefile:\n\u0027samples\u0027\n  File \"/tmp/tmpdkm08tu5/Snakefile\", line 17, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1609227820.0
  },
  {
    "data_format": 1,
    "description": "Automated de novo transcriptome assembly",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "SchulzLab/SOS",
    "linting": "WorkflowError in line 3 of /tmp/tmpokwe6c23/Snakefile:\nConfig file is not valid JSON or YAML. In case of YAML, make sure to not mix whitespace and tab indentation.\n  File \"/tmp/tmpokwe6c23/Snakefile\", line 3, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1598040049.0
  },
  {
    "data_format": 1,
    "description": "Quality control for mass spec proteomics",
    "formatting": "[ERROR] In file \"/tmp/tmp1hcjgbbw/Snakefile\":  \u0027InvalidParameterSyntax: L191: Over-indented recognised keyword found: \u0027params\u0027\u0027\n[INFO] In file \"/tmp/tmp1hcjgbbw/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "qbicsoftware-archive/qcprot",
    "linting": "WorkflowError in line 16 of /tmp/tmp1hcjgbbw/Snakefile:\nConfig file config.json not found.\n  File \"/tmp/tmp1hcjgbbw/Snakefile\", line 16, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 14,
    "topics": [
      "workflow",
      "ms",
      "px"
    ],
    "updated_at": 1600936668.0
  },
  {
    "data_format": 1,
    "description": "Trade-offs between geographic scale, cost, and infrastructure requirements for fully renewable electricity in Europe",
    "formatting": "[ERROR] In file \"/tmp/tmpetzeck2i/Snakefile\":  \u0027InvalidParameterSyntax: 35\"build/output/{resolution}/uncertainty/weather-diff-diff.txt\". format( resolution= config[\"weather-uncertainty\"][\"resolution\"][\"space\"])\n\"build/output/{resolution}/figures/figure1.tiff\". format( resolution= config[\"resolution\"][\"space\"])\n\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "timtroendle/geographic-scale",
    "linting": "SyntaxError in line 36 of /tmp/tmpetzeck2i/Snakefile:\ninvalid syntax\n",
    "stargazers_count": 2,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1601294507.0
  },
  {
    "data_format": 1,
    "description": "Barebones framework for creating new snakemake workflows.",
    "formatting": null,
    "full_name": "CCBR/CCBR_cookiecutter",
    "linting": null,
    "stargazers_count": 2,
    "subscribers_count": 4,
    "topics": [],
    "updated_at": 1614633962.0
  },
  {
    "data_format": 1,
    "description": "Fastq to bam mapping pipeline with marked duplicates, indexing, and insert size metric collection",
    "formatting": "[ERROR] In file \"/tmp/tmpixz7mjo8/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 1:0: else:\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmpixz7mjo8/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "bnelsj/bwa_mem_mapping",
    "linting": "Lints for snakefile /tmp/tmpixz7mjo8/Snakefile:\n    * Absolute path \"/\" + manifest_sn.sn + \" in line 56:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\" + manifest_sn.lane + \" in line 56:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 56:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 56:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 30:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 56:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule get_flagstat (line 81, /tmp/tmpixz7mjo8/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_idxstats (line 105, /tmp/tmpixz7mjo8/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule collect_isize_metrics (line 128, /tmp/tmpixz7mjo8/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule index_merged_bams (line 151, /tmp/tmpixz7mjo8/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_bams (line 173, /tmp/tmpixz7mjo8/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bwa_mem_map_and_mark_dups (line 237, /tmp/tmpixz7mjo8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1608787032.0
  },
  {
    "data_format": 1,
    "description": "Using the `bookdown` and `rticles` packages together to write papers",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "lachlandeer/bookdown_rticles",
    "linting": "Lints for snakefile /tmp/tmpzmvofki0/Snakefile:\n    * Path composition with \u0027+\u0027 in line 32:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule all (line 27, /tmp/tmpzmvofki0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule pdf (line 47, /tmp/tmpzmvofki0/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable runR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable logAll from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule html (line 75, /tmp/tmpzmvofki0/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable runR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable logAll from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule clean (line 102, /tmp/tmpzmvofki0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [
      "bookdown",
      "rticles",
      "journal-article"
    ],
    "updated_at": 1547572234.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for neoantigen prediction",
    "formatting": "[WARNING] In file \"/tmp/tmpsn4or5ay/workflow/rules/calling.smk\":  Keyword \"input\" at line 114 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 21 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "snakemake-workflows/dna-seq-neoantigen-prediction",
    "linting": null,
    "stargazers_count": 2,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1607525163.0
  },
  {
    "data_format": 1,
    "description": "Metabarcoding Pipeline",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "PHB-SILS/Metabarcoding",
    "linting": "Lints for snakefile /tmp/tmp127unt2w/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 59:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 61:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 61:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 69:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 70:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 112:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 113:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 117:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 150:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 174:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 175:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 179:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 180:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 181:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 16:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 51:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 53:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 59:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 61:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule get_taxa_train (line 93, /tmp/tmp127unt2w/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable taxa_train_url from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule get_taxa_spec (line 112, /tmp/tmp127unt2w/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable taxa_spec_url from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule fastp (line 137, /tmp/tmp127unt2w/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable ADAPTERFILE from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule DADA2 (line 229, /tmp/tmp127unt2w/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 2,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1606909816.0
  },
  {
    "data_format": 1,
    "description": "Neural Networks based unified physics parameterization for atmospheric models",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "nbren12/uwnet",
    "linting": "ModuleNotFoundError in line 6 of /tmp/tmp8qazhcov/Snakefile:\nNo module named \u0027f90nml\u0027\n  File \"/tmp/tmp8qazhcov/Snakefile\", line 6, in \u003cmodule\u003e\n  File \"/tmp/tmp8qazhcov/src/data/__init__.py\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmp8qazhcov/src/data/sam.py\", line 2, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1611980917.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline for de novo transcriptome assembly with 454 reads",
    "formatting": "[WARNING] In file \"/tmp/tmpb26y05d_/Snakefile\":  Keyword \"input\" at line 47 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jlanga/smsk_454",
    "linting": "Lints for snakefile /tmp/tmpb26y05d_/bin/snakefiles/folders:\n    * Path composition with \u0027+\u0027 in line 2:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 8:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 11:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpb26y05d_/bin/snakefiles/raw:\n    * Path composition with \u0027+\u0027 in line 8:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpb26y05d_/bin/snakefiles/qc_sff:\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 31:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 55:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 112:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpb26y05d_/bin/snakefiles/qc_fastq:\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpb26y05d_/bin/snakefiles/assembly:\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule clean (line 1, /tmp/tmpb26y05d_/bin/snakefiles/clean):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean_raw (line 18, /tmp/tmpb26y05d_/bin/snakefiles/clean):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable raw_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule clean_qc (line 34, /tmp/tmpb26y05d_/bin/snakefiles/clean):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable qc_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule clean_assembly (line 50, /tmp/tmpb26y05d_/bin/snakefiles/clean):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable assembly_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule clean_report (line 66, /tmp/tmpb26y05d_/bin/snakefiles/clean):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable report_dir from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule raw_sample_sff_make_link_sff (line 1, /tmp/tmpb26y05d_/bin/snakefiles/raw):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule raw_sample_fastq_make_link (line 40, /tmp/tmpb26y05d_/bin/snakefiles/raw):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule raw_sample_sff_to_fastq (line 79, /tmp/tmpb26y05d_/bin/snakefiles/raw):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule raw_adaptors_make_link (line 128, /tmp/tmpb26y05d_/bin/snakefiles/raw):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qc_sample_sff_pyrobayes (line 1, /tmp/tmpb26y05d_/bin/snakefiles/qc_sff):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param stub is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule qc_sample_from_sff_join_fasta_qual (line 49, /tmp/tmpb26y05d_/bin/snakefiles/qc_sff):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qc_sample_from_sff_decompress_pyrobayes (line 95, /tmp/tmpb26y05d_/bin/snakefiles/qc_sff):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qc_sample_from_sff_snowhite (line 142, /tmp/tmpb26y05d_/bin/snakefiles/qc_sff):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qc_sample_from_sff_trimmomatic (line 325, /tmp/tmpb26y05d_/bin/snakefiles/qc_sff):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qc_sample_from_sff_decompress_trimmomatic (line 380, /tmp/tmpb26y05d_/bin/snakefiles/qc_sff):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qc_sample_from_fastq_decompress (line 1, /tmp/tmpb26y05d_/bin/snakefiles/qc_fastq):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qc_snowhite_from_fastq_sample (line 48, /tmp/tmpb26y05d_/bin/snakefiles/qc_fastq):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qc_sample_from_fastq_trimmomatic (line 225, /tmp/tmpb26y05d_/bin/snakefiles/qc_fastq):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qc_sample_from_fastq_decompress_trimmomatic (line 278, /tmp/tmpb26y05d_/bin/snakefiles/qc_fastq):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule assembly_newbler (line 1, /tmp/tmpb26y05d_/bin/snakefiles/assembly):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param out_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule report_sample_from_sff_raw_fastqc (line 1, /tmp/tmpb26y05d_/bin/snakefiles/report):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule report_sample_from_sff_pyrobayes_fastqc (line 51, /tmp/tmpb26y05d_/bin/snakefiles/report):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule report_sample_from_sff_snowhite_fastqc (line 101, /tmp/tmpb26y05d_/bin/snakefiles/report):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule report_fastqc_trimmomatic_from_sff_sample (line 151, /tmp/tmpb26y05d_/bin/snakefiles/report):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule report_sample_from_sff_multiqc (line 201, /tmp/tmpb26y05d_/bin/snakefiles/report):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule report_sample_from_fastq_raw_fastqc (line 275, /tmp/tmpb26y05d_/bin/snakefiles/report):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule report_sample_from_fastq_snowhite_fastqc (line 325, /tmp/tmpb26y05d_/bin/snakefiles/report):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule report_sample_from_fastq_trimmomatic_fastqc (line 375, /tmp/tmpb26y05d_/bin/snakefiles/report):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule report_sample_from_fastq_multiqc (line 425, /tmp/tmpb26y05d_/bin/snakefiles/report):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule report_all_multiqc (line 500, /tmp/tmpb26y05d_/bin/snakefiles/report):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule report_raw_multiqc (line 592, /tmp/tmpb26y05d_/bin/snakefiles/report):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule report_pyrobayes_multiqc (line 664, /tmp/tmpb26y05d_/bin/snakefiles/report):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule report_snowhite_multiqc (line 732, /tmp/tmpb26y05d_/bin/snakefiles/report):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule report_trimmomatic_multiqc (line 804, /tmp/tmpb26y05d_/bin/snakefiles/report):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1515950115.0
  },
  {
    "data_format": 1,
    "description": "Consolidation of tools in the MutPred Suite to work with VCF files",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "NCBI-Hackathons/MutPredMerge",
    "linting": "Lints for snakefile /tmp/tmptyyiox9u/Snakefile:\n    * Path composition with \u0027+\u0027 in line 28:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 29:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 30:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 31:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 32:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 45:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 58:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 69:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 82:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 84:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 93:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 95:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 104:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 106:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 108:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 116:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 118:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 120:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 128:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 130:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 131:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 132:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 2:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 28:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 29:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 30:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 31:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 32:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 45:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 56:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 58:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 73:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 82:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 84:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 93:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 95:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 104:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 106:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 108:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 116:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 118:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 120:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 128:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 130:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 131:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule annovar_convert (line 46, /tmp/tmptyyiox9u/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule annovar_annotate (line 70, /tmp/tmptyyiox9u/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule splitter (line 96, /tmp/tmptyyiox9u/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule coding_change (line 131, /tmp/tmptyyiox9u/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule MutPred2 (line 162, /tmp/tmptyyiox9u/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule MutPred_LOF (line 186, /tmp/tmptyyiox9u/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outfile_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule MutPred_indel (line 213, /tmp/tmptyyiox9u/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outfile_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule Merge (line 240, /tmp/tmptyyiox9u/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 2,
    "subscribers_count": 7,
    "topics": [],
    "updated_at": 1564703075.0
  },
  {
    "data_format": 1,
    "description": "Benchmarking adapter and quality trimming tools",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "boulund/adapter_benchmark",
    "linting": "Lints for rule download_fastq (line 29, /tmp/tmpz0j0kc9_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule grade (line 354, /tmp/tmpz0j0kc9_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot (line 386, /tmp/tmpz0j0kc9_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 2,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1597668499.0
  },
  {
    "data_format": 1,
    "description": "Tools and workflows for evaluating bacterial and archaeal genome contamination with sourmash and GTDB.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dib-lab/sourmash-oddify",
    "linting": "Lints for snakefile /tmp/tmpopumte4j/Snakefile:\n    * Path composition with \u0027+\u0027 in line 34:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule sigs (line 49, /tmp/tmpopumte4j/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule gtdbtk_gather_matches (line 72, /tmp/tmpopumte4j/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule make_lineages_csv (line 102, /tmp/tmpopumte4j/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outputs_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule make_lca_db (line 125, /tmp/tmpopumte4j/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_oddities_txt (line 150, /tmp/tmpopumte4j/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outputs_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule make_oddities_examine_txt (line 174, /tmp/tmpopumte4j/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outputs_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 2,
    "subscribers_count": 5,
    "topics": [],
    "updated_at": 1580225343.0
  },
  {
    "data_format": 1,
    "description": "Pipeline for RNA-seq analysis",
    "formatting": "[WARNING] In file \"/tmp/tmpwikj85tt/rules/kallisto.smk\":  Keyword \"shell\" at line 16 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwikj85tt/rules/kallisto.smk\":  Keyword \"shell\" at line 46 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwikj85tt/rules/ncbi.smk\":  Keyword \"shell\" at line 24 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwikj85tt/rules/ncbi.smk\":  Keyword \"shell\" at line 37 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwikj85tt/rules/ncbi.smk\":  Keyword \"shell\" at line 52 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwikj85tt/rules/stringtie.smk\":  Keyword \"shell\" at line 19 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwikj85tt/rules/salmon.smk\":  Keyword \"shell\" at line 22 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwikj85tt/rules/salmon.smk\":  Keyword \"shell\" at line 40 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpwikj85tt/rules/salmon.smk\":  Keyword \"shell\" at line 72 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 12 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "rohitsuratekar/CardioPipeLine",
    "linting": "FileNotFoundError in line 9 of /tmp/tmpwikj85tt/Snakefile:\n[Errno 2] No such file or directory: \u0027config/samples.csv\u0027\n  File \"/tmp/tmpwikj85tt/Snakefile\", line 9, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 610, in read_csv\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 2,
    "subscribers_count": 2,
    "topics": [
      "rna-seq",
      "ngs",
      "deseq2-analysis",
      "quantification",
      "pipeline",
      "ncbi",
      "sra"
    ],
    "updated_at": 1608306341.0
  },
  {
    "data_format": 1,
    "description": "Metagenomic Sequence Simulator",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "metagenlab/MeSS",
    "linting": "KeyError in line 21 of /tmp/tmpu6m4rc5h/rules/simulate_reads.rules:\n\u0027proportion_reads\u0027\n  File \"/tmp/tmpu6m4rc5h/Snakefile\", line 1, in \u003cmodule\u003e\n  File \"/tmp/tmpu6m4rc5h/rules/simulate_reads.rules\", line 21, in \u003cmodule\u003e\n",
    "stargazers_count": 2,
    "subscribers_count": 4,
    "topics": [],
    "updated_at": 1614298013.0
  },
  {
    "data_format": 1,
    "description": "A complete Snakemake pipeline for detecting allele specific expression",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "aryarm/as_analysis",
    "linting": "FileNotFoundError in line 27 of /tmp/tmp5eh6oiez/Snakefile:\n[Errno 2] No such file or directory: \u0027/iblm/netapp/home/amassarat/allele_specific_analysis/snakemake/samples.tsv\u0027\n  File \"/tmp/tmp5eh6oiez/Snakefile\", line 44, in \u003cmodule\u003e\n  File \"/tmp/tmp5eh6oiez/Snakefile\", line 27, in read_samples\n",
    "stargazers_count": 3,
    "subscribers_count": 1,
    "topics": [
      "snakemake",
      "allele-specific-expression",
      "rna-seq",
      "atac-seq",
      "whole-genome-sequencing"
    ],
    "updated_at": 1612483298.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmp0ot5icr1/Snakefile\":  \u0027DuplicateKeyWordError: L92: \u0027rule all\u0027 specified twice.\u0027\n[INFO] In file \"/tmp/tmp0ot5icr1/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "weng-lab/psychip_snakemake",
    "linting": "WorkflowError in line 3 of /tmp/tmp0ot5icr1/Snakefile:\nConfig file is not valid JSON or YAML. In case of YAML, make sure to not mix whitespace and tab indentation.\n  File \"/tmp/tmp0ot5icr1/Snakefile\", line 3, in \u003cmodule\u003e\n",
    "stargazers_count": 3,
    "subscribers_count": 21,
    "topics": [],
    "updated_at": 1566354708.0
  },
  {
    "data_format": 1,
    "description": "Consistency pipeline for hierarchies of orthologous groups (OGs) based on subsampling and tree reconciliation",
    "formatting": "[INFO] 4 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "meringlab/og_consistency_pipeline",
    "linting": "ModuleNotFoundError in line 2 of /tmp/tmp_1lbybrh/rules/preprocessing.smk:\nNo module named \u0027ete3\u0027\n  File \"/tmp/tmp_1lbybrh/Snakefile\", line 69, in \u003cmodule\u003e\n  File \"/tmp/tmp_1lbybrh/rules/preprocessing.smk\", line 2, in \u003cmodule\u003e\n",
    "stargazers_count": 3,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1608601207.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmprqo5y5qx/Snakefile\":  Keyword \"input\" at line 132 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 2 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "AlexanderLabWHOI/tara-euk-metaG",
    "linting": "PermissionError in line 78 of /tmp/tmprqo5y5qx/Snakefile:\n[Errno 13] Permission denied: \u0027/vortexfs1\u0027\n  File \"/tmp/tmprqo5y5qx/Snakefile\", line 78, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/pathlib.py\", line 1316, in mkdir\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/pathlib.py\", line 1316, in mkdir\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/pathlib.py\", line 1316, in mkdir\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/pathlib.py\", line 1316, in mkdir\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/pathlib.py\", line 1316, in mkdir\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/pathlib.py\", line 1312, in mkdir\n",
    "stargazers_count": 3,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1597853507.0
  },
  {
    "data_format": 1,
    "description": "Snakemake ProtoWorkflow for DNA Analysis. ",
    "formatting": "[WARNING] In file \"/tmp/tmpqjk8vf_a/rules/varcall.rules.smk\":  Keyword \"shell\" at line 62 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpqjk8vf_a/rules/varcall.rules.smk\":  Keyword \"shell\" at line 103 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpqjk8vf_a/rules/align.rules.smk\":  Keyword \"shell\" at line 29 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpqjk8vf_a/rules/align.rules.smk\":  Keyword \"shell\" at line 71 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpqjk8vf_a/rules/align.rules.smk\":  Keyword \"shell\" at line 121 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpqjk8vf_a/rules/align.rules.smk\":  Keyword \"shell\" at line 208 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpqjk8vf_a/rules/align.rules.smk\":  Keyword \"shell\" at line 297 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpqjk8vf_a/rules/denovo.rules.smk\":  Keyword \"shell\" at line 84 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpqjk8vf_a/rules/stats.rules.smk\":  Keyword \"input\" at line 12 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpqjk8vf_a/rules/stats.rules.smk\":  Keyword \"input\" at line 46 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "mv-lab/dna-proto-workflow",
    "linting": "ModuleNotFoundError in line 5 of /tmp/tmpqjk8vf_a/rules/init.rules.smk:\nNo module named \u0027yamlordereddictloader\u0027\n  File \"/tmp/tmpqjk8vf_a/Snakefile\", line 2, in \u003cmodule\u003e\n  File \"/tmp/tmpqjk8vf_a/rules/init.rules.smk\", line 5, in \u003cmodule\u003e\n  File \"/tmp/tmpqjk8vf_a/utils/snkmk.py\", line 7, in \u003cmodule\u003e\n  File \"/tmp/tmpqjk8vf_a/utils/check_config.py\", line 2, in \u003cmodule\u003e\n",
    "stargazers_count": 3,
    "subscribers_count": 2,
    "topics": [
      "snakemake",
      "dna",
      "bioconda"
    ],
    "updated_at": 1606597344.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline to produce figures for \"Measuring the distribution of fitness effects in somatic evolution by combining clonal dynamics with dN/dS ratios\"",
    "formatting": "UnicodeDecodeError: \u0027utf-8\u0027 codec can\u0027t decode byte 0xb0 in position 37: invalid start byte\n",
    "full_name": "marcjwilliams1/dnds-clonesize",
    "linting": "The flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nThe flag \u0027directory\u0027 used in rule all is only valid for outputs, not inputs.\nLints for snakefile /tmp/tmpddffo2u4/Snakefile:\n    * Absolute path \"/bin/bash\" in line 12:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Deprecated singularity directive used for container definition in line 10.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpddffo2u4/rules/CalculatedNdS-normal.smk:\n    * Deprecated singularity directive used for container definition in line 20.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 42.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 56.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 71.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpddffo2u4/rules/fitdNdSnormal.smk:\n    * Deprecated singularity directive used for container definition in line 21.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 44.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 61.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 95.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpddffo2u4/rules/GenerateFigures.smk:\n    * Deprecated singularity directive used for container definition in line 4.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 22.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 39.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 54.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 67.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 75.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 87.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 97.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 106.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 115.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 124.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 135.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpddffo2u4/rules/clonesizefit.smk:\n    * Deprecated singularity directive used for container definition in line 8.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 19.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 29.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 46.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 63.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 73.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ModellingNormalTissue (line 1, /tmp/tmpddffo2u4/rules/ModellingNormalTissue.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ModellingNormalTissueDistribution (line 37, /tmp/tmpddffo2u4/rules/ModellingNormalTissue.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ModellingNormalTissuePower (line 67, /tmp/tmpddffo2u4/rules/ModellingNormalTissue.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ModellingNormalTissueCloneSize (line 100, /tmp/tmpddffo2u4/rules/ModellingNormalTissue.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ModellingNormalTissueHitchikers (line 126, /tmp/tmpddffo2u4/rules/ModellingNormalTissue.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule CalculatedNdSNormal (line 1, /tmp/tmpddffo2u4/rules/CalculatedNdS-normal.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule CalculatedNdSNormalSNV (line 38, /tmp/tmpddffo2u4/rules/CalculatedNdS-normal.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule MakeFilesSSB (line 75, /tmp/tmpddffo2u4/rules/CalculatedNdS-normal.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule CalculateSitedNdSNormal (line 104, /tmp/tmpddffo2u4/rules/CalculatedNdS-normal.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fitdNdSnormal (line 1, /tmp/tmpddffo2u4/rules/fitdNdSnormal.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fitdNdSnormalSNV (line 37, /tmp/tmpddffo2u4/rules/fitdNdSnormal.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule formatresultsSSB (line 73, /tmp/tmpddffo2u4/rules/fitdNdSnormal.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fitdNdSnormalSSB (line 150, /tmp/tmpddffo2u4/rules/fitdNdSnormal.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule Figure1 (line 1, /tmp/tmpddffo2u4/rules/GenerateFigures.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule Figure2 (line 18, /tmp/tmpddffo2u4/rules/GenerateFigures.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule Figure3 (line 49, /tmp/tmpddffo2u4/rules/GenerateFigures.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule Figure4 (line 81, /tmp/tmpddffo2u4/rules/GenerateFigures.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule Figurecomparednds (line 111, /tmp/tmpddffo2u4/rules/GenerateFigures.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule Figurebinsize (line 137, /tmp/tmpddffo2u4/rules/GenerateFigures.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule Figure5 (line 158, /tmp/tmpddffo2u4/rules/GenerateFigures.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule FigureCloneSizeData2 (line 183, /tmp/tmpddffo2u4/rules/GenerateFigures.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule FigureCloneSizeSims (line 206, /tmp/tmpddffo2u4/rules/GenerateFigures.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule FiguredNdSsimsdist (line 228, /tmp/tmpddffo2u4/rules/GenerateFigures.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule FigureCloneSizeSimsDist (line 250, /tmp/tmpddffo2u4/rules/GenerateFigures.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule FigureHitchikers (line 272, /tmp/tmpddffo2u4/rules/GenerateFigures.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule brms (line 1, /tmp/tmpddffo2u4/rules/clonesizefit.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule brmssites (line 26, /tmp/tmpddffo2u4/rules/clonesizefit.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule clonesizesims (line 52, /tmp/tmpddffo2u4/rules/clonesizefit.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule clonesizesimsdist (line 90, /tmp/tmpddffo2u4/rules/clonesizefit.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule clonesizedata (line 128, /tmp/tmpddffo2u4/rules/clonesizefit.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule clonesizedatacompare (line 153, /tmp/tmpddffo2u4/rules/clonesizefit.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 3,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1598708428.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmprw9zkf_g/Snakefile\":  Inline-formatted keyword \"singularity\" at line 33 had its comments relocated above it.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmprw9zkf_g/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 3:7: params:\n```\nwhile formatting code with black.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "nathanhaigh/snakemake-tutorial",
    "linting": "Lints for snakefile /tmp/tmprw9zkf_g/Snakefile:\n    * Path composition with \u0027+\u0027 in line 135:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 210:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 2:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 35:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 112:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 126:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Deprecated singularity directive used for container definition in line 33.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_chromosome (line 5, /tmp/tmprw9zkf_g/rules/setup_data.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule extract_chromosome_subregion (line 44, /tmp/tmprw9zkf_g/rules/setup_data.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule extract_reads (line 83, /tmp/tmprw9zkf_g/rules/setup_data.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule index_fasta (line 129, /tmp/tmprw9zkf_g/rules/setup_data.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc_raw (line 94, /tmp/tmprw9zkf_g/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule multiqc_raw (line 130, /tmp/tmprw9zkf_g/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_trimmomatic_pe_adapters (line 161, /tmp/tmprw9zkf_g/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule trimmomatic_pe (line 188, /tmp/tmprw9zkf_g/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc_trimmed (line 231, /tmp/tmprw9zkf_g/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule multiqc_trimmed (line 263, /tmp/tmprw9zkf_g/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bwa_index (line 294, /tmp/tmprw9zkf_g/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule bwa_mem (line 340, /tmp/tmprw9zkf_g/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param index is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 3,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1587844912.0
  },
  {
    "data_format": 1,
    "description": "Germline Variant Calling Pipeline built in Snakemake",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "oskarvid/snakemake_germline_legacy",
    "linting": "Lints for snakefile /tmp/tmpnr4kwykq/Snakefile:\n    * Absolute path \"/references/Homo_sapiens_assembly38.fasta\" in line 17:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/Homo_sapiens_assembly38.fasta\" in line 29:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/Homo_sapiens_assembly38.fasta\" in line 50:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/Homo_sapiens_assembly38.fasta\" in line 101:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/dbsnp_146.hg38.vcf.gz\" in line 102:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/1000G_phase1.snps.high_confidence.hg38.vcf.gz\" in line 103:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz\" in line 104:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/Homo_sapiens_assembly38.fasta\" in line 137:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/Homo_sapiens_assembly38.fasta\" in line 157:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/Homo_sapiens_assembly38.fasta\" in line 188:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/Homo_sapiens_assembly38.fasta\" in line 221:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/Homo_sapiens_assembly38.fasta\" in line 250:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/dbsnp_146.hg38.vcf.gz\" in line 251:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/1000G_phase1.snps.high_confidence.hg38.vcf.gz\" in line 252:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/1000G_omni2.5.hg38.vcf.gz\" in line 253:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/hapmap_3.3.hg38.vcf.gz\" in line 254:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/Homo_sapiens_assembly38.fasta\" in line 280:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/dbsnp_146.hg38.vcf.gz\" in line 281:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz\" in line 282:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/Homo_sapiens_assembly38.fasta\" in line 306:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/references/Homo_sapiens_assembly38.fasta\" in line 326:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule BwaMem (line 21, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule FastqtoSam (line 48, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule MergeBamAlignment (line 91, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule MarkDup (line 158, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule BaseRecalibrator (line 182, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule GatherBQSR (line 225, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ApplyBQSR (line 244, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ApplyBQSRunmapped (line 283, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule GatherBamFiles (line 323, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule HaplotypeCaller (line 343, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule GatherVCFs (line 385, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule GenotypeGVCFs (line 405, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule GatherVCFs2 (line 438, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule VariantRecalibratorSNP (line 458, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule VariantRecalibratorINDEL (line 515, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ApplyVqsrSnp (line 566, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ApplyVqsrIndel (line 606, /tmp/tmpnr4kwykq/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 3,
    "subscribers_count": 2,
    "topics": [
      "bwa",
      "snakemake",
      "pipeline"
    ],
    "updated_at": 1573430022.0
  },
  {
    "data_format": 1,
    "description": "RNA Biology Pipeline to Characterize protein-RNA Interactions",
    "formatting": "[WARNING] In file \"/tmp/tmpq4oe9ec7/workflow/Snakefile\":  Keyword \"input\" at line 303 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmpq4oe9ec7/workflow/Snakefile\":  \u0027TypeError: can\u0027t multiply sequence by non-int of type \u0027NoneType\u0027\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n[INFO] 1 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "RBL-NCI/iCLIP",
    "linting": "KeyError in line 35 of /tmp/tmpq4oe9ec7/workflow/Snakefile:\n\u0027source_dir\u0027\n  File \"/tmp/tmpq4oe9ec7/workflow/Snakefile\", line 35, in \u003cmodule\u003e\n",
    "stargazers_count": 3,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1612792793.0
  },
  {
    "data_format": 1,
    "description": "minimal example to demonstrate flexible targeting in snakemake",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "bluegenes/2020-flexible-targets-snakemake",
    "linting": "Lints for rule A (line 38, /tmp/tmpx5cq25tb/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule B (line 59, /tmp/tmpx5cq25tb/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 3,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1587592116.0
  },
  {
    "data_format": 1,
    "description": "quantify-virome: identify and quantify viruses from metagenomic shotgun sequences",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "avilab/quantify-virome",
    "linting": "FileNotFoundError in line 21 of /tmp/tmpnqvxh5jk/Snakefile:\n[Errno 2] No such file or directory: \u0027samples.tsv\u0027\n  File \"/tmp/tmpnqvxh5jk/Snakefile\", line 21, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 605, in read_csv\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 457, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 814, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1045, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1862, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1357, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 639, in get_handle\n",
    "stargazers_count": 3,
    "subscribers_count": 1,
    "topics": [
      "snakemake-workflows",
      "virome",
      "metagenomics",
      "metagenomic-pipeline",
      "snakemake",
      "virome-workflow",
      "taxonomy"
    ],
    "updated_at": 1610656983.0
  },
  {
    "data_format": 1,
    "description": "snakemake pipeline for Hi-C post-processing",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n[INFO] 2 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "open2c/quaich",
    "linting": "ModuleNotFoundError in line 5 of /tmp/tmp3rf9aeey/workflow/Snakefile:\nNo module named \u0027cooler\u0027\n  File \"/tmp/tmp3rf9aeey/workflow/Snakefile\", line 5, in \u003cmodule\u003e\n",
    "stargazers_count": 3,
    "subscribers_count": 1,
    "topics": [
      "workflow",
      "snakemake",
      "analysis",
      "hi-c"
    ],
    "updated_at": 1613675520.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow to run transdecoder + trinotate",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jlanga/smsk_trinotate",
    "linting": "Lints for snakefile /tmp/tmpqjuu1bcp/Snakefile:\n    * Deprecated singularity directive used for container definition in line 18.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpqjuu1bcp/src/snakefiles/db.smk:\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpqjuu1bcp/src/snakefiles/transdecoder.smk:\n    * Path composition with \u0027+\u0027 in line 9:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 14:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 36:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 42:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 67:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 68:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 72:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 74:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 96:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 100:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpqjuu1bcp/src/snakefiles/trinotate.smk:\n    * Path composition with \u0027+\u0027 in line 8:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 20:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 41:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 75:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 96:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 123:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 127:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 129:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 151:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 158:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 196:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 219:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule unzip (line 1, /tmp/tmpqjuu1bcp/src/snakefiles/generic.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule faidx_fa (line 24, /tmp/tmpqjuu1bcp/src/snakefiles/generic.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule faidx_fasta (line 48, /tmp/tmpqjuu1bcp/src/snakefiles/generic.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule faidx_pep (line 72, /tmp/tmpqjuu1bcp/src/snakefiles/generic.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule faidx_cds (line 96, /tmp/tmpqjuu1bcp/src/snakefiles/generic.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule clean (line 1, /tmp/tmpqjuu1bcp/src/snakefiles/clean.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule raw_link_assembly (line 1, /tmp/tmpqjuu1bcp/src/snakefiles/raw.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule db_parse_uniprot_sprot (line 1, /tmp/tmpqjuu1bcp/src/snakefiles/db.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule transdecoder_split_longest_orfs (line 51, /tmp/tmpqjuu1bcp/src/snakefiles/transdecoder.smk):\n    * Shell command directly uses variable TRANSDECODER from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule trinotate_split_assembly (line 3, /tmp/tmpqjuu1bcp/src/snakefiles/trinotate.smk):\n    * Shell command directly uses variable TRINOTATE from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule trinotate_split_proteome (line 114, /tmp/tmpqjuu1bcp/src/snakefiles/trinotate.smk):\n    * Shell command directly uses variable TRINOTATE from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 3,
    "subscribers_count": 1,
    "topics": [
      "transcriptome",
      "snakemake",
      "snakemake-workflows",
      "trinity",
      "transdecoder",
      "trinotate",
      "blast",
      "hmmscan",
      "sqlite"
    ],
    "updated_at": 1595859454.0
  },
  {
    "data_format": 1,
    "description": "ESI for \"Coarse-grained modelling for soft matter scattering\"",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "arm61/thesis",
    "linting": "Lints for snakefile /tmp/tmpyuvs0vx7/Snakefile:\n    * Path composition with \u0027+\u0027 in line 10:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 16:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 158:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 159:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 160:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 161:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 162:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 163:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 164:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 165:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 166:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 167:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 168:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 235:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 515:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 533:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 552:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 571:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 734:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 746:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 758:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 770:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 782:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 794:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 806:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 818:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 846:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 873:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 900:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 927:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 954:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 981:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1008:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1035:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1062:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1089:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1108:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1135:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1162:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1884:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1904:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1915:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule latexclean (line 183, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean_all (line 238, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule thesis (line 268, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule theory_figues (line 323, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fake_fig (line 348, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule exp_fig (line 371, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fakeassess_fig (line 395, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule realassess_fig (line 465, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule realrandassess_fig (line 510, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule compchi_fig (line 555, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule scaling_fig (line 588, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dppc_xray_analysis (line 612, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dmpc_xray_analysis (line 641, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dlpc_xray_analysis (line 670, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dmpg_xray_analysis (line 699, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dppc_xray_plotting (line 728, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dmpc_xray_plotting (line 759, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dlpc_xray_plotting (line 791, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dmpg_xray_plotting (line 823, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dppc_neutron_15_analysis (line 855, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dppc_neutron_20_analysis (line 885, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dmpc_neutron_20_analysis (line 915, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dmpc_neutron_25_analysis (line 945, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dspc_neutron_20_analysis (line 975, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dspc_neutron_30_analysis (line 1007, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dspc_neutron_40_analysis (line 1039, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dspc_neutron_50_analysis (line 1071, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dspc_neutron_20_plotting (line 1103, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dspc_neutron_30_plotting (line 1128, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dspc_neutron_40_plotting (line 1153, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dspc_neutron_50_plotting (line 1178, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dppc_neutron_15_plotting (line 1203, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dppc_neutron_20_plotting (line 1228, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dmpc_neutron_20_plotting (line 1253, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dmpc_neutron_25_plotting (line 1278, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule martini_dspc_20_analysis (line 1303, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule martini_dspc_30_analysis (line 1343, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule martini_dspc_40_analysis (line 1383, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule martini_dspc_50_analysis (line 1423, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule berger_dspc_20_analysis (line 1463, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule berger_dspc_30_analysis (line 1503, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule berger_dspc_40_analysis (line 1543, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule berger_dspc_50_analysis (line 1583, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_20_analysis (line 1623, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_30_analysis (line 1663, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_30_analysis_short (line 1703, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_40_analysis (line 1735, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_50_analysis (line 1775, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule martini_dspc_20_tail (line 1815, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule martini_dspc_30_tail (line 1848, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule martini_dspc_40_tail (line 1881, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule martini_dspc_50_tail (line 1914, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule berger_dspc_20_tail (line 1947, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule berger_dspc_30_tail (line 1980, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule berger_dspc_40_tail (line 2013, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule berger_dspc_50_tail (line 2046, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_20_tail (line 2079, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_30_tail (line 2112, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_40_tail (line 2145, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_50_tail (line 2178, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule martini_dspc_20_wph (line 2211, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule martini_dspc_30_wph (line 2244, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule martini_dspc_40_wph (line 2277, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule martini_dspc_50_wph (line 2310, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule berger_dspc_20_wph (line 2343, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule berger_dspc_30_wph (line 2376, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule berger_dspc_40_wph (line 2409, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule berger_dspc_50_wph (line 2442, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_20_wph (line 2475, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_30_wph (line 2508, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_40_wph (line 2541, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_50_wph (line 2574, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_30_nd (line 2607, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_30_nd_plot (line 2642, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_20_nd (line 2668, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_20_nd_plot (line 2703, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_40_nd (line 2729, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_40_nd_plot (line 2764, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_50_nd (line 2790, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule slipids_dspc_50_nd_plot (line 2825, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule spread_30 (line 2851, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule spread_20 (line 2884, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule spread_40 (line 2917, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule spread_50 (line 2950, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule pear_plotting (line 2983, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule martini_order (line 3018, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule apm_plotting (line 3051, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule growth_plot (line 3075, /tmp/tmpyuvs0vx7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 3,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1590992720.0
  },
  {
    "data_format": 1,
    "description": "GIAB pipeline for benchmarking genome assemblies",
    "formatting": "[WARNING] In file \"/tmp/tmpb6dloxm0/workflow/Snakefile\":  Keyword \"input\" at line 249 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpb6dloxm0/workflow/Snakefile\":  Keyword \"input\" at line 307 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpb6dloxm0/workflow/Snakefile\":  Keyword \"input\" at line 349 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "usnistgov/giab-asm-benchmarking",
    "linting": "AttributeError in line 304 of /tmp/tmpb6dloxm0/workflow/Snakefile:\n\u0027Rules\u0027 object has no attribute \u0027get_benchmark_bed_index\u0027\n  File \"/tmp/tmpb6dloxm0/workflow/Snakefile\", line 304, in \u003cmodule\u003e\n",
    "stargazers_count": 3,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1613589503.0
  },
  {
    "data_format": 1,
    "description": "This is an human RNAseq variant calling workflow, following the GATK pipeline. Also includes ADAR-site elimination.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "durrantmm/rnaseq_variant_calling_workflow",
    "linting": "Lints for snakefile /tmp/tmp6c_rvxpz/Snakefile:\n    * Path composition with \u0027+\u0027 in line 254:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule all (line 39, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule create_genome_dictionary (line 52, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule index_genome (line 72, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bgzip_dbsnp_vcf (line 92, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule tabix_dbsnp_vcf (line 112, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_exons_bed (line 132, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule star_genome (line 153, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule star_align (line 185, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param out_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule add_read_groups (line 233, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mark_duplicates (line 253, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule split_reads (line 274, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule recalibrate_bases (line 297, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule print_reads (line 322, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule haplotype_caller (line 344, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule variant_quality_filter (line 365, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule make_adar_bed (line 386, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule filter_adar_sites (line 410, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter_heterozygous_snps_only (line 431, /tmp/tmp6c_rvxpz/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 3,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1580595897.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline to detect binding sites of RNA-binding proteins on a given RNA sequence.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "zavolanlab/binding-scanner",
    "linting": "KeyError in line 45 of /tmp/tmpruz43nwd/workflow/Snakefile:\n\u0027outdir\u0027\n  File \"/tmp/tmpruz43nwd/workflow/Snakefile\", line 45, in \u003cmodule\u003e\n",
    "stargazers_count": 3,
    "subscribers_count": 3,
    "topics": [
      "rna",
      "rna-binding-proteins"
    ],
    "updated_at": 1601658846.0
  },
  {
    "data_format": 1,
    "description": "Unified sub-grid-scale parametrization using neural networks",
    "formatting": "[INFO] 2 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "nbren12/nn_atmos_param",
    "linting": "ModuleNotFoundError in line 3 of /tmp/tmpl4wtipsj/Snakefile:\nNo module named \u0027xarray\u0027\n  File \"/tmp/tmpl4wtipsj/Snakefile\", line 3, in \u003cmodule\u003e\n",
    "stargazers_count": 3,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1607254069.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "NCBI-Codeathons/MASCARA",
    "linting": "Lints for snakefile /tmp/tmp4zfjlcvd/Snakefile:\n    * Deprecated singularity directive used for container definition in line 12.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 28.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 41.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 54.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 69.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule actionet_rna (line 13, /tmp/tmp4zfjlcvd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cicero (line 41, /tmp/tmp4zfjlcvd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule chromVAR (line 74, /tmp/tmp4zfjlcvd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule actionet_inferred_rna (line 102, /tmp/tmp4zfjlcvd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule run_match_cellstates (line 130, /tmp/tmp4zfjlcvd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 3,
    "subscribers_count": 7,
    "topics": [
      "sc-nygc-jan2020",
      "cshl-codeathon-2020"
    ],
    "updated_at": 1607040070.0
  },
  {
    "data_format": 1,
    "description": "A Snakemake and Docker based pipeline to create a Neo4j graph. ",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "elswob/neo4j-build-pipeline",
    "linting": "ModuleNotFoundError in line 4 of /tmp/tmpimgfod6u/workflow/Snakefile:\nNo module named \u0027environs\u0027\n  File \"/tmp/tmpimgfod6u/workflow/Snakefile\", line 4, in \u003cmodule\u003e\n  File \"/tmp/tmpimgfod6u/workflow/scripts/utils/settings.py\", line 1, in \u003cmodule\u003e\n",
    "stargazers_count": 3,
    "subscribers_count": 2,
    "topics": [
      "neo4j",
      "docker",
      "snakemake",
      "python"
    ],
    "updated_at": 1611945852.0
  },
  {
    "data_format": 1,
    "description": "A Snakemake pipeline to analyse RNA-Seq reads",
    "formatting": "[WARNING] In file \"/tmp/tmpknuwc4w7/Snakefile\":  Keyword \"input\" at line 74 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpknuwc4w7/Snakefile\":  Keyword \"shell\" at line 281 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "KoesGroup/Snakemake_hisat-DESeq",
    "linting": "Lints for snakefile /tmp/tmpknuwc4w7/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 61:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 71:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 72:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 76:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 102:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 119:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 120:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 121:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 125:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 148:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 150:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 154:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 162:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 164:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 165:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 166:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 168:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 191:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 192:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 194:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 207:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 225:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 226:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 247:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 268:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 271:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 14:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 61:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 63:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 150:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule get_genome_fasta (line 99, /tmp/tmpknuwc4w7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable genome_url from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule get_transcriptome_gtf (line 120, /tmp/tmpknuwc4w7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable transcriptome_gtf_url from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule index (line 192, /tmp/tmpknuwc4w7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule hisat_mapping (line 222, /tmp/tmpknuwc4w7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param indexName is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule create_counts_table (line 265, /tmp/tmpknuwc4w7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule DESeq2_analysis (line 294, /tmp/tmpknuwc4w7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule results_function (line 329, /tmp/tmpknuwc4w7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter_for_plots (line 369, /tmp/tmpknuwc4w7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_plots (line 410, /tmp/tmpknuwc4w7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 3,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1600240776.0
  },
  {
    "data_format": 1,
    "description": "RNA-seq pipeline for AML diagnostics developed in collaboration with the LUMC Hematology department",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "LUMC/HAMLET",
    "linting": "KeyError in line 28 of /tmp/tmpcraq6pls/includes/qc-seq/Snakefile:\n\u0027samples\u0027\n  File \"/tmp/tmpcraq6pls/Snakefile\", line 7, in \u003cmodule\u003e\n  File \"/tmp/tmpcraq6pls/includes/qc-seq/Snakefile\", line 59, in \u003cmodule\u003e\n  File \"/tmp/tmpcraq6pls/includes/qc-seq/Snakefile\", line 60, in \u003cgenexpr\u003e\n  File \"/tmp/tmpcraq6pls/includes/qc-seq/Snakefile\", line 28, in get_readgroup_per_sample\n",
    "stargazers_count": 3,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1606137588.0
  },
  {
    "data_format": 1,
    "description": "single-cell sequencing of flu infected cells enriched for IFN+ ones",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jbloomlab/IFNsorted_flu_single_cell",
    "linting": "Lints for snakefile /tmp/tmpz906bayl/Snakefile:\n    * Path composition with \u0027+\u0027 in line 43:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 50:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 15:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 43:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule make_paper (line 57, /tmp/tmpz906bayl/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PAPER_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable PAPER from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable PAPER from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable PAPER from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable PAPER from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule analyze_IFN_vs_viral_mutations (line 96, /tmp/tmpz906bayl/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PAPER_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable R_FIGS_SUBDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule call_PacBio_mutations (line 142, /tmp/tmpz906bayl/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PAPER_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable PYTHON_FIGS_SUBDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule get_PacBio_CCSs (line 189, /tmp/tmpz906bayl/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_PacBio_subreads (line 236, /tmp/tmpz906bayl/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_cellgene_matrix (line 254, /tmp/tmpz906bayl/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 3,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1606116910.0
  },
  {
    "data_format": 1,
    "description": "scRNA-seq analysis beyond gene annotations using transcriptionally active regions (TARs) generated from sequence alignment data",
    "formatting": "[ERROR] In file \"/tmp/tmp91c4e602/Snakefile\":  \u0027EmptyContextError: L46: rule all has no keywords attached to it.\u0027\n[INFO] In file \"/tmp/tmp91c4e602/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "fw262/TAR-scRNA-seq",
    "linting": "Lints for snakefile /tmp/tmp91c4e602/Snakefile:\n    * Absolute path \"/{sample}_R1.fastq.gz\" in line 104:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}_R2.fastq.gz\" in line 105:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/^#/ d\" in line 361:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule createGenomeDict (line 68, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PICARD from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generateStar (line 95, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable STAREXEC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable CORES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule convertToRefFlat1 (line 137, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable gtfToGenePred from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule fastq_to_sam (line 166, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable TMPDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable PICARD from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule stage1 (line 199, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable SAMPLEWDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable DROPSEQ from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SAMPLEWDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable DROPSEQ from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SAMPLEWDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable DROPSEQ from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable DROPSEQ from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SAMPLEWDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable DROPSEQ from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SAMPLEWDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule sam_to_fastq (line 318, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable TMPDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable PICARD from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule STAR_align (line 344, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable STAREXEC from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable CORES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule sort (line 385, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable TMPDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable PICARD from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable TMPDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule sortCoord (line 414, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable TMPDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable PICARD from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable TMPDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule indexBamFiles (line 443, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mergeBamFiles (line 464, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule calcHMMbed (line 489, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable CORES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable MERGEBP from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable THRESH from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule calcHMMrefFlat (line 513, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule MergeBamAlignment (line 535, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable TMPDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable PICARD from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable GENOMEREF from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule stage3 (line 571, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable DROPSEQ from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule stage3_withDir (line 605, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable DROPSEQ from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule stage3_noDir (line 639, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable DROPSEQ from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule extract_expression (line 678, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable DROPSEQ from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule getCellsList (line 710, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule extract_HMM_expression_withDir (line 739, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable DROPSEQ from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SAMPLEWDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule extract_HMM_expression_noDir (line 771, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable DROPSEQ from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SAMPLEWDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule getDiffMarkers (line 805, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule getDiffSeqsToBlast (line 829, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule getDiffSeqsToBlastFa (line 855, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ruleBlast (line 881, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable CORES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule labelDiffuTARs (line 909, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule getMatsSteps (line 932, /tmp/tmp91c4e602/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 3,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1614281905.0
  },
  {
    "data_format": 1,
    "description": "Pipeline for reproduction of NealeLab 2018 UKB GWAS",
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "related-sciences/ukb-gwas-pipeline-nealelab",
    "linting": "DefaultCredentialsError in line 6 of /tmp/tmp5mdfsoh5/Snakefile:\nCould not automatically determine credentials. Please set GOOGLE_APPLICATION_CREDENTIALS or explicitly create credentials and re-run the application. For more information, please see https://cloud.google.com/docs/authentication/getting-started\n  File \"/tmp/tmp5mdfsoh5/Snakefile\", line 6, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/snakemake/remote/GS.py\", line 124, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/google/cloud/storage/client.py\", line 122, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/google/cloud/client.py\", line 249, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/google/cloud/client.py\", line 201, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/google/cloud/client.py\", line 216, in _determine_default\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/google/cloud/_helpers.py\", line 186, in _determine_default_project\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/google/auth/_default.py\", line 356, in default\n",
    "stargazers_count": 3,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1611231921.0
  },
  {
    "data_format": 1,
    "description": "Bulk Typing of Bacterial Species down to Strain Level",
    "formatting": "[ERROR] In file \"/tmp/tmp1c68j_by/rules/LCPs.smk\":  \u0027SyntaxError: L80: Unrecognised keyword \u0027png1\u0027 in rule LCPsCluster definition\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "lauramilena3/On-rep-seq",
    "linting": "Lints for snakefile /tmp/tmp1c68j_by/Snakefile:\n    * Absolute path \"/bin/bash\" in line 1:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/ON-rep-seq_DATA\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{sample}\" in line 19:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/LCP_plots.pdf\" in line 30:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/LCP_clustering_heatmaps.html\" in line 31:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/LCP_clustering_heatmaps.ipynb\" in line 32:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/check.txt\" in line 33:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 30:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 31:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 32:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp1c68j_by/rules/demultiplex.smk:\n    * Absolute path \"/01_porechopped_data/{sample}\" in line 7:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/01_porechopped_data/temporal_{barcode}.fastq\" in line 28:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/01_porechopped_data\" in line 30:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/01_porechopped_data/temporal_{barcode}.fastq\" in line 42:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/01_porechopped_data/{barcode}_demultiplexed.fastq\" in line 44:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/01_porechopped_data/rejected_{barcode}.fastq\" in line 46:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 26:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 30:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 42:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 44:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 46:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp1c68j_by/rules/LCPs.smk:\n    * Absolute path \"/01_porechopped_data/{barcode}_demultiplexed.fastq\" in line 3:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/{barcode}.txt\" in line 5:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs\" in line 7:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/{barcode}.txt\" in line 14:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/LCP_plots.pdf\" in line 16:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\")[-1].split(\" in line 45:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/LCP_plots.pdf\" in line 50:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/{barcode}.txt\" in line 54:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/03_LCPs_peaks/peaks_{barcode}.txt\" in line 56:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/03_LCPs_peaks/peaks_{barcode}.pdf\" in line 57:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/{barcode}.txt\" in line 68:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/LCP_clustering_heatmaps.ipynb\" in line 70:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/LCP_clustering_heatmaps.html\" in line 71:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/LCP_clustering_heatmap_large.png\" in line 72:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/LCP_clustering_heatmap.png\" in line 73:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/LCP_clustering_flowgrams_clustering_order.pdf\" in line 74:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/LCPsClusteringData\" in line 75:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs/r_saved_images\" in line 76:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/02_LCPs\" in line 78:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/*.txt \" in line 89:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 14:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 16:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 50:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 54:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 56:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 57:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 68:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 70:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 71:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 72:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 73:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 74:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 75:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 76:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 78:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp1c68j_by/rules/peakCorrection.smk:\n    * Absolute path \"/03_LCPs_peaks/peaks_{barcode}.txt\" in line 3:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/input-peaks-{barcode}.txt\" in line 5:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/01_porechopped_data\" in line 9:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/03_LCPs_peaks\" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/input-peaks-{barcode}.txt\" in line 29:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fixed_{barcode}.txt\" in line 31:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/03_LCPs_peaks\" in line 33:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/fixed_{barcode}.txt\" in line 54:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/vsearch_fixed_{barcode}.txt\" in line 56:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/03_LCPs_peaks\" in line 58:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/03_LCPs_peaks/00_peak_consensus\" in line 59:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 5:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 9:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 29:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 33:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 54:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 58:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp1c68j_by/rules/taxonomyAssignment.smk:\n    * Absolute path \"/vsearch_fixed_{barcode}.txt\" in line 3:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/merged_fixed_{barcode}.fasta\" in line 5:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/03_LCPs_peaks/01_taxonomic_assignments/taxonomy_{barcode}.txt\" in line 6:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/03_LCPs_peaks/00_peak_consensus\" in line 8:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/03_LCPs_peaks/01_taxonomic_assignments\" in line 9:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/03_LCPs_peaks/01_taxonomic_assignments/taxonomy_assignments.txt\" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/03_LCPs_peaks/01_taxonomic_assignments/taxonomy_{barcode}.txt\" in line 29:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/check.txt\" in line 31:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/03_LCPs_peaks\" in line 33:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 8:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 9:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 10:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 29:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 31:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule demultiplexing_1 (line 1, /tmp/tmp1c68j_by/rules/demultiplex.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable BARCODES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param output_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule merge_first_demultiplexing (line 51, /tmp/tmp1c68j_by/rules/demultiplex.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param output_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule demultiplexing_2 (line 87, /tmp/tmp1c68j_by/rules/demultiplex.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule getLCPs (line 1, /tmp/tmp1c68j_by/rules/LCPs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plotLCPs (line 27, /tmp/tmp1c68j_by/rules/LCPs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule peakPicker (line 74, /tmp/tmp1c68j_by/rules/LCPs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule LCPsCluster (line 105, /tmp/tmp1c68j_by/rules/LCPs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param work_directory is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule cutAdapt (line 1, /tmp/tmp1c68j_by/rules/peakCorrection.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param peaks is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule correctReads (line 56, /tmp/tmp1c68j_by/rules/peakCorrection.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule vSearch (line 110, /tmp/tmp1c68j_by/rules/peakCorrection.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule taxonomyAssignment (line 1, /tmp/tmp1c68j_by/rules/taxonomyAssignment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param taxonomy is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule checkOutputs (line 54, /tmp/tmp1c68j_by/rules/taxonomyAssignment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param peaks is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 3,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1594993695.0
  },
  {
    "data_format": 1,
    "description": "Scripts and results for estimating the dates of integrated HIV viruses using RNA samples from the same host",
    "formatting": "[WARNING] In file \"/tmp/tmpn9b1zrb7/Snakefile\":  Keyword \"shell\" at line 107 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "veg/ogv-dating",
    "linting": "Lints for snakefile /tmp/tmpn9b1zrb7/Snakefile:\n    * Absolute path \"/usr/local/bin/hyphy\" in line 12:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/usr/local/bin/muscle\" in line 13:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/usr/local/bin/raxml-ng\" in line 14:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/usr/local/bin/FastTree\" in line 15:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule read_qc (line 50, /tmp/tmpn9b1zrb7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_protein_msa_rna (line 79, /tmp/tmpn9b1zrb7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_protein_msa_combined (line 103, /tmp/tmpn9b1zrb7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_codon_msa_rna (line 127, /tmp/tmpn9b1zrb7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_codon_msa_combined (line 152, /tmp/tmpn9b1zrb7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule infer_ml_rna_tree (line 177, /tmp/tmpn9b1zrb7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule infer_ml_tree (line 206, /tmp/tmpn9b1zrb7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule perform_placement (line 235, /tmp/tmpn9b1zrb7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule perform_classification (line 269, /tmp/tmpn9b1zrb7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 3,
    "subscribers_count": 5,
    "topics": [],
    "updated_at": 1613170116.0
  },
  {
    "data_format": 1,
    "description": "Code for market value paper with Lina Reichenberg",
    "formatting": "[ERROR] In file \"/tmp/tmpvth_rgk6/Snakefile\":  \u0027NoParametersError: L42: In input definition.\u0027\n[INFO] In file \"/tmp/tmpvth_rgk6/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "nworbmot/market-value",
    "linting": "Lints for snakefile /tmp/tmpvth_rgk6/Snakefile:\n    * Absolute path \"/\" + config[\u0027run\u0027] + \" in line 9:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\" + config[\u0027run\u0027] + \" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\u0027 + config[\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/configs/config.yaml\" in line 18:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\" + config[\u0027run\u0027] + \" in line 20:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\" + config[\u0027run\u0027] + \" in line 32:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\" + config[\u0027run\u0027] + \" in line 35:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/\u0027 + config[\" in line 43:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/configs/config.yaml\" in line 43:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 1:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 9:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule plot_summary (line 9, /tmp/tmpvth_rgk6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule solve_network (line 33, /tmp/tmpvth_rgk6/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_summary (line 64, /tmp/tmpvth_rgk6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule copy_config (line 89, /tmp/tmpvth_rgk6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 3,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1584096057.0
  },
  {
    "data_format": 1,
    "description": "CallVars is an automated NGS workflow that takes paired-end sample FastQ\u0027s directly to a handful clinically relevant variants (SNPs+Indels) of interest.  ",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "IAnalyzeGenomes/CallVars",
    "linting": "Lints for snakefile /tmp/tmppv_asgwm/rules/Funcotator.py:\n    * Absolute path \"/ --ref-version \" in line 16:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule BWA_Mapping (line 3, /tmp/tmppv_asgwm/rules/Mapping.py):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule SAMTOOLS_Sort (line 3, /tmp/tmppv_asgwm/rules/BamPrep.py):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule GATK_MarkDuplicates (line 34, /tmp/tmppv_asgwm/rules/BamPrep.py):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule SAMTOOLS_Index (line 60, /tmp/tmppv_asgwm/rules/BamPrep.py):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule SAMTOOLS_BCF (line 3, /tmp/tmppv_asgwm/rules/SamtoolsVC.py):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule SAMTOOLS_VCF (line 35, /tmp/tmppv_asgwm/rules/SamtoolsVC.py):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule Bedtools_PerBaseCov (line 2, /tmp/tmppv_asgwm/rules/PerBaseCov.py):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule GATK_HaplotypeCaller (line 3, /tmp/tmppv_asgwm/rules/HaplotypeCaller.py):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule GATK_Funcotator_Germline (line 3, /tmp/tmppv_asgwm/rules/Funcotator.py):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 3,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614632955.0
  },
  {
    "data_format": 1,
    "description": "snakemake workflow for random forest based feature selection on chromHMM data  ",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "crazyhottommy/pyflow-chromForest",
    "linting": "Lints for rule tile_seg (line 36, /tmp/tmpj6an_eoi/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule state_recode_seg (line 66, /tmp/tmpj6an_eoi/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule combine_sample_segs (line 104, /tmp/tmpj6an_eoi/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule split_epilogos_input_by_chr (line 132, /tmp/tmpj6an_eoi/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule run_epilogos_by_chr (line 163, /tmp/tmpj6an_eoi/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule merge_epilogos (line 194, /tmp/tmpj6an_eoi/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 3,
    "subscribers_count": 1,
    "topics": [
      "snakemake-workflows",
      "chromhmm",
      "epigenomics",
      "machine-learning"
    ],
    "updated_at": 1539946273.0
  },
  {
    "data_format": 1,
    "description": "snakemake workflow for bulk RNA-seq workflow using STAR-edgeR ",
    "formatting": "[WARNING] In file \"/tmp/tmp24l4ufsd/Snakefile\":  Keyword \"input\" at line 84 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmp24l4ufsd/Snakefile\":  \u0027NoParametersError: L91: In input definition.\u0027\n[INFO] In file \"/tmp/tmp24l4ufsd/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "vari-bbc/rnaseq_workflow",
    "linting": "Lints for snakefile /tmp/tmp24l4ufsd/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 405:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 532:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule mergeLanesAndRename_SE (line 96, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mergeLanesAndRename_PE (line 127, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fastq_screen_PE (line 168, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fastq_screen_SE (line 216, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule trim_galore_PE (line 268, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule trim_galore_SE (line 337, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule STAR (line 409, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param outprefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule multiqc (line 504, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule edgeR (line 569, /tmp/tmp24l4ufsd/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule addRG (line 610, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule markdups (line 677, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule splitncigar (line 735, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule base_recalibrate (line 792, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule applyBQSR (line 855, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule haplotypecaller (line 917, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combinevar (line 989, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule jointgeno (line 1049, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_and_filter_vcf (line 1106, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule variant_annot (line 1235, /tmp/tmp24l4ufsd/Snakefile):\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule snprelate (line 1333, /tmp/tmp24l4ufsd/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 4,
    "subscribers_count": 3,
    "topics": [
      "snakemake",
      "rnaseq",
      "pipeline"
    ],
    "updated_at": 1614130004.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ctb/2018-snakemake-cli",
    "linting": "KeyError in line 1 of /tmp/tmp853rh89p/Snakefile:\n\u0027name\u0027\n  File \"/tmp/tmp853rh89p/Snakefile\", line 1, in \u003cmodule\u003e\n",
    "stargazers_count": 4,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1595453385.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for processing exome data.",
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jrderuiter/snakemake-exome",
    "linting": "Lints for snakefile /tmp/tmp84rdgtk8/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp84rdgtk8/rules/input.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp84rdgtk8/rules/alignment.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp84rdgtk8/rules/qc.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule copy_input (line 56, /tmp/tmp84rdgtk8/rules/input.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_merge (line 234, /tmp/tmp84rdgtk8/rules/alignment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 302, /tmp/tmp84rdgtk8/rules/alignment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 52, /tmp/tmp84rdgtk8/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_stats (line 77, /tmp/tmp84rdgtk8/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 4,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1573224353.0
  },
  {
    "data_format": 1,
    "description": "Data analysis related to the bioconda paper",
    "formatting": "[WARNING] In file \"/tmp/tmp1r4b4s6s/Snakefile\":  Keyword \"shell\" at line 86 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "bioconda/bioconda-paper",
    "linting": "Lints for snakefile /tmp/tmp1r4b4s6s/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_package_data (line 49, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule collect_package_data (line 77, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule clone (line 101, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule git_log (line 127, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_dag (line 167, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule parse_git_log (line 191, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule collect_pr_data (line 215, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule collect_summaries (line 238, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_adddel (line 261, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_package_degree (line 281, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_dag (line 305, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_colored_dag (line 335, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_downloads (line 375, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_ecosystems (line 400, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_comparison (line 426, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_contributions (line 452, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_age_vs_downloads (line 476, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_turnaround (line 501, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule stats (line 527, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule author_list (line 552, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule author_list_tex (line 576, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fig1 (line 603, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fig2 (line 630, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule convert_svg (line 659, /tmp/tmp1r4b4s6s/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 4,
    "subscribers_count": 16,
    "topics": [
      "snakemake",
      "reproducibility",
      "bioconda",
      "analysis-workflows"
    ],
    "updated_at": 1588163248.0
  },
  {
    "data_format": 1,
    "description": "Transcriptome  assembly via digital normalization with khmer and Trinity",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jlanga/smsk_khmer_trinity",
    "linting": "AttributeError in line 26 of /tmp/tmpa5qa_yn0/src/snakefiles/raw.py:\ninvalid name for input, output, wildcard, params or log: reverse is reserved for internal use\n  File \"/tmp/tmpa5qa_yn0/Snakefile\", line 37, in \u003cmodule\u003e\n  File \"/tmp/tmpa5qa_yn0/src/snakefiles/raw.py\", line 26, in \u003cmodule\u003e\n",
    "stargazers_count": 4,
    "subscribers_count": 3,
    "topics": [
      "transcriptome-assembly",
      "ngs",
      "trinity",
      "khmer",
      "digital-normalization",
      "assembler",
      "transrate",
      "snakemake"
    ],
    "updated_at": 1595859289.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmpontutl1o/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 6:0:         pass\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmpontutl1o/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "mohimanilab/AssociationNetworks",
    "linting": "Lints for rule decoy_database (line 18, /tmp/tmpontutl1o/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule associations_serial (line 42, /tmp/tmpontutl1o/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule associations_decoy_serial (line 68, /tmp/tmpontutl1o/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fdr (line 243, /tmp/tmpontutl1o/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule tree_biclustering (line 266, /tmp/tmpontutl1o/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 4,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1575273758.0
  },
  {
    "data_format": 1,
    "description": "PyPSA Model of the South African Energy System",
    "formatting": "[WARNING] In file \"/tmp/tmpnfd3p44b/Snakefile\":  Keyword \"input\" at line 99 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "PyPSA/pypsa-za",
    "linting": "Lints for snakefile /tmp/tmpnfd3p44b/Snakefile:\n    * Absolute path \"/plots/scenario_{param}.html\" in line 13:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/networks/{cost}_{resarea}_{sectors}_{opts}.nc\" in line 109:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/networks/{cost}_{resarea}_{sectors}_{opts}.nc\" in line 121:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/plots/network_{cost}_{resarea}_{sectors}_{opts}_{attr}\" in line 125:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/plots/network_{cost}_{resarea}_{sectors}_{opts}_{attr}_ext\" in line 126:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/plots/scenario_{param}.html\" in line 137:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/plots\" in line 140:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/networks/{cost}_{resarea}_{sectors}_{opts}.nc\" in line 145:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/summaries/{cost}_{resarea}_{sectors}_{opts}\" in line 151:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 1:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 13:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 121:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 123:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 125:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 126:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 137:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 141:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 145:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule build_landuse_remove_protected_and_conservation_areas (line 25, /tmp/tmpnfd3p44b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_landuse_map_to_tech_and_supply_region (line 53, /tmp/tmpnfd3p44b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_population (line 83, /tmp/tmpnfd3p44b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_topology (line 133, /tmp/tmpnfd3p44b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule base_network (line 157, /tmp/tmpnfd3p44b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule add_electricity (line 185, /tmp/tmpnfd3p44b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule add_sectors (line 220, /tmp/tmpnfd3p44b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule solve_network (line 244, /tmp/tmpnfd3p44b/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_network (line 277, /tmp/tmpnfd3p44b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule scenario_comparison (line 301, /tmp/tmpnfd3p44b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param plot_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule make_summary (line 333, /tmp/tmpnfd3p44b/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 4,
    "subscribers_count": 6,
    "topics": [],
    "updated_at": 1611705213.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow to download and/or align reads to targets and produce useful outputs.",
    "formatting": "[ERROR] In file \"/tmp/tmp40cj9ajm/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 28:0: \u003cline number missing in source\u003e\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmp40cj9ajm/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "louiejtaylor/hisss",
    "linting": "KeyError in line 11 of /tmp/tmp40cj9ajm/Snakefile:\n\u0027io\u0027\n  File \"/tmp/tmp40cj9ajm/Snakefile\", line 11, in \u003cmodule\u003e\n",
    "stargazers_count": 4,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1601902657.0
  },
  {
    "data_format": 1,
    "description": "discover-virome: identify and quantify viruses from metagenomic assemblies",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n[INFO] 5 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "avilab/discover-virome",
    "linting": "FileNotFoundError in line 24 of /tmp/tmp9p7o8wed/Snakefile:\n[Errno 2] No such file or directory: \u0027samples.tsv\u0027\n  File \"/tmp/tmp9p7o8wed/Snakefile\", line 24, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 610, in read_csv\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 4,
    "subscribers_count": 1,
    "topics": [
      "virome",
      "virome-workflow",
      "snakemake",
      "snakemake-workflow",
      "metagenomic-analysis",
      "metagenomic-classification"
    ],
    "updated_at": 1611671697.0
  },
  {
    "data_format": 1,
    "description": ":snake::hamburger: A beginner\u0027s guide to modular snakemake workflows.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dohlee/snakemake-hamburger",
    "linting": "Lints for rule make_hamburger (line 11, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule buy_tomato (line 36, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule wash_tomato (line 51, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule buy_cucumber (line 70, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule buy_vinegar (line 85, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_vinegar (line 100, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule buy_onion (line 120, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule wash_onion (line 135, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule roast_onion (line 154, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule buy_cheese (line 173, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule buy_bun (line 188, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule warm_bun (line 203, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule buy_lettuce (line 222, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule wash_lettuce (line 237, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule buy_beef (line 256, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_patty (line 271, /tmp/tmpcaatj4rx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 4,
    "subscribers_count": 0,
    "topics": [
      "snakemake",
      "snakemake-workflow",
      "reproducible-research",
      "bioinformatics-pipeline"
    ],
    "updated_at": 1609773164.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipeline for amplicon sequencing using dada2",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "SilasK/16S-dada2",
    "linting": "KeyError in line 5 of /tmp/tmpv3x9rctd/Snakefile:\n\u0027sampletable\u0027\n  File \"/tmp/tmpv3x9rctd/Snakefile\", line 5, in \u003cmodule\u003e\n",
    "stargazers_count": 4,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1611088985.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "darneson/DropSeq",
    "linting": "Lints for snakefile /tmp/tmpvjtachou/Snakefile:\n    * Absolute path \"/PATH/TO/STAR/INDEX/FOR/GENOME\" in line 19:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/PATH/TO/REFERENCE/GENOME/FASTA/FILE\" in line 20:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/PATH/TO/REFERENCE/GENOME/GTF/FILE\" in line 21:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/PATH/TO/DROPSEQTOOLS/FOLDER\" in line 24:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/3rdParty/picard/picard.jar\" in line 34:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/PATH/TO/STAR/EXECUTABLE\" in line 35:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/PATH/TO/JAVA/EXECUTABLE\" in line 36:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Path composition with \u0027+\u0027 in line 25:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 49:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 68:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 82:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 95:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 109:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 123:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 137:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 151:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 166:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 182:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 196:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 211:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 224:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 238:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 255:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 2:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 49:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 68:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 82:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 95:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 109:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 123:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 137:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 151:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 166:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 182:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 196:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 211:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 224:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 238:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule fastq_to_bam (line 50, /tmp/tmpvjtachou/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable JAVA_distro from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable picard_jar from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule tag_cells (line 91, /tmp/tmpvjtachou/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable TagBamWithReadSequenceExtended from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule tag_molecules (line 123, /tmp/tmpvjtachou/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable TagBamWithReadSequenceExtended from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule filter_bam (line 155, /tmp/tmpvjtachou/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable FilterBAM from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule trim_starting_sequence (line 186, /tmp/tmpvjtachou/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable TrimStartingSequence from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule trim_poly_a (line 218, /tmp/tmpvjtachou/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PolyATrimmer from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule sam_to_fastq (line 251, /tmp/tmpvjtachou/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable picard_jar from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule star_alignment (line 282, /tmp/tmpvjtachou/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable STAR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule sort_aligned (line 315, /tmp/tmpvjtachou/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable picard_jar from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule merge_bam (line 348, /tmp/tmpvjtachou/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable picard_jar from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule tag_with_gene_exon (line 381, /tmp/tmpvjtachou/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable TagReadWithGeneExon from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule synth_err (line 413, /tmp/tmpvjtachou/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable DetectBeadSynthesisErrors from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable Number_Barcodes from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule duplicate_umi (line 446, /tmp/tmpvjtachou/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable GatherMolecularBarcodeDistributionByGene from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule tag_hist (line 477, /tmp/tmpvjtachou/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable BAMTagHistogram from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule dig_expr (line 510, /tmp/tmpvjtachou/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable DigitalExpression from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable Number_Core_Barcodes from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 4,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1579740374.0
  },
  {
    "data_format": 1,
    "description": "Brief tutorial for using Snakemake to create and submit jobs on a HPC cluster.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "SchlossLab/snakemake_cluster_tutorial",
    "linting": "Lints for rule clean (line 42, /tmp/tmpvc1s2cia/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule count_words (line 64, /tmp/tmpvc1s2cia/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_plot (line 86, /tmp/tmpvc1s2cia/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule zipf_test (line 108, /tmp/tmpvc1s2cia/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_archive (line 134, /tmp/tmpvc1s2cia/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 4,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614188537.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "taylorreiter/olive_genome",
    "linting": "ModuleNotFoundError in line 2 of /tmp/tmp4a4jinmj/blast.snakefile:\nNo module named \u0027pysam\u0027\n  File \"/tmp/tmp4a4jinmj/Snakefile\", line 5, in \u003cmodule\u003e\n  File \"/tmp/tmp4a4jinmj/blast.snakefile\", line 2, in \u003cmodule\u003e\n",
    "stargazers_count": 4,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1569622662.0
  },
  {
    "data_format": 1,
    "description": "A Snakemake pipeline for cellranger to process 10x single-cell RNAseq data",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "crazyhottommy/pyflow-cellranger",
    "linting": "Lints for snakefile /tmp/tmp6fzhv6ld/Snakefile:\n    * Absolute path \"/RunInfo.xml\" in line 21:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/RunInfo.xml\" in line 86:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/outs/fastq_path/\" + FILES[wildcards.sample][batch][1] + \" in line 125:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 34:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 119:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 1:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 30:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 99:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 119:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule download_raw (line 64, /tmp/tmp6fzhv6ld/Snakefile):\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n    * Param jobname is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule make_fastq (line 118, /tmp/tmp6fzhv6ld/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule count (line 177, /tmp/tmp6fzhv6ld/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 4,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1583491203.0
  },
  {
    "data_format": 1,
    "description": "Characterizing the neurogenomics of parental care in the rock dove",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "macmanes-lab/DoveParentsRNAseq",
    "linting": "Lints for rule wrangle (line 1, /tmp/tmpjmtsj4f6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fig1 (line 22, /tmp/tmpjmtsj4f6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule deseq2 (line 42, /tmp/tmpjmtsj4f6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule vsd (line 66, /tmp/tmpjmtsj4f6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule degs (line 88, /tmp/tmpjmtsj4f6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule figs23 (line 110, /tmp/tmpjmtsj4f6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule figsup1 (line 131, /tmp/tmpjmtsj4f6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 4,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1605902188.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for modelling-to-generate-alternatives with PyPSA-Eur",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "PyPSA/pypsa-eur-mga",
    "linting": "Lints for snakefile /tmp/tmpmhh7r_el/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule solve_base (line 34, /tmp/tmpmhh7r_el/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule generate_list_of_alternatives (line 83, /tmp/tmpmhh7r_el/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule generate_alternative (line 99, /tmp/tmpmhh7r_el/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule extract_results (line 201, /tmp/tmpmhh7r_el/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 4,
    "subscribers_count": 4,
    "topics": [],
    "updated_at": 1613402443.0
  },
  {
    "data_format": 1,
    "description": "This repository has snakemake scripts for salmon-deseq2 pipeline for RNAseq data analysis",
    "formatting": "[ERROR] In file \"/tmp/tmp9zbvak48/rules/fastqc.smk\":  \u0027InvalidParameterSyntax: L7: Over-indented recognised keyword found: \u0027shell\u0027\u0027\n[ERROR] In file \"/tmp/tmp9zbvak48/rules/index.smk\":  \u0027InvalidParameterSyntax: L6: Over-indented recognised keyword found: \u0027shell\u0027\u0027\n[ERROR] In file \"/tmp/tmp9zbvak48/rules/salmon_quant.smk\":  \u0027InvalidParameterSyntax: L9: Over-indented recognised keyword found: \u0027shell\u0027\u0027\n[ERROR] In file \"/tmp/tmp9zbvak48/rules/fastqc_after.smk\":  \u0027InvalidParameterSyntax: L7: Over-indented recognised keyword found: \u0027shell\u0027\u0027\n[ERROR] In file \"/tmp/tmp9zbvak48/rules/deseq.smk\":  \u0027InvalidParameterSyntax: L4: Over-indented recognised keyword found: \u0027shell\u0027\u0027\n[ERROR] In file \"/tmp/tmp9zbvak48/rules/multiqc.smk\":  \u0027InvalidParameterSyntax: L5: Over-indented recognised keyword found: \u0027shell\u0027\u0027\n[ERROR] In file \"/tmp/tmp9zbvak48/rules/cutadapt.smk\":  \u0027InvalidParameterSyntax: L9: Over-indented recognised keyword found: \u0027shell\u0027\u0027\n[INFO] In file \"/tmp/tmp9zbvak48/rules/cutadapt.smk\":  7 file(s) raised parsing errors \ud83e\udd15\n[INFO] In file \"/tmp/tmp9zbvak48/rules/cutadapt.smk\":  1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "svsuresh/salmon_deseq2_snakemake",
    "linting": "/usr/bin/bash: salmon: command not found\nCalledProcessError in line 6 of /tmp/tmp9zbvak48/rules/index.smk:\nCommand \u0027set -euo pipefail;  salmon --version\u0027 returned non-zero exit status 127.\n  File \"/tmp/tmp9zbvak48/Snakefile\", line 40, in \u003cmodule\u003e\n  File \"/tmp/tmp9zbvak48/rules/index.smk\", line 6, in \u003cmodule\u003e\n",
    "stargazers_count": 4,
    "subscribers_count": 1,
    "topics": [
      "salmon-deseq2",
      "snakemake-workflow"
    ],
    "updated_at": 1600196754.0
  },
  {
    "data_format": 1,
    "description": "Create multiple bacterial genome assemblies + polishing for Oxford Nanopore (ONT) data",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "pmenzel/ont-assembly-snake",
    "linting": "Lints for snakefile /tmp/tmp6h8qbhih/Snakefile:\n    * Absolute path \"/bin/bash\" in line 3:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 3:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 11:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule filtlong (line 50, /tmp/tmp6h8qbhih/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable filtlong_min_read_length from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule filtlongX (line 79, /tmp/tmp6h8qbhih/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable filtlong_min_read_length from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule filtlongMql (line 108, /tmp/tmp6h8qbhih/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable filtlong_min_read_length from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule filtlongMqln (line 143, /tmp/tmp6h8qbhih/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule flye (line 180, /tmp/tmp6h8qbhih/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable genome_size from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule flyeX (line 211, /tmp/tmp6h8qbhih/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable genome_size from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule raven (line 243, /tmp/tmp6h8qbhih/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ravenX (line 273, /tmp/tmp6h8qbhih/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule racon (line 303, /tmp/tmp6h8qbhih/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule raconX (line 337, /tmp/tmp6h8qbhih/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule medaka (line 406, /tmp/tmp6h8qbhih/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule pilon (line 445, /tmp/tmp6h8qbhih/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 4,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1603353360.0
  },
  {
    "data_format": 1,
    "description": "A Snakemake workflow to process paired-end RNA-Seq data.",
    "formatting": "[INFO] 15 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "akcorut/SnakeRNASeq",
    "linting": "FileNotFoundError in line 22 of /tmp/tmpo7jvyawv/rules/00_common.smk:\n[Errno 2] No such file or directory: \u0027samples.tsv\u0027\n  File \"/tmp/tmpo7jvyawv/Snakefile\", line 6, in \u003cmodule\u003e\n  File \"/tmp/tmpo7jvyawv/rules/00_common.smk\", line 22, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 689, in read_table\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 4,
    "subscribers_count": 0,
    "topics": [
      "rna-seq",
      "snakemake"
    ],
    "updated_at": 1614635782.0
  },
  {
    "data_format": 1,
    "description": "A workflow for analysis and resistance profiling of Mycobacterium tuberculosis nanopore data with Mykrobe",
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "iqbal-lab-org/Mykrobe_tb_workflow",
    "linting": "/tmp/tmplg_hh84a/Snakefile:19: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.\n  \nLints for snakefile /tmp/tmplg_hh84a/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 35:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmplg_hh84a/rules/porechop.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Deprecated singularity directive used for container definition in line 29.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmplg_hh84a/rules/align.smk:\n    * Deprecated singularity directive used for container definition in line 14.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 32.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 45.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 59.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmplg_hh84a/rules/mykrobe.smk:\n    * Deprecated singularity directive used for container definition in line 11.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmplg_hh84a/rules/reports.smk:\n    * Deprecated singularity directive used for container definition in line 12.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 30.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 48.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 65.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule report (line 151, /tmp/tmplg_hh84a/rules/reports.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 4,
    "subscribers_count": 3,
    "topics": [
      "tuberculosis",
      "nanopore",
      "bioinformatics",
      "antimicrobial-resistance-genes",
      "bioinformatics-pipeline"
    ],
    "updated_at": 1614650556.0
  },
  {
    "data_format": 1,
    "description": "Pipeline for Somatic Variant Calling with WES and WGS data",
    "formatting": "[WARNING] In file \"/tmp/tmpq_oyonsk/rules/calling.smk\":  Keyword \"input\" at line 40 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpq_oyonsk/rules/calling.smk\":  Keyword \"input\" at line 86 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpq_oyonsk/rules/calling.smk\":  Keyword \"input\" at line 101 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpq_oyonsk/rules/calling.smk\":  Keyword \"input\" at line 161 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpq_oyonsk/rules/calling.smk\":  Keyword \"shell\" at line 177 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpq_oyonsk/rules/preprocessing.smk\":  Keyword \"input\" at line 81 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpq_oyonsk/rules/preprocessing.smk\":  Keyword \"input\" at line 148 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "tjbencomo/ngs-pipeline",
    "linting": "FileNotFoundError in line 17 of /tmp/tmpq_oyonsk/rules/common.smk:\n[Errno 2] No such file or directory: \u0027patients_test.csv\u0027\n  File \"/tmp/tmpq_oyonsk/Snakefile\", line 2, in \u003cmodule\u003e\n  File \"/tmp/tmpq_oyonsk/rules/common.smk\", line 17, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 610, in read_csv\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 462, in _read\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 819, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1050, in _make_engine\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1867, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/parsers.py\", line 1362, in _open_handles\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/pandas/io/common.py\", line 642, in get_handle\n",
    "stargazers_count": 4,
    "subscribers_count": 2,
    "topics": [
      "snakemake",
      "bioinformatics",
      "somatic-variants",
      "exome-sequencing"
    ],
    "updated_at": 1611946910.0
  },
  {
    "data_format": 1,
    "description": "a de novo prediction tool of chromatin accessible regions for plant genomes",
    "formatting": "[ERROR] In file \"/tmp/tmp06764id_/Snakefile\":  \u0027EmptyContextError: L3: rule all has no keywords attached to it.\u0027\n[INFO] In file \"/tmp/tmp06764id_/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "Yin-Shen/CharPlant",
    "linting": "Lints for rule data_preprocessing (line 11, /tmp/tmp06764id_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule model_training (line 34, /tmp/tmp06764id_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule motif (line 62, /tmp/tmp06764id_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule de_novo_prediction (line 83, /tmp/tmp06764id_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule batch_submit_job (line 108, /tmp/tmp06764id_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cat_predict (line 128, /tmp/tmp06764id_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_positive_sample (line 142, /tmp/tmp06764id_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bowtie2_index (line 161, /tmp/tmp06764id_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bowtie2 (line 187, /tmp/tmp06764id_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule macs2 (line 210, /tmp/tmp06764id_/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 4,
    "subscribers_count": 1,
    "topics": [
      "deep-learning",
      "plant",
      "chromatin-accessibiity",
      "de-novo-prediction",
      "cnn-model",
      "open-chromatin-regions"
    ],
    "updated_at": 1611134699.0
  },
  {
    "data_format": 1,
    "description": "snakemake workflow comparing Genrich and MACS2",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "crazyhottommy/Genrich_compare",
    "linting": "FileNotFoundError in line 10 of /tmp/tmppuoohh1d/Snakefile:\n[Errno 2] No such file or directory: \u0027./samples.json\u0027\n  File \"/tmp/tmppuoohh1d/Snakefile\", line 10, in \u003cmodule\u003e\n",
    "stargazers_count": 4,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1604895310.0
  },
  {
    "data_format": 1,
    "description": "Mutational antigenic profiling of SARS-CoV-2 RBD against human convalescent sera from the HAARVI cohort",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jbloomlab/SARS-CoV-2-RBD_MAP_HAARVI_sera",
    "linting": "ModuleNotFoundError in line 10 of /tmp/tmp8amsub30/Snakefile:\nNo module named \u0027Bio\u0027\n  File \"/tmp/tmp8amsub30/Snakefile\", line 10, in \u003cmodule\u003e\n",
    "stargazers_count": 4,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1613135846.0
  },
  {
    "data_format": 1,
    "description": "PEDIA-workflow prioritizes the disease-causing gene by integrating facial analysis and exome sequencing data.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "PEDIA-Charite/PEDIA-workflow",
    "linting": "Lints for snakefile /tmp/tmpwwu8hz50/Snakefile:\n    * Path composition with \u0027+\u0027 in line 1:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule decompress (line 34, /tmp/tmpwwu8hz50/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sort (line 57, /tmp/tmpwwu8hz50/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule index_sorted (line 83, /tmp/tmpwwu8hz50/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter (line 102, /tmp/tmpwwu8hz50/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable data_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule index_filter (line 128, /tmp/tmpwwu8hz50/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule annotate (line 151, /tmp/tmpwwu8hz50/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable data_path from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule index_annotated (line 181, /tmp/tmpwwu8hz50/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule json (line 200, /tmp/tmpwwu8hz50/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable sample_index from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule test (line 232, /tmp/tmpwwu8hz50/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable classify_file from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable param_c from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable train_pickle from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable exclude_pheno from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule map_pedia (line 264, /tmp/tmpwwu8hz50/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable mapping_file from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule map_vcf (line 295, /tmp/tmpwwu8hz50/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable mapping_vcf_file from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\n",
    "stargazers_count": 5,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1600865596.0
  },
  {
    "data_format": 1,
    "description": "Amplicon sequence processing workflow using QIIME 2 and Snakemake",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "aomlomics/tourmaline",
    "linting": "ModuleNotFoundError in line 3 of /tmp/tmpv9yhdvp7/Snakefile:\nNo module named \u0027qiime2\u0027\n  File \"/tmp/tmpv9yhdvp7/Snakefile\", line 3, in \u003cmodule\u003e\n",
    "stargazers_count": 5,
    "subscribers_count": 1,
    "topics": [
      "noaa-omics-software",
      "amplicon-sequence-variants",
      "dada2",
      "deblur",
      "snakemake"
    ],
    "updated_at": 1614054093.0
  },
  {
    "data_format": 1,
    "description": "cluster stability measurement by subsampling and reclustering with Seurat V3",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "crazyhottommy/pyflow_seuratv3_parameter",
    "linting": "Lints for snakefile /tmp/tmp2yhw1ked/Snakefile:\n    * Deprecated singularity directive used for container definition in line 36.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 47.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 57.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 70.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 5,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1608558152.0
  },
  {
    "data_format": 1,
    "description": "A snakemake workflow for metagenomic projects",
    "formatting": "[INFO] 10 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "NBISweden/nbis-meta",
    "linting": "Lints for snakefile /tmp/tmpswwjwa9l/workflow/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpswwjwa9l/workflow/rules/common.smk:\n    * Deprecated singularity directive used for container definition in line 10.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpswwjwa9l/workflow/rules/classification.smk:\n    * Path composition with \u0027+\u0027 in line 72:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 100:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 148:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 183:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 264:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 292:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 25:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 72:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 100:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 148:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 183:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 264:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Deprecated singularity directive used for container definition in line 380.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 402.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 427.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmpswwjwa9l/workflow/rules/preprocessing.smk:\n    * Path composition with \u0027+\u0027 in line 637:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 41:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 298:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 369:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 396:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 467:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 506:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 547:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 578:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpswwjwa9l/workflow/rules/quantification.smk:\n    * Path composition with \u0027+\u0027 in line 83:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 16:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule infernal (line 205, /tmp/tmpswwjwa9l/workflow/rules/annotation.smk):\n    * Param db is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule pfam_scan (line 369, /tmp/tmpswwjwa9l/workflow/rules/annotation.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Param dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule parse_pfam (line 418, /tmp/tmpswwjwa9l/workflow/rules/annotation.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule emapper_homology_search (line 508, /tmp/tmpswwjwa9l/workflow/rules/annotation.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Param resource_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule emapper_annotate_hits (line 634, /tmp/tmpswwjwa9l/workflow/rules/annotation.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Param out is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule parse_ko_annotations (line 686, /tmp/tmpswwjwa9l/workflow/rules/annotation.smk):\n    * Param outbase is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param resource_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rgi (line 769, /tmp/tmpswwjwa9l/workflow/rules/annotation.smk):\n    * Param out is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule parse_rgi (line 829, /tmp/tmpswwjwa9l/workflow/rules/annotation.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule megahit (line 218, /tmp/tmpswwjwa9l/workflow/rules/assembly.smk):\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param output_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule fasta2bed (line 337, /tmp/tmpswwjwa9l/workflow/rules/assembly.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bowtie_build (line 362, /tmp/tmpswwjwa9l/workflow/rules/assembly.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule bowtie_map_pe (line 407, /tmp/tmpswwjwa9l/workflow/rules/assembly.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule bowtie_map_se (line 467, /tmp/tmpswwjwa9l/workflow/rules/assembly.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule samtools_flagstat (line 529, /tmp/tmpswwjwa9l/workflow/rules/assembly.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule assembly_stats (line 581, /tmp/tmpswwjwa9l/workflow/rules/assembly.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_assembly_stats (line 605, /tmp/tmpswwjwa9l/workflow/rules/assembly.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule concoct_coverage_table (line 238, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule merge_cutup (line 385, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n\nLints for rule extract_fasta (line 419, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n\nLints for rule contig_map (line 473, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule binning_stats (line 500, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule aggregate_binning_stats (line 525, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule remove_checkm_zerocols (line 849, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule aggregate_checkm_profiles (line 927, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule aggregate_checkm_stats (line 947, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule aggregate_gtdbtk (line 1064, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule count_rRNA (line 1180, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule count_tRNA (line 1286, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule aggregate_bin_annot (line 1309, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_ref_genome (line 1339, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule generate_fastANI_lists (line 1358, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastANI (line 1393, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n\nLints for rule cluster_genomes (line 1444, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule binning_report (line 1475, /tmp/tmpswwjwa9l/workflow/rules/binning.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule kraken_pe (line 117, /tmp/tmpswwjwa9l/workflow/rules/classification.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Param db is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule kraken_se (line 170, /tmp/tmpswwjwa9l/workflow/rules/classification.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Param db is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule centrifuge_pe (line 261, /tmp/tmpswwjwa9l/workflow/rules/classification.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n\nLints for rule centrifuge_se (line 324, /tmp/tmpswwjwa9l/workflow/rules/classification.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n\nLints for rule centrifuge_kreport (line 385, /tmp/tmpswwjwa9l/workflow/rules/classification.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule build_metaphlan (line 427, /tmp/tmpswwjwa9l/workflow/rules/classification.smk):\n    * Param dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule metaphlan_pe (line 474, /tmp/tmpswwjwa9l/workflow/rules/classification.smk):\n    * Param dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule metaphlan_se (line 527, /tmp/tmpswwjwa9l/workflow/rules/classification.smk):\n    * Param dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule merge_metaphlan (line 578, /tmp/tmpswwjwa9l/workflow/rules/classification.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule metaphlan2krona_table (line 605, /tmp/tmpswwjwa9l/workflow/rules/classification.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plot_metaphlan (line 665, /tmp/tmpswwjwa9l/workflow/rules/classification.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule classifier2krona (line 733, /tmp/tmpswwjwa9l/workflow/rules/classification.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Param tax is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule all2krona (line 778, /tmp/tmpswwjwa9l/workflow/rules/classification.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * Param tax is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule link_files (line 31, /tmp/tmpswwjwa9l/workflow/rules/preprocessing.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sortmerna_link_pe (line 538, /tmp/tmpswwjwa9l/workflow/rules/preprocessing.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sortmerna_link_se (line 560, /tmp/tmpswwjwa9l/workflow/rules/preprocessing.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule filter_phix_pe (line 922, /tmp/tmpswwjwa9l/workflow/rules/preprocessing.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule filter_phix_se (line 997, /tmp/tmpswwjwa9l/workflow/rules/preprocessing.smk):\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule write_featurefile (line 28, /tmp/tmpswwjwa9l/workflow/rules/quantification.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule remove_mark_duplicates (line 51, /tmp/tmpswwjwa9l/workflow/rules/quantification.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n\nLints for rule featurecount (line 137, /tmp/tmpswwjwa9l/workflow/rules/quantification.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n\nLints for rule clean_featurecount (line 191, /tmp/tmpswwjwa9l/workflow/rules/quantification.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule aggregate_featurecount (line 212, /tmp/tmpswwjwa9l/workflow/rules/quantification.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule count_features (line 270, /tmp/tmpswwjwa9l/workflow/rules/quantification.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sum_to_taxa (line 360, /tmp/tmpswwjwa9l/workflow/rules/quantification.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule contigtax_assign (line 350, /tmp/tmpswwjwa9l/workflow/rules/taxonomy.smk):\n    * Param taxdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule contigtax_assign_orfs (line 547, /tmp/tmpswwjwa9l/workflow/rules/taxonomy.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 5,
    "subscribers_count": 8,
    "topics": [
      "metagenomics",
      "snakemake",
      "workflow",
      "assembly"
    ],
    "updated_at": 1612908430.0
  },
  {
    "data_format": 1,
    "description": "A showcase and characterisation of pipeline frameworks (aka workflow managers)",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "komparo/rosetta-pipeline",
    "linting": "Lints for snakefile /tmp/tmpicmtm7a8/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 29:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule framework_docker (line 57, /tmp/tmpicmtm7a8/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule task_docker (line 82, /tmp/tmpicmtm7a8/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule run_example (line 107, /tmp/tmpicmtm7a8/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule aggregate_tasks (line 173, /tmp/tmpicmtm7a8/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule render_readme (line 192, /tmp/tmpicmtm7a8/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule render_task_readmes (line 210, /tmp/tmpicmtm7a8/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule render_comparison (line 229, /tmp/tmpicmtm7a8/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 5,
    "subscribers_count": 1,
    "topics": [
      "workflow-management",
      "pipeline-framework",
      "workflow-engine",
      "rosettacode"
    ],
    "updated_at": 1609432839.0
  },
  {
    "data_format": 1,
    "description": "Benchmarking of CNV calling tools",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "cphgeno/CNVbench",
    "linting": "SyntaxError:\nInput and output files have to be specified as strings or lists of strings.\n  File \"/tmp/tmp7rxwtd3z/Snakefile\", line 44, in \u003cmodule\u003e\n  File \"/tmp/tmp7rxwtd3z/tools/align.smk\", line 176, in \u003cmodule\u003e\n",
    "stargazers_count": 5,
    "subscribers_count": 4,
    "topics": [],
    "updated_at": 1607055579.0
  },
  {
    "data_format": 1,
    "description": "Indels are not ideal - quick test for interrupted ORFs in bacterial/microbial genomes",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "phiweger/ideel",
    "linting": "KeyError in line 6 of /tmp/tmpc22x9y2n/Snakefile:\n\u0027threads\u0027\n  File \"/tmp/tmpc22x9y2n/Snakefile\", line 6, in \u003cmodule\u003e\n",
    "stargazers_count": 5,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1605624407.0
  },
  {
    "data_format": 1,
    "description": ":cake: Per sequence functional classification and taxonomic assignments",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "PNNL-CompBio/perseq",
    "linting": "\u0027data\u0027 dir with FASTQs has not been set; pass --config data=/path\nSystemExit in line 73 of /tmp/tmpm0clllhw/Snakefile:\n1\n  File \"/tmp/tmpm0clllhw/Snakefile\", line 184, in \u003cmodule\u003e\n  File \"/tmp/tmpm0clllhw/Snakefile\", line 73, in get_samples_from_dir\n",
    "stargazers_count": 5,
    "subscribers_count": 1,
    "topics": [
      "metagenomics",
      "metatranscriptomics"
    ],
    "updated_at": 1602644548.0
  },
  {
    "data_format": 1,
    "description": "Score and compare multiple bacterial genome assemblies (Illumina, Nanopore) to reference genome(s)",
    "formatting": "[ERROR] In file \"/tmp/tmp2c8kgb9u/Snakefile\":  \u0027InvalidParameterSyntax: L312:Invalid key 5\n input:\n proteins\u0027\n[INFO] In file \"/tmp/tmp2c8kgb9u/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "pmenzel/score-assemblies",
    "linting": "SystemExit in line 16 of /tmp/tmp2c8kgb9u/Snakefile:\nNone\n  File \"/tmp/tmp2c8kgb9u/Snakefile\", line 16, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/_sitebuiltins.py\", line 26, in __call__\n",
    "stargazers_count": 5,
    "subscribers_count": 2,
    "topics": [
      "genome-assembly",
      "genome-analysis",
      "snakemake"
    ],
    "updated_at": 1603352394.0
  },
  {
    "data_format": 1,
    "description": "A Snakemake workflow to process single samples or cohorts of paired-end sequencing data (WGS or WES) using bwa/GATK4.",
    "formatting": "[INFO] 16 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ESR-NZ/human_genomics_pipeline",
    "linting": "KeyError in line 21 of /tmp/tmpyot4hgdl/workflow/Snakefile:\n\u0027DATA\u0027\n  File \"/tmp/tmpyot4hgdl/workflow/Snakefile\", line 21, in \u003cmodule\u003e\n",
    "stargazers_count": 6,
    "subscribers_count": 5,
    "topics": [
      "pipeline",
      "genomics",
      "nvidia-clara-parabricks",
      "nvidia-gpu",
      "snakemake-pipeline",
      "gatk4",
      "gatk-bestpractices",
      "illumina",
      "exome-pipeline",
      "cohort-analysis"
    ],
    "updated_at": 1611060698.0
  },
  {
    "data_format": 1,
    "description": "Pipeline for metagenomic community analysis using DNA isolated from virus-like particles",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "wclose/viralMetagenomicsPipeline",
    "linting": "Lints for snakefile /tmp/tmparazhqx3/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule trimReadPair (line 49, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule buildContaminantIndices (line 82, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule decontaminateTrimmedReads (line 112, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule assembleReads (line 150, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule combineContigs (line 176, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dedupeContigs (line 199, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule filterContigs (line 225, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule getVirsorterDatabase (line 264, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule predictContigsVirsorter (line 285, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule getVirfinderModel (line 312, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule predictContigsVirfinder (line 333, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule curateViralContigs (line 365, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule indexContigs (line 398, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mapContigs (line 425, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule binContigs (line 454, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule getMarkerSets (line 493, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule detectBinContamination (line 518, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule curateBinLibrary (line 545, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule indexBins (line 578, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mapBins (line 605, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule indexBinBam (line 633, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule calcBinRecruitment (line 659, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule combineBinStats (line 686, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule makeBinShared (line 713, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule splitBinShared (line 739, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule normalizeBinShared (line 770, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule subsampleBinShared (line 797, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule getClassificationDatabases (line 838, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule classifyBins (line 864, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule calcBinAlphaDiversity (line 901, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule calcBinBetaDiversity (line 934, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule calcBinPCoA (line 967, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule calcBinNMDS (line 994, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule configureContaminantReadMap (line 1030, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule rawContaminantReadMap (line 1057, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule rawReadStats (line 1086, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule combineRawReports (line 1114, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule trimmedReadStats (line 1143, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule combineTrimmedReports (line 1170, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule deconContaminantReadMap (line 1197, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule deconReadStats (line 1226, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule combineDeconReports (line 1254, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule assemblyStats (line 1283, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule combineAssemblyReports (line 1310, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule clean (line 1345, /tmp/tmparazhqx3/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 6,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1613686427.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[ERROR] In file \"/tmp/tmphg5szkfe/Snakefile\":  \u0027SyntaxError: L62: Unrecognised keyword \u0027expand\u0027 in rule all definition\u0027\n[INFO] In file \"/tmp/tmphg5szkfe/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "HelenaLC/muscat-comparison",
    "linting": "FileNotFoundError in line 27 of /tmp/tmphg5szkfe/Snakefile:\n[Errno 2] No such file or directory: \u0027meta/sim_ids.json\u0027\n  File \"/tmp/tmphg5szkfe/Snakefile\", line 27, in \u003cmodule\u003e\n",
    "stargazers_count": 6,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1610190932.0
  },
  {
    "data_format": 1,
    "description": "An example engineering analysis workflow for reproducible results.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "nickjstevens/analysis-workflow",
    "linting": "Lints for rule run_analysis (line 16, /tmp/tmpcil00jsm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule post_analysis (line 42, /tmp/tmpcil00jsm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dag (line 67, /tmp/tmpcil00jsm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean (line 82, /tmp/tmpcil00jsm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule report (line 97, /tmp/tmpcil00jsm/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 6,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1568886493.0
  },
  {
    "data_format": 1,
    "description": "Automated analysis and result reporting for targeted sequencing data",
    "formatting": "[ERROR] In file \"/tmp/tmpzpu4xdjg/Snakefile\":  \u0027InvalidParameterSyntax: 167samflag=513 if( config[\"parameters\"][\"paired_end_reads\"]==\"yes\") else512\n\u0027\n[INFO] In file \"/tmp/tmpzpu4xdjg/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "kircherlab/hemoMIPs",
    "linting": "KeyError in line 8 of /tmp/tmpzpu4xdjg/Snakefile:\n\u0027GATK\u0027\n  File \"/tmp/tmpzpu4xdjg/Snakefile\", line 8, in \u003cmodule\u003e\n",
    "stargazers_count": 6,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1602780827.0
  },
  {
    "data_format": 1,
    "description": "Using RNA-Seq data to improve microRNA target prediction accuracy in animals",
    "formatting": "[ERROR] In file \"/tmp/tmp3mea33lx/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 1:0: else:\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmp3mea33lx/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "TBradley27/FilTar",
    "linting": "Lints for snakefile /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 27:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 33:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 27:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp3mea33lx/modules/with_reannotation/map_reads/hisat2/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 23:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 30:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 32:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 20:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 23:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 30:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp3mea33lx/modules/get_utr_and_cds/without_conservation/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp3mea33lx/modules/data_download/Snakefile:\n    * Absolute path \"/^\\t/d\" in line 38:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 23:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp3mea33lx/modules/trim_reads/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp3mea33lx/modules/quant_reads/salmon/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 18:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp3mea33lx/modules/mirna/Snakefile:\n    * Absolute path \"/^$/d\" in line 26:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule get_bed6_file (line 43, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter_bed6_file (line 63, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule split_bed6_file (line 79, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule convert_gtf_to_genepred (line 97, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule convert_genepred_to_bed12 (line 119, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_bedgraph (line 145, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule split_bedgraph (line 175, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_bedgraphs_by_run (line 199, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule avg_merged_bedgraph_by_run (line 224, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_bedgraphs_by_sample (line 247, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule avg_merged_bedgraph_by_sample (line 272, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule split_bed12 (line 295, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter_bed12 (line 311, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule reannotate_3utrs (line 327, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule get_extended_bed_file (line 347, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule aggregrate_extended_bed_files (line 369, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule identify_APA_sites (line 387, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule aggregate_APA_sites (line 408, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_utr_lengths_chr (line 424, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_utr_lengths (line 440, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_AIR_file (line 456, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule gtf_to_bed_CDS (line 474, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter_CDS (line 494, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule split_CDS (line 510, /tmp/tmp3mea33lx/modules/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule create_index (line 130, /tmp/tmp3mea33lx/modules/with_reannotation/map_reads/hisat2/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule map_reads (line 157, /tmp/tmp3mea33lx/modules/with_reannotation/map_reads/hisat2/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule sam_to_bam (line 187, /tmp/tmp3mea33lx/modules/with_reannotation/map_reads/hisat2/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_sort (line 210, /tmp/tmp3mea33lx/modules/with_reannotation/map_reads/hisat2/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule reformat_bed_file_for_bedtools (line 26, /tmp/tmp3mea33lx/modules/get_utr_and_cds/without_conservation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_single_species_seq_fa (line 42, /tmp/tmp3mea33lx/modules/get_utr_and_cds/without_conservation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule merge_fasta (line 63, /tmp/tmp3mea33lx/modules/get_utr_and_cds/without_conservation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule convert_fasta_to_tsv (line 79, /tmp/tmp3mea33lx/modules/get_utr_and_cds/without_conservation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_single_end_fastq_file (line 20, /tmp/tmp3mea33lx/modules/data_download/ENA/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_paired_end_fastq_files (line 37, /tmp/tmp3mea33lx/modules/data_download/ENA/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule prep_mirna_seeds (line 22, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule prep_mirna_family_file (line 42, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule prep_mirna_mature_alt (line 61, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule prep_mir_for_context_scores (line 83, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter_mir_for_context_scores (line 103, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter_mir_families (line 119, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule targetscan_sites (line 139, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule targetscan_branch_lengths (line 160, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule targetscan_PCTs (line 184, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule targetscan_eightmers (line 208, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule targetscan_context_scores (line 230, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule aggregate_contextpp_scores (line 264, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule aggregate_targetscan_sites (line 280, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_all_transcripts (line 298, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_targetscan_data1 (line 314, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_targetscan_data2 (line 334, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_targetscan_data3 (line 356, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule patch_bin_lengths_script (line 377, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule patch_PCT_script (line 393, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule patch_contextpp_script (line 409, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule expression_filter_contextpp_scores_chr (line 1, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule expression_filter_contextpp_scores (line 23, /tmp/tmp3mea33lx/modules/target_prediction/targetscan/with_reannotation/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_gtf_file (line 30, /tmp/tmp3mea33lx/modules/data_download/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule modify_gtf_file (line 46, /tmp/tmp3mea33lx/modules/data_download/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule get_transcript_ids (line 62, /tmp/tmp3mea33lx/modules/data_download/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_toplevel_dna (line 81, /tmp/tmp3mea33lx/modules/data_download/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule download_primary_assembly_dna (line 97, /tmp/tmp3mea33lx/modules/data_download/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule download_chromsomal_dna (line 113, /tmp/tmp3mea33lx/modules/data_download/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule decompress_dna_file (line 132, /tmp/tmp3mea33lx/modules/data_download/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_maf_files_human (line 154, /tmp/tmp3mea33lx/modules/data_download/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_maf_files_mouse (line 172, /tmp/tmp3mea33lx/modules/data_download/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_cdna_file (line 190, /tmp/tmp3mea33lx/modules/data_download/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule decompress_cdna_file (line 206, /tmp/tmp3mea33lx/modules/data_download/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_first_APAtrap_script (line 222, /tmp/tmp3mea33lx/modules/data_download/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule trim_single_end_reads (line 28, /tmp/tmp3mea33lx/modules/trim_reads/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule trim_paired_end_reads (line 51, /tmp/tmp3mea33lx/modules/trim_reads/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule salmon_index (line 23, /tmp/tmp3mea33lx/modules/quant_reads/salmon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule salmon_index_for_lib_types (line 48, /tmp/tmp3mea33lx/modules/quant_reads/salmon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule salmon_quant_lib_type (line 86, /tmp/tmp3mea33lx/modules/quant_reads/salmon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule salmon_quant (line 116, /tmp/tmp3mea33lx/modules/quant_reads/salmon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule salmon_get_lib_type (line 146, /tmp/tmp3mea33lx/modules/quant_reads/salmon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule salmon_quantmerge_by_run (line 174, /tmp/tmp3mea33lx/modules/quant_reads/salmon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule salmon_average_quantmerge_runs (line 193, /tmp/tmp3mea33lx/modules/quant_reads/salmon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule salmon_quantmerge_by_sample (line 221, /tmp/tmp3mea33lx/modules/quant_reads/salmon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule salmon_average_quantmerge_samples (line 240, /tmp/tmp3mea33lx/modules/quant_reads/salmon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mirna_species_fasta (line 23, /tmp/tmp3mea33lx/modules/mirna/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter_mirna_species_fasta (line 39, /tmp/tmp3mea33lx/modules/mirna/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_genome_postions (line 3, /tmp/tmp3mea33lx/modules/get_target_coordinates/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 6,
    "subscribers_count": 1,
    "topics": [
      "mirna-targets",
      "mirna",
      "mirna-mrna-interaction"
    ],
    "updated_at": 1600774215.0
  },
  {
    "data_format": 1,
    "description": "Pipeline for the processing of 3\u0027 end sequencing libraries",
    "formatting": "[WARNING] In file \"/tmp/tmp7wp6z35p/Snakefile\":  Keyword \"input\" at line 215 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp7wp6z35p/Snakefile\":  Keyword \"output\" at line 1594 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp7wp6z35p/Snakefile\":  Keyword \"output\" at line 1641 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp7wp6z35p/Snakefile\":  Keyword \"input\" at line 1663 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "zavolanlab/polyAsite_workflow",
    "linting": "KeyError in line 58 of /tmp/tmp7wp6z35p/segemehl/Snakefile:\n\u0027atlas.samples_table\u0027\n  File \"/tmp/tmp7wp6z35p/Snakefile\", line 18, in \u003cmodule\u003e\n  File \"/tmp/tmp7wp6z35p/segemehl/Snakefile\", line 58, in \u003cmodule\u003e\n",
    "stargazers_count": 6,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1612269653.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "seandavi/SimpleSnakemakeTutorial",
    "linting": "Lints for snakefile /tmp/tmp4zcl8mj0/bampost.snk:\n    * Absolute path \"/usr/local/apps/picard/1.94\" in line 1:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/path/to/fastq\" in line 2:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule indexbam (line 4, /tmp/tmp4zcl8mj0/bampost.snk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule picardMarkDuplicates (line 28, /tmp/tmp4zcl8mj0/bampost.snk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule picardAlignmentSummaryMetrics (line 60, /tmp/tmp4zcl8mj0/bampost.snk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cleanup (line 22, /tmp/tmp4zcl8mj0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 7,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1542193710.0
  },
  {
    "data_format": 1,
    "description": "RNA-seq workflow for Snakemake based on STAR and featureCounts.",
    "formatting": "[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jrderuiter/snakemake-rnaseq",
    "linting": "Lints for snakefile /tmp/tmp67tondj_/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 11:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp67tondj_/rules/input.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp67tondj_/rules/alignment.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 2:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmp67tondj_/rules/counts.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp67tondj_/rules/qc.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule copy_input (line 56, /tmp/tmp67tondj_/rules/input.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sambamba_sort (line 289, /tmp/tmp67tondj_/rules/alignment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_merge (line 327, /tmp/tmp67tondj_/rules/alignment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_index (line 355, /tmp/tmp67tondj_/rules/alignment.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule merge_counts (line 91, /tmp/tmp67tondj_/rules/counts.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule normalize_counts (line 117, /tmp/tmp67tondj_/rules/counts.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fastqc (line 55, /tmp/tmp67tondj_/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule samtools_stats (line 80, /tmp/tmp67tondj_/rules/qc.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 7,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1608563197.0
  },
  {
    "data_format": 1,
    "description": "uORF-Tools are a workflow and a collection of tools for the analysis of \u0027Upstream Open Reading Frames\u0027 (short uORFs)",
    "formatting": "[WARNING] In file \"/tmp/tmptv3i7km5/rules/mapping.smk\":  Keyword \"output\" at line 5 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 10 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Biochemistry1-FFM/uORF-Tools",
    "linting": "KeyError in line 7 of /tmp/tmptv3i7km5/Snakefile:\n\u0027uorfannotationpath\u0027\n  File \"/tmp/tmptv3i7km5/Snakefile\", line 7, in \u003cmodule\u003e\n",
    "stargazers_count": 7,
    "subscribers_count": 2,
    "topics": [
      "bioinformatics",
      "high-throughput-sequencing",
      "snakemake",
      "ribosome-profiling"
    ],
    "updated_at": 1605111522.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 13 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "nanoporetech/DTR-phage-pipeline",
    "linting": "No kaiju DB found in /media/sfodata/databases/kaiju/nr_euk.\nSkipping Kaiju\nNo kaiju DB found in /media/sfodata/databases/kaiju/nr_euk.\nSkipping Kaiju\nLints for snakefile /tmp/tmpjrtxasun/Snakefile:\n    * Path composition with \u0027+\u0027 in line 194:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpjrtxasun/rules/kmer_bins.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpjrtxasun/rules/align_clusters.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpjrtxasun/rules/qc_genomes.smk:\n    * Path composition with \u0027+\u0027 in line 42:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule summary_stats (line 5, /tmp/tmpjrtxasun/rules/summary.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule find_all_DTR_reads (line 5, /tmp/tmpjrtxasun/rules/dtr_reads.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule virsorter_identify_phage (line 17, /tmp/tmpjrtxasun/rules/virsorter.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable VIRSORTER_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule virsorter_collect_phage (line 57, /tmp/tmpjrtxasun/rules/virsorter.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule kaiju (line 5, /tmp/tmpjrtxasun/rules/kaiju.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule kaiju_taxa (line 35, /tmp/tmpjrtxasun/rules/kaiju.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule kaiju_attach_taxa (line 57, /tmp/tmpjrtxasun/rules/kaiju.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule kaiju_to_krona (line 82, /tmp/tmpjrtxasun/rules/kaiju.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule calc_kmer_freq (line 5, /tmp/tmpjrtxasun/rules/kmer_bins.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule add_qscore_to_kmer_freq (line 35, /tmp/tmpjrtxasun/rules/kmer_bins.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule create_umap_kmer_freq_map (line 57, /tmp/tmpjrtxasun/rules/kmer_bins.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule label_umap_freq_map_with_qscore (line 91, /tmp/tmpjrtxasun/rules/kmer_bins.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule label_umap_freq_map_with_gc_content (line 118, /tmp/tmpjrtxasun/rules/kmer_bins.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule label_umap_freq_map_with_readlength (line 147, /tmp/tmpjrtxasun/rules/kmer_bins.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule call_umap_freq_map_bins (line 178, /tmp/tmpjrtxasun/rules/kmer_bins.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule list_kmer_bin_ids (line 204, /tmp/tmpjrtxasun/rules/kmer_bins.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_umap_freq_map_bins (line 225, /tmp/tmpjrtxasun/rules/kmer_bins.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule label_umap_freq_map_with_tax (line 252, /tmp/tmpjrtxasun/rules/kmer_bins.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule generate_bins_and_stats (line 287, /tmp/tmpjrtxasun/rules/kmer_bins.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule kmer_binned_fasta (line 348, /tmp/tmpjrtxasun/rules/kmer_bins.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bin_ava_minimap2 (line 5, /tmp/tmpjrtxasun/rules/align_clusters.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bin_ava_clustering (line 32, /tmp/tmpjrtxasun/rules/align_clusters.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule combine_bin_cluster_read_info (line 62, /tmp/tmpjrtxasun/rules/align_clusters.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule create_bin_cluster_read_lists (line 85, /tmp/tmpjrtxasun/rules/align_clusters.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule get_cluster_reads_fasta (line 127, /tmp/tmpjrtxasun/rules/align_clusters.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule select_read_with_longest_DTR (line 149, /tmp/tmpjrtxasun/rules/align_clusters.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule create_bin_cluster_ref_fasta (line 170, /tmp/tmpjrtxasun/rules/align_clusters.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule create_bin_cluster_pol_fastqs (line 192, /tmp/tmpjrtxasun/rules/align_clusters.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule racon_polishing (line 5, /tmp/tmpjrtxasun/rules/polish.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_medaka (line 43, /tmp/tmpjrtxasun/rules/polish.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule rename_polished_ref_reads (line 77, /tmp/tmpjrtxasun/rules/polish.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule prodigal (line 5, /tmp/tmpjrtxasun/rules/annotate.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule get_prodigal_result_statistics (line 30, /tmp/tmpjrtxasun/rules/annotate.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule align_pol_reads_to_polished_ref (line 58, /tmp/tmpjrtxasun/rules/annotate.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule parse_align_clust_strands_paf (line 89, /tmp/tmpjrtxasun/rules/annotate.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule combine_all_polished_ref_reads (line 5, /tmp/tmpjrtxasun/rules/qc_genomes.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule remove_adapters_from_ref_reads (line 22, /tmp/tmpjrtxasun/rules/qc_genomes.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule find_all_DTR_genomes (line 49, /tmp/tmpjrtxasun/rules/qc_genomes.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule aggregate_prodigal_statistics (line 81, /tmp/tmpjrtxasun/rules/qc_genomes.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable MEDAKA_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule build_bin_cluster_summary_table (line 106, /tmp/tmpjrtxasun/rules/qc_genomes.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule combine_bin_cluster_strand_counts_into_table (line 136, /tmp/tmpjrtxasun/rules/qc_genomes.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule combine_dtr_aligns (line 161, /tmp/tmpjrtxasun/rules/qc_genomes.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule combine_all_draft_stats (line 196, /tmp/tmpjrtxasun/rules/qc_genomes.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule nucmer_for_duplicate_sequences (line 5, /tmp/tmpjrtxasun/rules/dedup.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule show_coords_for_duplicate_sequences (line 29, /tmp/tmpjrtxasun/rules/dedup.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule rewrite_pol_fasta_without_seq_duplicates (line 51, /tmp/tmpjrtxasun/rules/dedup.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule plot_all_prodigal_stats (line 85, /tmp/tmpjrtxasun/rules/dedup.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule align_dtr_seqs_to_polished_refs (line 5, /tmp/tmpjrtxasun/rules/dtr_align.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule find_concatemer_read_ids (line 5, /tmp/tmpjrtxasun/rules/linear_concats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule plot_concatemer_copy_length_contours (line 40, /tmp/tmpjrtxasun/rules/linear_concats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule grep_concatemer_seqs (line 64, /tmp/tmpjrtxasun/rules/linear_concats.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule all_kaiju (line 319, /tmp/tmpjrtxasun/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 7,
    "subscribers_count": 25,
    "topics": [],
    "updated_at": 1612221733.0
  },
  {
    "data_format": 1,
    "description": "Bioinformatics pipeline for nanopore sequencing data",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "zhaoc1/nanoflow",
    "linting": "KeyError in line 10 of /tmp/tmpg1dhn24s/Snakefile:\n\u0027project_dir\u0027\n  File \"/tmp/tmpg1dhn24s/Snakefile\", line 10, in \u003cmodule\u003e\n",
    "stargazers_count": 7,
    "subscribers_count": 3,
    "topics": [
      "snakemake-workflows",
      "nanopore-sequencing",
      "bioinformatics-pipeline",
      "bacterial-genomes"
    ],
    "updated_at": 1612372907.0
  },
  {
    "data_format": 1,
    "description": "Pipeline for the analysis of PE ChIP-seq data",
    "formatting": "[WARNING] In file \"/tmp/tmpc6vfxack/Snakefile\":  Keyword \"input\" at line 102 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "KoesGroup/Snakemake_ChIPseq_PE",
    "linting": "AttributeError in line 93 of /tmp/tmpc6vfxack/rules/pre_processing.smk:\ninvalid name for input, output, wildcard, params or log: reverse is reserved for internal use\n  File \"/tmp/tmpc6vfxack/Snakefile\", line 113, in \u003cmodule\u003e\n  File \"/tmp/tmpc6vfxack/rules/pre_processing.smk\", line 93, in \u003cmodule\u003e\n",
    "stargazers_count": 7,
    "subscribers_count": 2,
    "topics": [
      "chip-seq-pipelines",
      "snakemake"
    ],
    "updated_at": 1607442221.0
  },
  {
    "data_format": 1,
    "description": "Recovery of prokaryotic genomes from shotgun metagenomic sequencing data",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Finn-Lab/MAG_Snakemake_wf",
    "linting": "Lints for snakefile /tmp/tmp6n5ypaih/modules/sra_download.Snakefile:\n    * Deprecated singularity directive used for container definition in line 27.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp6n5ypaih/modules/preprocessing.Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 179:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 170:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Deprecated singularity directive used for container definition in line 28.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 45.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 63.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 83.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 109.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 135.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 151.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 169.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp6n5ypaih/modules/coas.Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 50:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Deprecated singularity directive used for container definition in line 49.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp6n5ypaih/modules/assembly.Snakefile:\n    * Deprecated singularity directive used for container definition in line 32.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 56.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp6n5ypaih/modules/binning.Snakefile:\n    * Deprecated singularity directive used for container definition in line 60.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 91.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp6n5ypaih/modules/refine.Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Deprecated singularity directive used for container definition in line 24.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 99.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 139.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp6n5ypaih/modules/dRep_GTDB.Snakefile:\n    * Deprecated singularity directive used for container definition in line 26.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 63.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 92.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 108.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp6n5ypaih/modules/framework.Snakefile:\n    * Path composition with \u0027+\u0027 in line 53:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 178:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 201:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Deprecated singularity directive used for container definition in line 31.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 52.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 90.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 106.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 126.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 147.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 164.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 177.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 237.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp6n5ypaih/modules/refine_coas.Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Deprecated singularity directive used for container definition in line 24.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 103.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp6n5ypaih/modules/cmseq.Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 203:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 228:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 166:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 203:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Deprecated singularity directive used for container definition in line 59.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 101.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 130.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 165.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 262.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp6n5ypaih/modules/dnadiff.Snakefile:\n    * Path composition with \u0027+\u0027 in line 109:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Deprecated singularity directive used for container definition in line 26.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 41.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 59.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Deprecated singularity directive used for container definition in line 160.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sra_download (line 19, /tmp/tmp6n5ypaih/modules/sra_download.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule raw_fastqc_fwd (line 19, /tmp/tmp6n5ypaih/modules/preprocessing.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule raw_fastqc_rev (line 55, /tmp/tmp6n5ypaih/modules/preprocessing.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule raw_multiqc (line 92, /tmp/tmp6n5ypaih/modules/preprocessing.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param indir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule kneaddata_download_database (line 130, /tmp/tmp6n5ypaih/modules/preprocessing.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule kneaddata_bowtie (line 163, /tmp/tmp6n5ypaih/modules/preprocessing.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param indx is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule postpreprocessing_fastqc_fwd (line 225, /tmp/tmp6n5ypaih/modules/preprocessing.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule postpreprocessing_fastqc_rev (line 260, /tmp/tmp6n5ypaih/modules/preprocessing.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule postpreprocessing_multiqc (line 297, /tmp/tmp6n5ypaih/modules/preprocessing.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param indir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule readcount_fq (line 338, /tmp/tmp6n5ypaih/modules/preprocessing.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule coas (line 29, /tmp/tmp6n5ypaih/modules/coas.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sort (line 56, /tmp/tmp6n5ypaih/modules/coas.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule zip_file (line 90, /tmp/tmp6n5ypaih/modules/coas.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule readcounts_coas (line 137, /tmp/tmp6n5ypaih/modules/coas.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule spades (line 19, /tmp/tmp6n5ypaih/modules/assembly.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule spades_coas (line 67, /tmp/tmp6n5ypaih/modules/assembly.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule metawrap_binning (line 53, /tmp/tmp6n5ypaih/modules/binning.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule metawrap_binning_coas (line 104, /tmp/tmp6n5ypaih/modules/binning.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param assembly is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule bin_refinement (line 19, /tmp/tmp6n5ypaih/modules/refine.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule refine_bins_init (line 63, /tmp/tmp6n5ypaih/modules/refine.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param refined_folder is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param folder is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule copy_bins (line 102, /tmp/tmp6n5ypaih/modules/refine.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param dir1 is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param dir2 is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param out1 is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param out2 is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule copy_refined (line 140, /tmp/tmp6n5ypaih/modules/refine.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule checkm (line 164, /tmp/tmp6n5ypaih/modules/refine.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule parse_checkm (line 202, /tmp/tmp6n5ypaih/modules/refine.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_checkm (line 241, /tmp/tmp6n5ypaih/modules/refine.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule dRep (line 19, /tmp/tmp6n5ypaih/modules/dRep_GTDB.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule combine_checkm (line 60, /tmp/tmp6n5ypaih/modules/dRep_GTDB.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dRep_coas (line 93, /tmp/tmp6n5ypaih/modules/dRep_GTDB.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule GTDB_TK (line 143, /tmp/tmp6n5ypaih/modules/dRep_GTDB.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule plot_GTDB (line 187, /tmp/tmp6n5ypaih/modules/dRep_GTDB.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mapreads_scaffold (line 20, /tmp/tmp6n5ypaih/modules/framework.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule parse_mapreads_scaffold (line 72, /tmp/tmp6n5ypaih/modules/framework.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule aggregate_mapreads_scaffold (line 100, /tmp/tmp6n5ypaih/modules/framework.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule cat_MAGs (line 132, /tmp/tmp6n5ypaih/modules/framework.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule cat_MAGs_coas (line 166, /tmp/tmp6n5ypaih/modules/framework.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule readmap (line 200, /tmp/tmp6n5ypaih/modules/framework.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule readmap_coassembly (line 242, /tmp/tmp6n5ypaih/modules/framework.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule parse_readmap (line 284, /tmp/tmp6n5ypaih/modules/framework.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule parse_readmap_coas (line 312, /tmp/tmp6n5ypaih/modules/framework.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule write_scaffold (line 340, /tmp/tmp6n5ypaih/modules/framework.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule write_scaffold_coas (line 368, /tmp/tmp6n5ypaih/modules/framework.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule plot_framework (line 397, /tmp/tmp6n5ypaih/modules/framework.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule bin_refinement_coas (line 19, /tmp/tmp6n5ypaih/modules/refine_coas.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule refine_bins_init_coas (line 65, /tmp/tmp6n5ypaih/modules/refine_coas.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param refined_folder is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule copy_bins_coas (line 103, /tmp/tmp6n5ypaih/modules/refine_coas.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param dir1 is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param dir2 is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param out1 is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param out2 is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule copy_refined_coas (line 141, /tmp/tmp6n5ypaih/modules/refine_coas.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule checkm_coas (line 165, /tmp/tmp6n5ypaih/modules/refine_coas.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule parse_checkm_coas (line 203, /tmp/tmp6n5ypaih/modules/refine_coas.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule rename_fasta (line 29, /tmp/tmp6n5ypaih/modules/cmseq.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule prokka (line 61, /tmp/tmp6n5ypaih/modules/cmseq.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param out_prokka is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rename_fasta_coas (line 104, /tmp/tmp6n5ypaih/modules/cmseq.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule prokka_coas (line 136, /tmp/tmp6n5ypaih/modules/cmseq.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param out_prokka is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule cmseq (line 179, /tmp/tmp6n5ypaih/modules/cmseq.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param name is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule cmseq_coas (line 226, /tmp/tmp6n5ypaih/modules/cmseq.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param name is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule append_cmseq (line 294, /tmp/tmp6n5ypaih/modules/cmseq.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule append_cmseq_coas (line 328, /tmp/tmp6n5ypaih/modules/cmseq.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule aggregate_cmseq (line 362, /tmp/tmp6n5ypaih/modules/cmseq.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule aggregate_cmseq_coas (line 386, /tmp/tmp6n5ypaih/modules/cmseq.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_cmseq (line 410, /tmp/tmp6n5ypaih/modules/cmseq.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule mash_dist (line 19, /tmp/tmp6n5ypaih/modules/dnadiff.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule best_mash (line 48, /tmp/tmp6n5ypaih/modules/dnadiff.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dnadiff (line 79, /tmp/tmp6n5ypaih/modules/dnadiff.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule parse_dnadiff (line 123, /tmp/tmp6n5ypaih/modules/dnadiff.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule aggregate_dnadiff (line 171, /tmp/tmp6n5ypaih/modules/dnadiff.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule aggregate_dnadiff_coas (line 195, /tmp/tmp6n5ypaih/modules/dnadiff.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule summarize_dnadiff (line 219, /tmp/tmp6n5ypaih/modules/dnadiff.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_dnadiff (line 250, /tmp/tmp6n5ypaih/modules/dnadiff.Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 7,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1608153030.0
  },
  {
    "data_format": 1,
    "description": "A straightforward bioinformatic pipeline for detecting a bacterial strain in one or more metagenome(s).",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "tamburinif/StrainSifter",
    "linting": "Lints for snakefile /tmp/tmpdm2le4cx/Snakefile:\n    * Absolute path \"/|\\.\" in line 16:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule bwa_index (line 24, /tmp/tmpdm2le4cx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bwa_align (line 52, /tmp/tmpdm2le4cx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param ref is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule genomecov (line 90, /tmp/tmpdm2le4cx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule calc_coverage (line 118, /tmp/tmpdm2le4cx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter_samples (line 150, /tmp/tmpdm2le4cx/Snakefile):\n    * The dynamic flag is deprecated:\n      Use checkpoints instead, which are more powerful and less error-prone.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#data-dependent-conditional-execution\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule faidx (line 183, /tmp/tmpdm2le4cx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule pileup (line 206, /tmp/tmpdm2le4cx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule call_snps (line 235, /tmp/tmpdm2le4cx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule snp_consensus (line 267, /tmp/tmpdm2le4cx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine (line 293, /tmp/tmpdm2le4cx/Snakefile):\n    * The dynamic flag is deprecated:\n      Use checkpoints instead, which are more powerful and less error-prone.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#data-dependent-conditional-execution\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule core_snps (line 321, /tmp/tmpdm2le4cx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule core_snps_to_fasta (line 347, /tmp/tmpdm2le4cx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule multi_align (line 373, /tmp/tmpdm2le4cx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_tree (line 399, /tmp/tmpdm2le4cx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_tree (line 425, /tmp/tmpdm2le4cx/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule pairwise_snvs (line 451, /tmp/tmpdm2le4cx/Snakefile):\n    * The dynamic flag is deprecated:\n      Use checkpoints instead, which are more powerful and less error-prone.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#data-dependent-conditional-execution\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 7,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1603769942.0
  },
  {
    "data_format": 1,
    "description": "Automated pipeline for amplicon sequence analysis ",
    "formatting": "[WARNING] In file \"/tmp/tmpm80w246f/Snakefile\":  Keyword \"input\" at line 26 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmpm80w246f/Snakefile\":  \u0027TypeError: can\u0027t multiply sequence by non-int of type \u0027NoneType\u0027\u0027\n[INFO] In file \"/tmp/tmpm80w246f/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "AlejandroAb/CASCABEL",
    "linting": "KeyError in line 7 of /tmp/tmpm80w246f/Snakefile:\n\u0027RUN\u0027\n  File \"/tmp/tmpm80w246f/Snakefile\", line 7, in \u003cmodule\u003e\n",
    "stargazers_count": 7,
    "subscribers_count": 1,
    "topics": [
      "amplicon-sequence-analysis",
      "snakemake",
      "illumina-sequencing",
      "pipeline",
      "otu-table"
    ],
    "updated_at": 1613031919.0
  },
  {
    "data_format": 1,
    "description": "Analysis code for the TAP-seq manuscript.",
    "formatting": "[WARNING] In file \"/tmp/tmpiluvec87/rules/align_reads.smk\":  Keyword \"shell\" at line 162 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmpiluvec87/rules/analyses.smk\":  \u0027AttributeError: \u0027NoneType\u0027 object has no attribute \u0027group\u0027\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "argschwind/TAPseq_manuscript",
    "linting": "Lints for snakefile /tmp/tmpiluvec87/rules/download_fastq.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmpiluvec87/rules/create_alignment_refs.smk:\n    * Path composition with \u0027+\u0027 in line 29:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 14:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpiluvec87/rules/align_reads.smk:\n    * Absolute path \"/genomeDir\" in line 154:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cropseq_ref.fasta\" in line 196:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cropseq_ref.dict\" in line 197:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cropseq_ref.refFlat\" in line 216:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for snakefile /tmp/tmpiluvec87/rules/extract_dge.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 19:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpiluvec87/rules/analyses.smk:\n    * Absolute path \"/perturb_status.txt\" in line 21:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/perturb_status_collapsed.txt\" in line 23:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/gene_tagged_aligned.bam\" in line 74:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 11:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 23:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 74:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 11:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 21:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 23:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 74:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpiluvec87/rules/chromatin_annotated_etps.smk:\n    * Path composition with \u0027+\u0027 in line 7:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 29:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 32:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 45:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 47:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 62:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule download_sra_run (line 27, /tmp/tmpiluvec87/rules/download_fastq.smk):\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule rename_fastq (line 55, /tmp/tmpiluvec87/rules/download_fastq.smk):\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule create_vector_ref (line 81, /tmp/tmpiluvec87/rules/create_alignment_refs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param output_bn is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule create_empty_vector_ref (line 114, /tmp/tmpiluvec87/rules/create_alignment_refs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule create_cropseq_ref (line 133, /tmp/tmpiluvec87/rules/create_alignment_refs.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule star_align (line 310, /tmp/tmpiluvec87/rules/align_reads.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param outprefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule align_report (line 519, /tmp/tmpiluvec87/rules/align_reads.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule dge_report (line 157, /tmp/tmpiluvec87/rules/extract_dge.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule dge_report_no_perts (line 189, /tmp/tmpiluvec87/rules/extract_dge.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule advanced_downsample (line 74, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule reads_on_target (line 106, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule tapseq_vs_cropseq (line 135, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule filter_mmix (line 169, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule screen_data_qc (line 236, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule compare_covariates (line 343, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule process_de_results (line 376, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule map_enhancers (line 410, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_chromatin_data (line 444, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_encode_bam (line 467, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule download_hic_data (line 491, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule chromatin_analyses (line 524, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule hic_analysis (line 549, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule abc_analysis (line 576, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule extract_cropseq_vectors (line 599, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule screen_grna_errors (line 629, /tmp/tmpiluvec87/rules/analyses.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule enh_screen_etps (line 5, /tmp/tmpiluvec87/rules/chromatin_annotated_etps.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule genome_wide_etps (line 36, /tmp/tmpiluvec87/rules/chromatin_annotated_etps.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule gasperini_enh_screen_etps (line 68, /tmp/tmpiluvec87/rules/chromatin_annotated_etps.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule gasperini_pilot_etps (line 100, /tmp/tmpiluvec87/rules/chromatin_annotated_etps.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule fulco_tiling_etps (line 132, /tmp/tmpiluvec87/rules/chromatin_annotated_etps.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 7,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1614455108.0
  },
  {
    "data_format": 1,
    "description": "JAMIRA is a reproducible Workflow for Integrative Exploration of Genomic Features of prokariotes",
    "formatting": "[WARNING] In file \"/tmp/tmpylan8hv0/Snakefile\":  Keyword \"output\" at line 81 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "icaromsc/WGCA",
    "linting": "Lints for snakefile /tmp/tmpylan8hv0/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 27:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule virulence_identification (line 39, /tmp/tmpylan8hv0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule summarize_virulence (line 63, /tmp/tmpylan8hv0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule plasmid_prediction (line 86, /tmp/tmpylan8hv0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule summarize_plasmid_prediction (line 110, /tmp/tmpylan8hv0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule resistome_prediction (line 133, /tmp/tmpylan8hv0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule generate_resistome_heatmap (line 160, /tmp/tmpylan8hv0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule summary_results (line 185, /tmp/tmpylan8hv0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule genome_annotation (line 225, /tmp/tmpylan8hv0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule genomic_island_prediction (line 248, /tmp/tmpylan8hv0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule convert_gbk_to_seed (line 272, /tmp/tmpylan8hv0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule prophage_prediction (line 295, /tmp/tmpylan8hv0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule summarize_prophage_prediction (line 322, /tmp/tmpylan8hv0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule summarize_genomic_islands (line 354, /tmp/tmpylan8hv0/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 7,
    "subscribers_count": 2,
    "topics": [
      "genomic-islands",
      "prophages",
      "virulence-genes",
      "resistome",
      "comparative-genomics",
      "genomic-data-analysis",
      "bioinformatics-workflow",
      "snakemake"
    ],
    "updated_at": 1605011524.0
  },
  {
    "data_format": 1,
    "description": "We present HRIBO (High-throughput annotation by Ribo-seq), a workflow to enable reproducible and high-throughput analysis of bacterial Ribo-seq data. The workflow performs all required pre-processing steps and quality control.  Importantly, HRIBO outputs annotation-independent ORF predictions based on two complementary prokaryotic-focused tools, and integrates them with additional computed features. This facilitates both the rapid discovery of ORFs and their prioritization for functional characterization.",
    "formatting": "[WARNING] In file \"/tmp/tmpa0j8xc3g/rules/mapping.smk\":  Keyword \"shell\" at line 41 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpa0j8xc3g/rules/report.smk\":  Keyword \"output\" at line 16 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpa0j8xc3g/rules/qcauxiliary.smk\":  Keyword \"output\" at line 6 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpa0j8xc3g/rules/qcauxiliary.smk\":  Keyword \"output\" at line 21 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpa0j8xc3g/rules/qcauxiliary.smk\":  Keyword \"output\" at line 36 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmpa0j8xc3g/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 1:2: if:\n```\nwhile formatting code with black.\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 19 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "RickGelhausen/HRIBO",
    "linting": "KeyError in line 8 of /tmp/tmpa0j8xc3g/Snakefile:\n\u0027adapter\u0027\n  File \"/tmp/tmpa0j8xc3g/Snakefile\", line 8, in \u003cmodule\u003e\n",
    "stargazers_count": 7,
    "subscribers_count": 3,
    "topics": [
      "ribosome-profiling",
      "prokaryotes",
      "snakemake",
      "bioinformatics"
    ],
    "updated_at": 1607961287.0
  },
  {
    "data_format": 1,
    "description": "Estimation of solar and wind power generation potentials in Europe.",
    "formatting": "[ERROR] In file \"/tmp/tmp_127fidw/rules/data-preprocessing.smk\":  \u0027InvalidParameterSyntax: 178[\"build/srtm_{x:02d}_{y:02d}.tif\". format( x= x, y= y)\n for x in range( SRTM_X_MIN, SRTM_X_MAX+1)\n for y in range( SRTM_Y_MIN, SRTM_Y_MAX+1)\n if not( x is34 and y in[3,4,5,6])]\n\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 6 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "calliope-project/solar-and-wind-potentials",
    "linting": "/tmp/tmp_127fidw/rules/data-preprocessing.smk:372: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\n  bounds=\"{x_min},{y_min},{x_max},{y_max}\".format(**config[\"scope\"][\"bounds\"]),\nModuleNotFoundError in line 2 of /tmp/tmp_127fidw/rules/data-preprocessing.smk:\nNo module named \u0027pycountry\u0027\n  File \"/tmp/tmp_127fidw/Snakefile\", line 11, in \u003cmodule\u003e\n  File \"/tmp/tmp_127fidw/rules/data-preprocessing.smk\", line 2, in \u003cmodule\u003e\n",
    "stargazers_count": 7,
    "subscribers_count": 1,
    "topics": [
      "renewable-energy",
      "electricity",
      "snakemake",
      "europe",
      "analysis",
      "reproducible-research"
    ],
    "updated_at": 1611838896.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmpdatzvgrs/rules/fgwas.smk\":  Keyword \"shell\" at line 13 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 4 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "NCBI-Hackathons/Kipoi-GWAS",
    "linting": "ModuleNotFoundError in line 4 of /tmp/tmpdatzvgrs/rules/ukbb.smk:\nNo module named \u0027matplotlib\u0027\n  File \"/tmp/tmpdatzvgrs/Snakefile\", line 58, in \u003cmodule\u003e\n  File \"/tmp/tmpdatzvgrs/rules/ukbb.smk\", line 4, in \u003cmodule\u003e\n  File \"/tmp/tmpdatzvgrs/kipoi_gwas/prepare.py\", line 5, in \u003cmodule\u003e\n",
    "stargazers_count": 7,
    "subscribers_count": 10,
    "topics": [],
    "updated_at": 1588170995.0
  },
  {
    "data_format": 1,
    "description": "Harmonization of AMR predictor tool outputs",
    "formatting": "[ERROR] In file \"/tmp/tmp7ck3zedz/rules/srax.smk\":  \u0027SyntaxError: L32: Colon (not \u0027srax\u0027) expected after \u0027rule hamronize\u0027\u0027\n[WARNING] In file \"/tmp/tmp7ck3zedz/Snakefile\":  Keyword \"input\" at line 55 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmp7ck3zedz/rules/staramr.smk\":  Keyword \"shell\" at line 18 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 17 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "pha4ge/hAMRonization_workflow",
    "linting": "KeyError in line 7 of /tmp/tmp7ck3zedz/Snakefile:\n\u0027samples\u0027\n  File \"/tmp/tmp7ck3zedz/Snakefile\", line 7, in \u003cmodule\u003e\n",
    "stargazers_count": 8,
    "subscribers_count": 9,
    "topics": [
      "antimicrobial-resistance",
      "standardization",
      "file-format"
    ],
    "updated_at": 1611601764.0
  },
  {
    "data_format": 1,
    "description": "Modular snakemake workflow for assembly-based metagenomics",
    "formatting": "[ERROR] In file \"/tmp/tmp1c1chh7s/Snakefile\":  \u0027SyntaxError: L42: Unrecognised keyword \u0027expand\u0027 in rule all definition\u0027\n[INFO] In file \"/tmp/tmp1c1chh7s/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "tanaes/snakemake_assemble",
    "linting": "WorkflowError in line 19 of /tmp/tmp1c1chh7s/Snakefile:\nFailed to open /home/jgsanders/git_sw/snakemake_assemble/bin/snakefiles/simplify_fasta.py.\n  File \"/tmp/tmp1c1chh7s/Snakefile\", line 19, in \u003cmodule\u003e\n",
    "stargazers_count": 8,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1610829273.0
  },
  {
    "data_format": 1,
    "description": "Clin-mNGS: Automated pipeline for pathogen detection from clinical metagenomic data",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "AkshathaPrasanna/Clin-mNGS",
    "linting": "AttributeError in line 105 of /tmp/tmpks_wzkcb/Snakefile:\ninvalid name for input, output, wildcard, params or log: reverse is reserved for internal use\n  File \"/tmp/tmpks_wzkcb/Snakefile\", line 105, in \u003cmodule\u003e\n",
    "stargazers_count": 8,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1614576023.0
  },
  {
    "data_format": 1,
    "description": "Finding cryptic relationships to boost disease gene detection",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "aehrc/TRIBES",
    "linting": "Lints for snakefile /tmp/tmp8f6vhpb7/Snakefile:\n    * Deprecated singularity directive used for container definition in line 5.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for snakefile /tmp/tmp8f6vhpb7/core.smake:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp8f6vhpb7/process.smake:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for snakefile /tmp/tmp8f6vhpb7/relations.smake:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule split_by_chr (line 31, /tmp/tmp8f6vhpb7/core.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule all_chrs (line 55, /tmp/tmp8f6vhpb7/core.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule combine_vcf (line 75, /tmp/tmp8f6vhpb7/core.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule combine_gz (line 98, /tmp/tmp8f6vhpb7/core.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule index_vcf_gz (line 121, /tmp/tmp8f6vhpb7/core.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule phase_with_ref (line 12, /tmp/tmp8f6vhpb7/process.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule phase_without_ref (line 43, /tmp/tmp8f6vhpb7/process.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule ld_prune (line 74, /tmp/tmp8f6vhpb7/process.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule annotate_eur_af (line 103, /tmp/tmp8f6vhpb7/process.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable REF_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable RES_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule fileter_with_ref_maf (line 131, /tmp/tmp8f6vhpb7/process.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule biallelic_snps_no_miss (line 160, /tmp/tmp8f6vhpb7/process.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule biallelic_snps (line 180, /tmp/tmp8f6vhpb7/process.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule no_miss (line 199, /tmp/tmp8f6vhpb7/process.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule quality_checks (line 223, /tmp/tmp8f6vhpb7/process.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule select_sample (line 245, /tmp/tmp8f6vhpb7/process.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule germline (line 17, /tmp/tmp8f6vhpb7/relations.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule vcf2plink (line 46, /tmp/tmp8f6vhpb7/relations.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule FPI_filter_population_ibd (line 76, /tmp/tmp8f6vhpb7/relations.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule estimateIBD0 (line 104, /tmp/tmp8f6vhpb7/relations.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule compare_vs_true_rel (line 132, /tmp/tmp8f6vhpb7/relations.smake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule usage (line 26, /tmp/tmp8f6vhpb7/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 8,
    "subscribers_count": 8,
    "topics": [
      "ibd-segments",
      "vcf",
      "estimate-relationships",
      "pipeline"
    ],
    "updated_at": 1610201592.0
  },
  {
    "data_format": 1,
    "description": "Example of a snakemake workflow implementation of the mothur MiSEQ SOP",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "AAFC-BICoE/snakemake-mothur",
    "linting": "AttributeError in line 100 of /tmp/tmpo01is2cx/Snakefile:\ninvalid name for input, output, wildcard, params or log: count is reserved for internal use\n  File \"/tmp/tmpo01is2cx/Snakefile\", line 100, in \u003cmodule\u003e\n",
    "stargazers_count": 8,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1612983315.0
  },
  {
    "data_format": 1,
    "description": "Code for extracting parallel corpora from pmindia",
    "formatting": "[WARNING] In file \"/tmp/tmpiz805n73/Snakefile\":  Keyword \"shell\" at line 313 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "bhaddow/pmindia-crawler",
    "linting": "Lints for snakefile /tmp/tmpiz805n73/Snakefile:\n    * Absolute path \"/home/bhaddow/moses.new/scripts\" in line 8:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/bhaddow/code/indic_nlp_library/bhaddow\" in line 9:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/bhaddow/tools/hunalign/src/hunalign/hunalign\" in line 10:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/bhaddow/code/vecalign\" in line 11:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/bhaddow/code/LASER\" in line 12:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/home/bhaddow/data/pavlick-dicts\" in line 13:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/filter.py -f {wildcards[language]} \u003c {input} \u003e {output} 2\u003e {output}.err\" in line 173:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/*\" in line 194:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/*tsv\" in line 212:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/^\u003cP\u003e$/d\" in line 318:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/^$/d\" in line 321:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/extract.py -f {input[0]} -i {input[1]} -t {output}\" in line 331:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/make_index.py -l en -d {input} \u003e {output}\" in line 341:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/get_urls.py -l {wildcards.language} -m {MAX_URLS} \u003e {output}\" in line 349:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 34:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 35:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 70:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 84:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 109:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 4:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 34:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 35:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 70:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 84:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule release_intersect (line 107, /tmp/tmpiz805n73/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule release_hunalign (line 134, /tmp/tmpiz805n73/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule release_mono (line 168, /tmp/tmpiz805n73/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule intersect_align (line 199, /tmp/tmpiz805n73/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule filter (line 252, /tmp/tmpiz805n73/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule crawl (line 280, /tmp/tmpiz805n73/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule collate_hunalign (line 301, /tmp/tmpiz805n73/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule collate_vecalign (line 326, /tmp/tmpiz805n73/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule run_hunalign (line 352, /tmp/tmpiz805n73/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable HUNALIGN from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule get_dict (line 391, /tmp/tmpiz805n73/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable PAVLICK_DICTS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable sys from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable PAVLICK_DICTS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_vecalign (line 407, /tmp/tmpiz805n73/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable VECALIGN from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable sys from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule embed_overlap (line 451, /tmp/tmpiz805n73/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable LASER from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable LASER from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule make_overlap (line 485, /tmp/tmpiz805n73/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable VECALIGN from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule split (line 519, /tmp/tmpiz805n73/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable MOSES_SCRIPTS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule extract (line 553, /tmp/tmpiz805n73/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_index (line 581, /tmp/tmpiz805n73/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule urls (line 609, /tmp/tmpiz805n73/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable MAX_URLS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 8,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1597583801.0
  },
  {
    "data_format": 1,
    "description": "snakemake rules for running anvio",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "tanaes/snakemake_anvio",
    "linting": "WorkflowError in line 3 of /tmp/tmp8ix0om0y/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmp8ix0om0y/Snakefile\", line 3, in \u003cmodule\u003e\n",
    "stargazers_count": 9,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1610656786.0
  },
  {
    "data_format": 1,
    "description": "Is your European region able to provide itself with 100% renewable electricity?",
    "formatting": "[ERROR] In file \"/tmp/tmpituayrk5/rules/data-preprocessing.smk\":  \u0027InvalidParameterSyntax: 225[\"build/srtm_{x:02d}_{y:02d}.tif\". format( x= x, y= y)\n for x in range( SRTM_X_MIN, SRTM_X_MAX+1)\n for y in range( SRTM_Y_MIN, SRTM_Y_MAX+1)\n if not( x is34 and y in[3,4,5,6])]\n\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "timtroendle/possibility-for-electricity-autarky",
    "linting": "/tmp/tmpituayrk5/rules/data-preprocessing.smk:475: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\nModuleNotFoundError in line 2 of /tmp/tmpituayrk5/rules/data-preprocessing.smk:\nNo module named \u0027pycountry\u0027\n  File \"/tmp/tmpituayrk5/Snakefile\", line 9, in \u003cmodule\u003e\n  File \"/tmp/tmpituayrk5/rules/data-preprocessing.smk\", line 2, in \u003cmodule\u003e\n",
    "stargazers_count": 9,
    "subscribers_count": 3,
    "topics": [
      "research",
      "renewable-energy",
      "paper",
      "europe",
      "analysis",
      "electricity-autarky",
      "reproducible-research"
    ],
    "updated_at": 1602775310.0
  },
  {
    "data_format": 1,
    "description": "Repo to analyze population genetic data with many different methods",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "NovembreLab/eems-around-the-world",
    "linting": "WorkflowError in line 1 of /tmp/tmpup09r4ni/Snakefile:\nConfig file config/config.yaml not found.\n  File \"/tmp/tmpup09r4ni/Snakefile\", line 1, in \u003cmodule\u003e\n",
    "stargazers_count": 9,
    "subscribers_count": 5,
    "topics": [
      "population-genetics",
      "data-visualization",
      "principle-component-analysis",
      "structure",
      "admixture",
      "snakemake-workflow"
    ],
    "updated_at": 1603765326.0
  },
  {
    "data_format": 1,
    "description": "D\u00e9monstration d\u2019outils de bioinfo dans le cadre d\u2019un projet",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "thomasdenecker/FAIR_Bioinfo",
    "linting": "PermissionError in line 29 of /tmp/tmpjzrx9s6z/Snakefile:\n[Errno 13] Permission denied: \u0027/home/rstudio\u0027\n  File \"/tmp/tmpjzrx9s6z/Snakefile\", line 29, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 215, in makedirs\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/os.py\", line 225, in makedirs\n",
    "stargazers_count": 9,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1608129932.0
  },
  {
    "data_format": 1,
    "description": "ChIP-seq peak-calling, QC and differential analysis pipeline (Snakemake port of the nextflow pipeline at https://nf-co.re/chipseq).",
    "formatting": "[WARNING] In file \"/tmp/tmpxt2gclxq/workflow/rules/filtering.smk\":  Keyword \"params\" at line 6 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpxt2gclxq/workflow/rules/filtering.smk\":  Inline-formatted keyword \"threads\" at line 56 had its comments relocated above it.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[WARNING] In file \"/tmp/tmpxt2gclxq/workflow/rules/peak_analysis.smk\":  Keyword \"params\" at line 41 has comments under a value.\nPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 11 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "snakemake-workflows/chipseq",
    "linting": null,
    "stargazers_count": 10,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1610443660.0
  },
  {
    "data_format": 1,
    "description": "Alignment and antibody assembly pipelines for Croote et al. (Science, 2018)",
    "formatting": "[INFO] 5 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dcroote/singlecell-ige",
    "linting": "Multiple include of /tmp/tmpe53ip9j2/rules/common.smk ignored\nLints for rule get_genome_fasta_and_gtf (line 7, /tmp/tmpe53ip9j2/rules/align.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule star_genome_generate (line 59, /tmp/tmpe53ip9j2/rules/align.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule star (line 124, /tmp/tmpe53ip9j2/rules/align.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule htseq (line 199, /tmp/tmpe53ip9j2/rules/align.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule combine_counts (line 247, /tmp/tmpe53ip9j2/rules/align.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule get_immcantation_image (line 5, /tmp/tmpe53ip9j2/rules/get_container.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule basic (line 9, /tmp/tmpe53ip9j2/rules/assemble.smk):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule blast_constant_region (line 59, /tmp/tmpe53ip9j2/rules/assemble.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule igblast_changeo (line 109, /tmp/tmpe53ip9j2/rules/assemble.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule merge_changeo_constant (line 168, /tmp/tmpe53ip9j2/rules/assemble.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule combine_assemblies (line 210, /tmp/tmpe53ip9j2/rules/assemble.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 10,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1612222356.0
  },
  {
    "data_format": 1,
    "description": "Sparse Signaling Pathway Sampling: MCMC for signaling pathway inference",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "gitter-lab/ssps",
    "linting": "Lints for snakefile /tmp/tmpid5hbeon/Snakefile:\n    * Absolute path \"/simulation_study/heatmaps/aucpr-{style}.png\" in line 136:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/dream_scores.tsv\" in line 138:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{method}/v={v}_r={r}_a={a}_t={t}_replicate={rep}.json\" in line 143:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/sim_scores.tsv\" in line 147:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mcmc_d={d}_lstd={lstd}/cl={cell_line}_stim={stimulus}_replicate={rep}.json\" in line 153:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{method}/cl={cell_line}_stim={stimulus}.json\" in line 155:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/dream_scores.tsv\" in line 158:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/simulate_data.jl\" in line 165:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/v={v}_r={r}_a={a}_t={t}_replicate={rep}.csv\" in line 167:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/v={v}_r={r}_a={a}_t={t}_replicate={rep}.csv\" in line 168:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/v={v}_r={r}_a={a}_t={t}_replicate={rep}.csv\" in line 169:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/scoring.jl\" in line 179:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{replicate}.csv\" in line 180:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{method}/{replicate}.json\" in line 181:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{method}/{replicate}.json\" in line 183:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/sim_scores.tsv\" in line 196:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/simulation_study/heatmaps/{score}-mean.png\" in line 198:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/simulation_study/heatmaps/{score}-t.png\" in line 199:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mcmc_d={{d}}_lstd={{lstd}}/{{dataset}}_replicate={rep}.json\" in line 205:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/simulation_study/convergence/mcmc_d={d}_lstd={lstd}/{dataset}.png\" in line 208:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/convergence_viz.py\" in line 210:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/postprocess_samples.jl\" in line 219:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{{mcmc_settings}}/{{dataset}}/{chain}.json\" in line 220:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{mcmc_settings}/{dataset}.json\" in line 222:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{dataset}.csv\" in line 234:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{dataset}.csv\" in line 235:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mcmc_d={d}_lstd={lstd}/{dataset}/{chain}.json\" in line 237:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/postprocess_samples.jl\" in line 250:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mcmc_{{mcmc_settings}}/{{replicate}}/{chain}.json\" in line 251:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mcmc_{mcmc_settings}/{replicate}.json\" in line 254:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{replicate}.csv\" in line 265:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{replicate}.csv\" in line 266:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mcmc_d={d}/{replicate}/{chain}.json\" in line 268:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/postprocess_samples.jl\" in line 284:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/uniform/{{replicate}}/{chain}.json\" in line 285:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/uniform/{replicate}.json\" in line 288:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{replicate}.csv\" in line 300:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{replicate}.csv\" in line 301:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/uniform/{replicate}/{chain}.json\" in line 303:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/funchisq_wrapper.R\" in line 322:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{replicate}.csv\" in line 323:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/funchisq/{replicate}.json\" in line 325:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{replicate}.csv\" in line 345:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{replicate}.csv\" in line 346:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/hill/{replicate}.json\" in line 348:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{replicate}.csv\" in line 359:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{replicate}.csv\" in line 360:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/preds/hill_deg={deg}_mode={mode}/{replicate}.json\" in line 362:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/preds/hill_deg=\" in line 373:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/v=\" in line 373:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/hill_method_timetest.csv\" in line 375:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lasso.jl\" in line 387:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{replicate}.csv\" in line 388:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{replicate}.csv\" in line 389:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lasso/{replicate}.json\" in line 391:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/prior_baseline.jl\" in line 406:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{replicate}.csv\" in line 407:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/prior_baseline/{replicate}.json\" in line 409:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mcmc_d={{d}}_lstd={{lstd}}/{{dataset}}_replicate={rep}.json\" in line 426:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/dream/convergence/mcmc_d={d}_lstd={lstd}/{dataset}.png\" in line 429:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/convergence_viz.py\" in line 431:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/score_dream.py\" in line 435:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/TrueVec_{cell_line}_{stim}.csv\" in line 436:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{method}/cl={cell_line}_stim={stim}_replicate={rep}.json\" in line 437:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cl={cell_line}_antibodies.json\" in line 438:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{method}/cl={cell_line}_stim={stim}_replicate={rep}.json\" in line 440:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/postprocess_samples.jl\" in line 450:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mcmc_{{mcmc_settings}}/{{replicate}}/chain={chain}.json\" in line 451:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mcmc_{mcmc_settings}/{replicate}.json\" in line 454:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cl={cell_line}_stim={stimulus}.csv\" in line 467:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cl={cell_line}.csv\" in line 468:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/mcmc_d={d}_lstd={lstd}/cl={cell_line}_stim={stimulus}_replicate={replicate}/chain={chain}.json\" in line 470:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/score_dream.py\" in line 483:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/TrueVec_{cell_line}_{stim}.csv\" in line 484:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{method}/cl={cell_line}_stim={stim}.json\" in line 485:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cl={cell_line}_antibodies.json\" in line 486:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{method}/cl={cell_line}_stim={stim}.json\" in line 488:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/funchisq_wrapper.R\" in line 498:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{replicate}.csv\" in line 499:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/funchisq/{replicate}.json\" in line 501:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cl={cell_line}_stim={stim}.csv\" in line 512:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cl={cell_line}.csv\" in line 513:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/hill/cl={cell_line}_stim={stim}.json\" in line 515:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lasso.jl\" in line 526:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cl={cell_line}.csv\" in line 527:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cl={cell_line}_stim={stim}.csv\" in line 528:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/lasso/cl={cell_line}_stim={stim}.json\" in line 530:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/prior_baseline.jl\" in line 541:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cl={cell_line}.csv\" in line 542:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/prior_baseline/cl={cell_line}_stim={stim}.json\" in line 544:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{cell_line}_main.csv\" in line 555:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cl={{cell_line}}_stim={stimulus}.csv\" in line 557:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/{cell_line}.eda\" in line 564:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cl={cell_line}.csv\" in line 566:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/cl={cell_line}_antibodies.json\" in line 567:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 136:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 138:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 147:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 153:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 155:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 158:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 165:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 168:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 179:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 181:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 183:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 196:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 199:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 205:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 208:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 210:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 220:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 222:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 234:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 237:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 250:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 254:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 265:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 268:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 284:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 288:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 300:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 303:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 322:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 325:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 345:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 348:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 359:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 362:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 373:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 375:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 387:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 389:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 406:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 409:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 426:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 429:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 431:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 436:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 438:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 450:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 454:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 467:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 470:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 483:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 485:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 486:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 498:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 501:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 512:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 515:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 526:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 528:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 541:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 544:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 555:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 564:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 567:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 20:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 373:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule tabulate_sim_scores (line 148, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule tabulate_dream_scores (line 169, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule simulate_data (line 192, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable JULIA_PROJ_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SIM_M from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable POLY_DEG from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule score_sim_predictions (line 219, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable JULIA_PROJ_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule sim_heatmaps (line 249, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable SIM_METHODS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule convergence_viz (line 269, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule postprocess_conv_mcmc_sim (line 296, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable JULIA_PROJ_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable CONV_BURNIN from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable CONV_STOPPOINTS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_conv_mcmc_sim (line 325, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable JULIA_PROJ_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable CONV_TIMEOUT from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable CONV_MAX_SAMPLES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule postprocess_sim_mcmc (line 357, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable JULIA_PROJ_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_sim_mcmc (line 384, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable JULIA_PROJ_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SIM_TIMEOUT from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SIM_MAX_SAMPLES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule postprocess_sim_uniform_mcmc (line 419, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable JULIA_PROJ_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_sim_uniform_mcmc (line 447, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable JULIA_PROJ_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SIM_TIMEOUT from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SIM_MAX_SAMPLES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_sim_funchisq (line 485, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable FUNCH_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_sim_hill (line 521, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable HILL_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SIM_TIMEOUT from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_timetest_hill (line 548, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable HILL_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable HILL_TIME_TIMEOUT from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule tabulate_timetest_hill (line 575, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable SCRIPT_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_sim_lasso (line 600, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable JULIA_PROJ_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_sim_prior_baseline (line 632, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable JULIA_PROJ_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule dream_convergence_viz (line 665, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule score_dream_mcmc (line 687, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule postprocess_dream_mcmc (line 715, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable JULIA_PROJ_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable DREAM_STOPPOINTS from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_dream_mcmc (line 745, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable JULIA_PROJ_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable DREAM_TIMEOUT from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable CONV_MAX_SAMPLES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable MCMC_INDEG from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule score_dream_predictions (line 777, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule run_dream_funchisq (line 805, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule run_dream_hill (line 832, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable HILL_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable SIM_TIMEOUT from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_dream_lasso (line 859, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable JULIA_PROJ_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule run_dream_prior_baseline (line 887, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable JULIA_PROJ_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule preprocess_dream_timeseries (line 914, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable DREAM_PREP_TS_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule preprocess_dream_prior (line 934, /tmp/tmpid5hbeon/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 10,
    "subscribers_count": 3,
    "topics": [
      "dynamic-bayesian-network",
      "gen",
      "probabilistic-programming",
      "signaling-pathway"
    ],
    "updated_at": 1610595362.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[WARNING] In file \"/tmp/tmp4pv1hccs/rules/mapping.smk\":  Keyword \"shell\" at line 23 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 3 file(s) would be changed \ud83d\ude2c\n[INFO] 3 file(s) would be left unchanged \ud83c\udf89\n",
    "full_name": "nanoporetech/Pore-C-Snakemake",
    "linting": "ModuleNotFoundError in line 1 of /tmp/tmp4pv1hccs/rules/common.smk:\nNo module named \u0027box\u0027\n  File \"/tmp/tmp4pv1hccs/Snakefile\", line 25, in \u003cmodule\u003e\n  File \"/tmp/tmp4pv1hccs/rules/common.smk\", line 1, in \u003cmodule\u003e\n",
    "stargazers_count": 11,
    "subscribers_count": 22,
    "topics": [],
    "updated_at": 1614354595.0
  },
  {
    "data_format": 1,
    "description": "RNAseq pipeline based on snakemake",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "crazyhottommy/pyflow-RNAseq",
    "linting": "FileNotFoundError in line 6 of /tmp/tmp9q8n8_v_/Snakefile:\n[Errno 2] No such file or directory: \u0027./samples.json\u0027\n  File \"/tmp/tmp9q8n8_v_/Snakefile\", line 6, in \u003cmodule\u003e\n",
    "stargazers_count": 11,
    "subscribers_count": 2,
    "topics": [
      "rnaseq",
      "snakemake"
    ],
    "updated_at": 1607821432.0
  },
  {
    "data_format": 1,
    "description": "Deep mutational scanning of the receptor-binding domain of SARS-CoV-2 Spike",
    "formatting": "[ERROR] In file \"/tmp/tmp4hn_pi0p/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 1:0: elif config[\u0027seqdata_source\u0027] == \u0027SRA\u0027:\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmp4hn_pi0p/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "jbloomlab/SARS-CoV-2-RBD_DMS",
    "linting": "Lints for snakefile /tmp/tmp4hn_pi0p/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule make_summary (line 34, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule make_dag (line 141, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule interactive_heatmap (line 161, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sarbecovirus_diversity (line 185, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule antibody_epitopes (line 224, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule circulating_variants (line 263, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule logoplots_of_muteffects (line 301, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule structure_function (line 326, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule single_mut_effects (line 365, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule global_epistasis_binding (line 408, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule global_epistasis_expression (line 432, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule compute_Titeseq_Kds (line 456, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule compute_expression_meanFs (line 496, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Additionally specify a conda environment or container for each rule, environment modules are not enough:\n      While environment modules allow to document and deploy the required\n      software on a certain platform, they lock your workflow in there,\n      disabling easy reproducibility on other machines that don\u0027t have exactly\n      the same environment modules. Hence env modules (which might be beneficial\n      in certain cluster environments), should allways be complemented with\n      equivalent conda environments.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule analyze_counts (line 536, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule count_variants (line 561, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_variants (line 588, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule process_ccs (line 614, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_ccs (line 648, /tmp/tmp4hn_pi0p/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 11,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1614051559.0
  },
  {
    "data_format": 1,
    "description": "snakemake workflow for post-processing scATACseq data",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "crazyhottommy/pyflow-scATACseq",
    "linting": "FileNotFoundError in line 18 of /tmp/tmp3y71ryti/Snakefile:\n[Errno 2] No such file or directory: \u0027/path/to/cluster_sample1.csv\u0027\n  File \"/tmp/tmp3y71ryti/Snakefile\", line 37, in \u003cmodule\u003e\n  File \"/tmp/tmp3y71ryti/Snakefile\", line 18, in get_cluster_id\n",
    "stargazers_count": 11,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1597229833.0
  },
  {
    "data_format": 1,
    "description": "shotgun pipeline",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "biocore/oecophylla",
    "linting": "KeyError in line 6 of /tmp/tmp0nzvoo8c/Snakefile:\n\u0027tmp_dir_root\u0027\n  File \"/tmp/tmp0nzvoo8c/Snakefile\", line 6, in \u003cmodule\u003e\n",
    "stargazers_count": 12,
    "subscribers_count": 16,
    "topics": [],
    "updated_at": 1588351642.0
  },
  {
    "data_format": 1,
    "description": "Class materials for the NIH HPC snakemake class",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "NIH-HPC/snakemake-class",
    "linting": "Lints for snakefile /tmp/tmpj_m1z56k/Snakefile:\n    * Absolute path \"/^\u003e/ {{NF=1}} {{print}}\" in line 157:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Deprecated singularity directive used for container definition in line 259.:\n      Use the container directive instead (it is agnostic of the underlying\n      container runtime).\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule setup (line 19, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean (line 57, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fetch_container (line 84, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable CONTAINER_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable CONTAINER_NAME from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable CONTAINER_URL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule wrapper (line 106, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable CONTAINER_DIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable CONTAINER_NAME from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule fetch_sample_desc (line 135, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sample_table (line 165, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable SAMPLES from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule fetch_fastq (line 196, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule config_yml (line 228, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fetch_genome (line 259, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable ENSEMBL_URL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule fetch_transcriptome (line 281, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable ENSEMBL_URL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable ENSEMBL_URL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule fetch_gtf (line 315, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable ENSEMBL_URL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable ENSEMBL_RELEASE from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable ENSEMBL_RELEASE from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable ENSEMBL_RELEASE from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule gtf2bed12 (line 337, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule make_transcript_gene_map (line 380, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule chroms (line 415, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable ENSEMBL_URL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule ref_yaml (line 435, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable ENSEMBL_RELEASE from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule make_hisat_index (line 464, /tmp/tmpj_m1z56k/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 12,
    "subscribers_count": 6,
    "topics": [],
    "updated_at": 1613596422.0
  },
  {
    "data_format": 1,
    "description": "Bioinformatic pipeline for identifying dsDNA breaks by marker based incorporation, such as breaks induced by designer nucleases like Cas9.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "cnobles/iGUIDE",
    "linting": "ModuleNotFoundError in line 12 of /tmp/tmpvh8js55u/Snakefile:\nNo module named \u0027iguidelib\u0027\n  File \"/tmp/tmpvh8js55u/Snakefile\", line 12, in \u003cmodule\u003e\n",
    "stargazers_count": 12,
    "subscribers_count": 1,
    "topics": [],
    "updated_at": 1613699838.0
  },
  {
    "data_format": 1,
    "description": "SigMa is a probabilistic model for the sequential dependencies of mutation signatures",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "lrgr/sigma",
    "linting": "FileNotFoundError in line 21 of /tmp/tmpo2xxuocx/Snakefile:\n[Errno 2] No such file or directory: \u0027data/mutations/ICGC-BRCA-EU.RELEASE_22.SBS.renamed.sigma.json\u0027\n  File \"/tmp/tmpo2xxuocx/Snakefile\", line 21, in \u003cmodule\u003e\n",
    "stargazers_count": 12,
    "subscribers_count": 6,
    "topics": [
      "mutational-signatures",
      "hidden-markov-models",
      "cancer",
      "breast-cancer"
    ],
    "updated_at": 1596079024.0
  },
  {
    "data_format": 1,
    "description": "A model of the European power system built using Calliope.",
    "formatting": "[INFO] 3 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "calliope-project/euro-calliope",
    "linting": "ModuleNotFoundError in line 2 of /tmp/tmplz0kijni/rules/shapes.smk:\nNo module named \u0027pycountry\u0027\n  File \"/tmp/tmplz0kijni/Snakefile\", line 11, in \u003cmodule\u003e\n  File \"/tmp/tmplz0kijni/rules/shapes.smk\", line 2, in \u003cmodule\u003e\n",
    "stargazers_count": 12,
    "subscribers_count": 5,
    "topics": [
      "calliope-models",
      "conda",
      "europe",
      "research",
      "energy",
      "renewable-energy"
    ],
    "updated_at": 1605519646.0
  },
  {
    "data_format": 1,
    "description": "Pipeline for de novo clustering of long transcriptomic reads",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "nanoporetech/pipeline-nanopore-denovo-isoforms",
    "linting": "find: \u2018/tmp/tmpvgp94y4g/evaluation/data/SIRV_PSC109_phmm_fl.fq\u2019: No such file or directory\nCalledProcessError in line 154 of /tmp/tmpvgp94y4g/Snakefile:\nCommand \u0027set -euo pipefail;  find /tmp/tmpvgp94y4g/evaluation/data/SIRV_PSC109_phmm_fl.fq  -regextype posix-extended -regex \u0027.*\\.(fastq|fq)$\u0027 -exec cat {} \\; \u003e processed_reads/input_reads.fq\u0027 returned non-zero exit status 1.\n  File \"/tmp/tmpvgp94y4g/Snakefile\", line 171, in \u003cmodule\u003e\n  File \"/tmp/tmpvgp94y4g/Snakefile\", line 154, in preprocess_reads\n",
    "stargazers_count": 13,
    "subscribers_count": 22,
    "topics": [
      "cdna",
      "rna-seq",
      "rna",
      "transcriptomics"
    ],
    "updated_at": 1607159932.0
  },
  {
    "data_format": 1,
    "description": "Files and methodology pertaining to the sequencing and analysis of SARS-CoV-2, causative agent of COVID-19.",
    "formatting": "[ERROR] In file \"/tmp/tmpbji1ptc6/Snakefile\":  \u0027InvalidPython: Got error:\n```\nCannot parse: 2:0:     else:\n```\nwhile formatting code with black.\u0027\n[INFO] In file \"/tmp/tmpbji1ptc6/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "jaleezyy/covid-19-signal",
    "linting": "Lints for snakefile /tmp/tmpbji1ptc6/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule postprocess (line 256, /tmp/tmpbji1ptc6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule ncov_tools (line 277, /tmp/tmpbji1ptc6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule copy_config_sample_log (line 310, /tmp/tmpbji1ptc6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule link_raw_data (line 338, /tmp/tmpbji1ptc6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule run_raw_fastqc (line 360, /tmp/tmpbji1ptc6/Snakefile):\n    * Param output_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule run_trimgalore (line 491, /tmp/tmpbji1ptc6/Snakefile):\n    * Param output_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule run_filtering_of_residual_adapters (line 542, /tmp/tmpbji1ptc6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule viral_reference_bwa_build (line 581, /tmp/tmpbji1ptc6/Snakefile):\n    * Param output_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule viral_reference_bwa_map (line 617, /tmp/tmpbji1ptc6/Snakefile):\n    * Param ref_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule run_bed_primer_trim (line 663, /tmp/tmpbji1ptc6/Snakefile):\n    * Param ivar_output_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule run_fastqc_on_mapped_reads (line 719, /tmp/tmpbji1ptc6/Snakefile):\n    * Param output_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule run_ivar_consensus (line 801, /tmp/tmpbji1ptc6/Snakefile):\n    * Param output_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule index_viral_reference (line 845, /tmp/tmpbji1ptc6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule run_ivar_variants (line 873, /tmp/tmpbji1ptc6/Snakefile):\n    * Param output_prefix is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule run_breseq (line 925, /tmp/tmpbji1ptc6/Snakefile):\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n    * Param labelled_output_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule coverage_depth (line 978, /tmp/tmpbji1ptc6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule generate_coverage_plot (line 1004, /tmp/tmpbji1ptc6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule run_kraken2 (line 1033, /tmp/tmpbji1ptc6/Snakefile):\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule run_quast (line 1100, /tmp/tmpbji1ptc6/Snakefile):\n    * Param outdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule run_lineage_assignment (line 1144, /tmp/tmpbji1ptc6/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 14,
    "subscribers_count": 12,
    "topics": [],
    "updated_at": 1614504765.0
  },
  {
    "data_format": 1,
    "description": "Reproducibility workflow for Gigante et al., 2018: Using long-read sequencing to detect imprinted DNA methylation",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "scottgigante/haplotyped-methylome",
    "linting": "The flag \u0027directory\u0027 used in rule untar_cleanup is only valid for outputs, not inputs.\nLints for rule suppdb_bam (line 1, /tmp/tmpf_fia2ds/scripts/allelic_methylation.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule split_methylation_by_alignment (line 22, /tmp/tmpf_fia2ds/scripts/allelic_methylation.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule calculate_methylation_frequency (line 43, /tmp/tmpf_fia2ds/scripts/allelic_methylation.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule call_variant_proportion (line 62, /tmp/tmpf_fia2ds/scripts/allelic_methylation.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sort_by_read (line 90, /tmp/tmpf_fia2ds/scripts/allelic_methylation.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule sort_by_site (line 116, /tmp/tmpf_fia2ds/scripts/allelic_methylation.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule read_summary (line 142, /tmp/tmpf_fia2ds/scripts/allelic_methylation.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule read_haplotype (line 161, /tmp/tmpf_fia2ds/scripts/allelic_methylation.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fit_reads (line 180, /tmp/tmpf_fia2ds/scripts/allelic_methylation.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule split_methylation_by_haplotype (line 206, /tmp/tmpf_fia2ds/scripts/allelic_methylation.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule calculate_allele_meth_freq (line 227, /tmp/tmpf_fia2ds/scripts/allelic_methylation.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule paired_dss (line 246, /tmp/tmpf_fia2ds/scripts/allelic_methylation.snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule compare_haplotype_methylation (line 272, /tmp/tmpf_fia2ds/scripts/allelic_methylation.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_dmrlist (line 293, /tmp/tmpf_fia2ds/scripts/allelic_methylation.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_methylation_df (line 313, /tmp/tmpf_fia2ds/scripts/allelic_methylation.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule call_variant_proportion_threeway (line 1, /tmp/tmpf_fia2ds/scripts/fvb_resolution.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fvb_resolution (line 26, /tmp/tmpf_fia2ds/scripts/fvb_resolution.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_threeway_variants (line 52, /tmp/tmpf_fia2ds/scripts/fvb_resolution.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_fast5_b6xcast_0503 (line 1, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_fast5_b6xcast_0512 (line 20, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_fast5_b6xcast_0525 (line 39, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_fast5_castxb6 (line 58, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_fast5_b6 (line 77, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_fast5_cast (line 96, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fast5_md5 (line 115, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule untar (line 135, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule untar_cleanup (line 157, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_b6xcast (line 186, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule albacore_minion (line 215, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule albacore_promethion (line 245, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule albacore_merge_output (line 275, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bwa_mem_align (line 294, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule nanopolish_index (line 325, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule nanopolish_methylation (line 349, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule nanopolish_phase (line 376, /tmp/tmpf_fia2ds/scripts/nanopolish.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule b6_haplotype_analysis (line 1, /tmp/tmpf_fia2ds/scripts/notebooks.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cast_haplotype_analysis (line 27, /tmp/tmpf_fia2ds/scripts/notebooks.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule b6xcast_haplotype_analysis (line 53, /tmp/tmpf_fia2ds/scripts/notebooks.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule castxb6_haplotype_analysis (line 79, /tmp/tmpf_fia2ds/scripts/notebooks.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule haplotype_auc (line 105, /tmp/tmpf_fia2ds/scripts/notebooks.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dmr_comparison (line 130, /tmp/tmpf_fia2ds/scripts/notebooks.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule visualise_dmrs (line 158, /tmp/tmpf_fia2ds/scripts/notebooks.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule differential_methylation_heatmaps (line 195, /tmp/tmpf_fia2ds/scripts/notebooks.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule genome_level_methylation_summary (line 222, /tmp/tmpf_fia2ds/scripts/notebooks.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule nanopolish_methylation_validation (line 250, /tmp/tmpf_fia2ds/scripts/notebooks.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule rnaseq_analysis_notebook (line 276, /tmp/tmpf_fia2ds/scripts/notebooks.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule prepare_visualisation (line 321, /tmp/tmpf_fia2ds/scripts/notebooks.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_B6_genome (line 1, /tmp/tmpf_fia2ds/scripts/misc.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_gtf (line 20, /tmp/tmpf_fia2ds/scripts/misc.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule gunzip_fa (line 39, /tmp/tmpf_fia2ds/scripts/misc.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule gunzip_vcf (line 58, /tmp/tmpf_fia2ds/scripts/misc.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule gunzip_gtf (line 77, /tmp/tmpf_fia2ds/scripts/misc.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bwa_index (line 96, /tmp/tmpf_fia2ds/scripts/misc.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_index (line 124, /tmp/tmpf_fia2ds/scripts/misc.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_vcf (line 143, /tmp/tmpf_fia2ds/scripts/misc.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule mask_with_cast_genome (line 163, /tmp/tmpf_fia2ds/scripts/misc.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule ensembl_gtf_to_tsv (line 183, /tmp/tmpf_fia2ds/scripts/misc.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule icr_plot_region_string (line 202, /tmp/tmpf_fia2ds/scripts/misc.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule genome_cpg_coordinates (line 221, /tmp/tmpf_fia2ds/scripts/misc.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_rnaseq_B6Cast2 (line 6, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_rnaseq_B6Cast3 (line 26, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_rnaseq_B6Cast4 (line 46, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_rnaseq_B6Cast5 (line 66, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_rnaseq_CastB62 (line 86, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_rnaseq_CastB63 (line 106, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_rnaseq_CastB64 (line 126, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_rnaseq_CastB65 (line 146, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule fastq_md5 (line 166, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule trim_galore (line 186, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule snpsplit_create_path (line 215, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule snpsplit_prepare_genome (line 234, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean_up_snpsplit_genome (line 284, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param tempdir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule build_hisat2 (line 334, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule map_hisat2 (line 360, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param base is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule snp_split_hisat2 (line 396, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule snp_split_sort (line 422, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule samtools_depth (line 451, /tmp/tmpf_fia2ds/scripts/rna_seq.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_bisulfite_B6Cast1 (line 5, /tmp/tmpf_fia2ds/scripts/rrbs.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_bisulfite_B6Cast2 (line 25, /tmp/tmpf_fia2ds/scripts/rrbs.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_bisulfite_B6Cast5 (line 45, /tmp/tmpf_fia2ds/scripts/rrbs.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_bisulfite_B6Cast6 (line 65, /tmp/tmpf_fia2ds/scripts/rrbs.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bismark_create_path (line 85, /tmp/tmpf_fia2ds/scripts/rrbs.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bismark_prepare_genome (line 104, /tmp/tmpf_fia2ds/scripts/rrbs.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bismark_align (line 132, /tmp/tmpf_fia2ds/scripts/rrbs.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param genome is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule sort_bisulfite (line 168, /tmp/tmpf_fia2ds/scripts/rrbs.snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule snpsplit_bismark (line 195, /tmp/tmpf_fia2ds/scripts/rrbs.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bismark_extract (line 221, /tmp/tmpf_fia2ds/scripts/rrbs.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_bisulfite_genome1 (line 255, /tmp/tmpf_fia2ds/scripts/rrbs.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_bisulfite_genome2 (line 277, /tmp/tmpf_fia2ds/scripts/rrbs.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule merge_matched_bisulfite (line 299, /tmp/tmpf_fia2ds/scripts/rrbs.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_nanopolish_b6xcast (line 1, /tmp/tmpf_fia2ds/scripts/intermediate.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_nanopolish_castxb6 (line 20, /tmp/tmpf_fia2ds/scripts/intermediate.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_nanopolish_cast (line 39, /tmp/tmpf_fia2ds/scripts/intermediate.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_nanopolish_b6 (line 58, /tmp/tmpf_fia2ds/scripts/intermediate.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule intermediate_md5 (line 77, /tmp/tmpf_fia2ds/scripts/intermediate.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule intermediate_gunzip (line 97, /tmp/tmpf_fia2ds/scripts/intermediate.snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 14,
    "subscribers_count": 4,
    "topics": [],
    "updated_at": 1614375266.0
  },
  {
    "data_format": 1,
    "description": "A straightforward bioinformatic pipeline for detecting a bacterial strain in one or more metagenome(s).",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "bhattlab/StrainSifter",
    "linting": "Lints for snakefile /tmp/tmpvx4q7tzt/Snakefile:\n    * Absolute path \"/|\\.\" in line 16:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule bwa_index (line 24, /tmp/tmpvx4q7tzt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule bwa_align (line 52, /tmp/tmpvx4q7tzt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Param ref is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule genomecov (line 90, /tmp/tmpvx4q7tzt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule calc_coverage (line 118, /tmp/tmpvx4q7tzt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filter_samples (line 150, /tmp/tmpvx4q7tzt/Snakefile):\n    * The dynamic flag is deprecated:\n      Use checkpoints instead, which are more powerful and less error-prone.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#data-dependent-conditional-execution\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule faidx (line 183, /tmp/tmpvx4q7tzt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule pileup (line 206, /tmp/tmpvx4q7tzt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule call_snps (line 235, /tmp/tmpvx4q7tzt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule snp_consensus (line 267, /tmp/tmpvx4q7tzt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule combine (line 293, /tmp/tmpvx4q7tzt/Snakefile):\n    * The dynamic flag is deprecated:\n      Use checkpoints instead, which are more powerful and less error-prone.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#data-dependent-conditional-execution\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule core_snps (line 321, /tmp/tmpvx4q7tzt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule core_snps_to_fasta (line 347, /tmp/tmpvx4q7tzt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule multi_align (line 373, /tmp/tmpvx4q7tzt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_tree (line 399, /tmp/tmpvx4q7tzt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_tree (line 425, /tmp/tmpvx4q7tzt/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule pairwise_snvs (line 451, /tmp/tmpvx4q7tzt/Snakefile):\n    * The dynamic flag is deprecated:\n      Use checkpoints instead, which are more powerful and less error-prone.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#data-dependent-conditional-execution\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 14,
    "subscribers_count": 5,
    "topics": [],
    "updated_at": 1610657508.0
  },
  {
    "data_format": 1,
    "description": "StaG Metagenomic Workflow Collaboration",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "ctmrbio/stag-mwc",
    "linting": "WorkflowError in line 43 of /tmp/tmptze7x2yv/Snakefile:\nFound no samples! Check input file pattern and path in config.yaml\n  File \"/tmp/tmptze7x2yv/Snakefile\", line 43, in \u003cmodule\u003e\n",
    "stargazers_count": 15,
    "subscribers_count": 6,
    "topics": [
      "snakemake-workflows",
      "metagenomic-analysis",
      "metagenomics",
      "research",
      "microbiome"
    ],
    "updated_at": 1612267688.0
  },
  {
    "data_format": 1,
    "description": "A workflow for creating small NGS test data sets, useful for continuous integration.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "snakemake-workflows/ngs-test-data",
    "linting": "Lints for snakefile /tmp/tmp7pxxds1x/Snakefile:\n    * Absolute path \"/\u003e\u003cAttribute name = \" in line 39:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n\nLints for rule annotation (line 25, /tmp/tmp7pxxds1x/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule genome (line 45, /tmp/tmp7pxxds1x/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule transcriptome (line 64, /tmp/tmp7pxxds1x/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule reads (line 80, /tmp/tmp7pxxds1x/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\n",
    "stargazers_count": 16,
    "subscribers_count": 1,
    "topics": [
      "snakemake",
      "snakemake-workflows",
      "ngs"
    ],
    "updated_at": 1604377219.0
  },
  {
    "data_format": 1,
    "description": "Snakemake skeleton - Build workflows with Snakemake",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jlanga/smsk",
    "linting": "Lints for snakefile /tmp/tmpt2m328nb/src/snakefiles/raw.smk:\n    * Path composition with \u0027+\u0027 in line 4:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 40:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 43:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 44:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpt2m328nb/src/snakefiles/map.smk:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 4:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpt2m328nb/src/snakefiles/call.smk:\n    * Path composition with \u0027+\u0027 in line 6:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule clean_map (line 1, /tmp/tmpt2m328nb/src/snakefiles/clean.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable MAP from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule clean_call (line 15, /tmp/tmpt2m328nb/src/snakefiles/clean.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable CALL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule clean_report (line 29, /tmp/tmpt2m328nb/src/snakefiles/clean.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable REPORT_CALL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule clean (line 43, /tmp/tmpt2m328nb/src/snakefiles/clean.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable MAP from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable CALL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable REPORT_CALL from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule raw_extract_genome (line 34, /tmp/tmpt2m328nb/src/snakefiles/raw.smk):\n    * Shell command directly uses variable RAW from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule raw_extract_samples (line 83, /tmp/tmpt2m328nb/src/snakefiles/raw.smk):\n    * Shell command directly uses variable RAW from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule call_report (line 58, /tmp/tmpt2m328nb/src/snakefiles/call.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\n",
    "stargazers_count": 16,
    "subscribers_count": 5,
    "topics": [
      "snakemake",
      "tutorial",
      "workflow",
      "skeleton"
    ],
    "updated_at": 1588260152.0
  },
  {
    "data_format": 1,
    "description": null,
    "formatting": "[INFO] 35 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "yesimon/metax_bakeoff_2019",
    "linting": "DefaultCredentialsError in line 2 of /tmp/tmpz5cxrud4/rules/download.smk:\nCould not automatically determine credentials. Please set GOOGLE_APPLICATION_CREDENTIALS or explicitly create credentials and re-run the application. For more information, please see https://cloud.google.com/docs/authentication/getting-started\n  File \"/tmp/tmpz5cxrud4/Snakefile\", line 102, in \u003cmodule\u003e\n  File \"/tmp/tmpz5cxrud4/rules/download.smk\", line 2, in \u003cmodule\u003e\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/snakemake/remote/GS.py\", line 124, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/google/cloud/storage/client.py\", line 122, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/google/cloud/client.py\", line 249, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/google/cloud/client.py\", line 201, in __init__\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/google/cloud/client.py\", line 216, in _determine_default\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/google/cloud/_helpers.py\", line 186, in _determine_default_project\n  File \"/home/runner/micromamba/envs/snakemake-workflow-catalog/lib/python3.9/site-packages/google/auth/_default.py\", line 356, in default\n",
    "stargazers_count": 16,
    "subscribers_count": 0,
    "topics": [],
    "updated_at": 1611274385.0
  },
  {
    "data_format": 1,
    "description": "Reproducible reanalysis of a combined ChIP-Seq \u0026 RNA-Seq data set",
    "formatting": "[ERROR] In file \"/tmp/tmpaoahrf3d/Snakefile\":  \u0027AttributeError: \u0027NoneType\u0027 object has no attribute \u0027group\u0027\u0027\n[INFO] In file \"/tmp/tmpaoahrf3d/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "DarwinAwardWinner/CD4-csaw",
    "linting": "ModuleNotFoundError in line 4 of /tmp/tmpaoahrf3d/Snakefile:\nNo module named \u0027rpy2\u0027\n  File \"/tmp/tmpaoahrf3d/Snakefile\", line 4, in \u003cmodule\u003e\n",
    "stargazers_count": 16,
    "subscribers_count": 2,
    "topics": [
      "r",
      "bioinformatics-pipeline",
      "reproducible-research",
      "rna-seq",
      "chip-seq",
      "bioconductor"
    ],
    "updated_at": 1590666469.0
  },
  {
    "data_format": 1,
    "description": "Small collection of tools for performing quality control on coronavirus sequencing data and genomes",
    "formatting": "[INFO] 7 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "jts/ncov-tools",
    "linting": "WorkflowError in line 6 of /tmp/tmplpcnp_qh/workflow/rules/common.smk:\nConfig file config.yaml not found.\n  File \"/tmp/tmplpcnp_qh/workflow/Snakefile\", line 6, in \u003cmodule\u003e\n  File \"/tmp/tmplpcnp_qh/workflow/rules/common.smk\", line 6, in \u003cmodule\u003e\n",
    "stargazers_count": 19,
    "subscribers_count": 8,
    "topics": [],
    "updated_at": 1614353512.0
  },
  {
    "data_format": 1,
    "description": "reproducible research project template for R using Renv and snakemake with an econ application",
    "formatting": "[ERROR] In file \"/tmp/tmpjl0g8xky/rules/slides.smk\":  \u0027AttributeError: \u0027NoneType\u0027 object has no attribute \u0027group\u0027\u0027\n[INFO] 1 file(s) raised parsing errors \ud83e\udd15\n[INFO] 10 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "lachlandeer/snakemake-econ-r",
    "linting": "Lints for snakefile /tmp/tmpjl0g8xky/Snakefile:\n    * Path composition with \u0027+\u0027 in line 30:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpjl0g8xky/rules/paper.smk:\n    * Path composition with \u0027+\u0027 in line 23:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for snakefile /tmp/tmpjl0g8xky/rules/slides.smk:\n    * Path composition with \u0027+\u0027 in line 11:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule clean_all (line 42, /tmp/tmpjl0g8xky/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule help_main (line 57, /tmp/tmpjl0g8xky/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule gen_regression_vars (line 7, /tmp/tmpjl0g8xky/rules/data_mgt.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable runR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable logAll from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule rename_vars (line 40, /tmp/tmpjl0g8xky/rules/data_mgt.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable runR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable logAll from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule models (line 21, /tmp/tmpjl0g8xky/rules/analysis.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable runR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable logAll from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule figures (line 18, /tmp/tmpjl0g8xky/rules/figures.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable runR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable logAll from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule tables (line 20, /tmp/tmpjl0g8xky/rules/tables.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable runR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable logAll from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule paper2root (line 19, /tmp/tmpjl0g8xky/rules/paper.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_paper (line 39, /tmp/tmpjl0g8xky/rules/paper.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable runR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable logAll from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule slides2root (line 7, /tmp/tmpjl0g8xky/rules/slides.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_slides (line 27, /tmp/tmpjl0g8xky/rules/slides.smk):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable runR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable logAll from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule renv_install (line 10, /tmp/tmpjl0g8xky/rules/renv.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable runR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule renv_consent (line 22, /tmp/tmpjl0g8xky/rules/renv.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule renv_init (line 34, /tmp/tmpjl0g8xky/rules/renv.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule renv_snap (line 46, /tmp/tmpjl0g8xky/rules/renv.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule renv_restore (line 58, /tmp/tmpjl0g8xky/rules/renv.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean_output (line 6, /tmp/tmpjl0g8xky/rules/clean.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean_log (line 18, /tmp/tmpjl0g8xky/rules/clean.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule dag (line 8, /tmp/tmpjl0g8xky/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule filegraph (line 29, /tmp/tmpjl0g8xky/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule rulegraph (line 49, /tmp/tmpjl0g8xky/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule rulegraph_to_png (line 69, /tmp/tmpjl0g8xky/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule graphviz (line 92, /tmp/tmpjl0g8xky/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule graphviz_mac (line 104, /tmp/tmpjl0g8xky/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule install_poppler (line 116, /tmp/tmpjl0g8xky/rules/dag.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule help_analysis (line 6, /tmp/tmpjl0g8xky/rules/help.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule help_data_mgt (line 21, /tmp/tmpjl0g8xky/rules/help.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule help_figures (line 36, /tmp/tmpjl0g8xky/rules/help.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule help_paper (line 51, /tmp/tmpjl0g8xky/rules/help.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule help_slides (line 66, /tmp/tmpjl0g8xky/rules/help.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule help_tables (line 81, /tmp/tmpjl0g8xky/rules/help.smk):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 19,
    "subscribers_count": 2,
    "topics": [
      "snakemake",
      "snakemake-workflow",
      "economics",
      "workflow",
      "renv",
      "reproducible-research",
      "reproducibility"
    ],
    "updated_at": 1614182068.0
  },
  {
    "data_format": 1,
    "description": "PyPSA-Eur-Sec: A Sector-Coupled Open Optimisation Model of the European Energy System",
    "formatting": "[WARNING] In file \"/tmp/tmpr8nkyl1b/Snakefile\":  Keyword \"input\" at line 371 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "PyPSA/pypsa-eur-sec",
    "linting": "WorkflowError in line 2 of /tmp/tmpr8nkyl1b/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmpr8nkyl1b/Snakefile\", line 2, in \u003cmodule\u003e\n",
    "stargazers_count": 19,
    "subscribers_count": 11,
    "topics": [],
    "updated_at": 1614427520.0
  },
  {
    "data_format": 1,
    "description": "Open-source bioinformatics pipeline for the preprocessing of raw sequencing data.",
    "formatting": "[INFO] 9 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "MW55/Natrix",
    "linting": "KeyError in line 6 of /tmp/tmpi9xk_vpd/Snakefile:\n\u0027general\u0027\n  File \"/tmp/tmpi9xk_vpd/Snakefile\", line 6, in \u003cmodule\u003e\n",
    "stargazers_count": 19,
    "subscribers_count": 5,
    "topics": [],
    "updated_at": 1614632309.0
  },
  {
    "data_format": 1,
    "description": "A Snakemake pipeline for the generation of MAGs, reconstruction of GEMs, and simulation of cross-feeding interactions within microbial communities from lab cultures, human gut, ocean, plant-associated, and bulk soil microbiomes",
    "formatting": "[ERROR] In file \"/tmp/tmpn0ewqoce/Snakefile\":  \u0027NoParametersError: L295: In output definition.\u0027\n[INFO] In file \"/tmp/tmpn0ewqoce/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "franciscozorrilla/metaGEM",
    "linting": "Lints for snakefile /tmp/tmpn0ewqoce/Snakefile:\n    * Absolute path \"/^$/d\" in line 48:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/other_related_references(genome_id,species_name,radius,ANI,AF)/d\" in line 1044:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/other_related_references(genome_id,species_name,radius,ANI,AF)/d\" in line 1101:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/-/d\" in line 1225:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/N\\/A/d\" in line 1225:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Absolute path \"/community/d\" in line 1298:\n      Do not define absolute paths inside of the workflow, since this renders\n      your workflow irreproducible on other machines. Use path relative to the\n      working directory instead, or make the path configurable via a config\n      file.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html#configuration\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule all (line 21, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule createFolders (line 48, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule downloadToy (line 101, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule organizeData (line 191, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule qfilter (line 262, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule qfilterVis (line 308, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule megahit (line 389, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule assemblyVis (line 471, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule crossMap (line 551, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule kallistoIndex (line 727, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule crossMap3 (line 793, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule gatherCrossMap3 (line 858, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule kallisto2concoctTable (line 877, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule concoct (line 917, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule metabat (line 998, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule metabatCross (line 1123, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule maxbin (line 1168, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule maxbinCross (line 1237, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule binRefine (line 1294, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule binReassemble (line 1372, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule binningVis (line 1440, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule abundance (line 1711, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule GTDBtk (line 1954, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule GTDBtkVis (line 2003, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule compositionVis (line 2086, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule extractProteinBins (line 2175, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule carveme (line 2215, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule modelVis (line 2285, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule ECvis (line 2354, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule organizeGEMs (line 2447, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule smetana (line 2488, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule interactionVis (line 2538, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable print from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule memote (line 2568, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule grid (line 2622, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule extractDnaBins (line 2684, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule prokka (line 2728, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule roary (line 2775, /tmp/tmpn0ewqoce/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 20,
    "subscribers_count": 2,
    "topics": [
      "metagenomics",
      "computational-biology",
      "metabolic-models",
      "gut-microbiome",
      "snakemake",
      "community-simulations",
      "metagenome-assembled-genomes"
    ],
    "updated_at": 1614191031.0
  },
  {
    "data_format": 1,
    "description": "Ley Lab MetaGenome Profiler DataBase generator",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "leylabmpi/Struo",
    "linting": "/tmp/tmphzxe5j76/Snakefile:28: FutureWarning: The default value of regex will change from True to False in a future version.\n  config[\u0027samples\u0027] = config[\u0027samples\u0027].set_index(config[\u0027samples\u0027][config[\u0027samples_col\u0027]])\nSamples table (Row 1): Cannot find file: /ebio/abt3_projects/databases_no-backup/GTDB/release86/genbank/bacteria/GCA_002009845.1/GCA_002009845.1_ASM200984v1_genomic.fna.gz; Skipping\nSamples table (Row 2): Cannot find file: /ebio/abt3_projects/databases_no-backup/GTDB/release86/genbank/bacteria/GCA_000214495.2/GCA_000214495.2_ASM21449v1_genomic.fna.gz; Skipping\nSamples table (Row 3): Cannot find file: /ebio/abt3_projects/databases_no-backup/GTDB/release86/genbank/bacteria/GCA_000221545.2/GCA_000221545.2_ASM22154v1_genomic.fna.gz; Skipping\nSamples table (Row 4): Cannot find file: /ebio/abt3_projects/databases_no-backup/GTDB/release86/genbank/bacteria/GCA_000764165.1/GCA_000764165.1_ASM76416v1_genomic.fna.gz; Skipping\nSamples table (Row 5): Cannot find file: /ebio/abt3_projects/databases_no-backup/GTDB/release86/genbank/bacteria/GCA_900143645.1/GCA_900143645.1_IMG-taxon_2582580727_annotated_assembly_genomic.fna.gz; Skipping\nSamples table (Row 6): Cannot find file: /ebio/abt3_projects/databases_no-backup/GTDB/release86/genbank/bacteria/GCA_900205925.1/GCA_900205925.1_Clostridium_peptidoveorans_DPC7177_genomic.fna.gz; Skipping\nSamples table (Row 7): Cannot find file: /ebio/abt3_projects/databases_no-backup/GTDB/release86/genbank/bacteria/GCA_900176335.1/GCA_900176335.1_IMG-taxon_2588254267_annotated_assembly_genomic.fna.gz; Skipping\nSamples table (Row 8): Cannot find file: /ebio/abt3_projects/databases_no-backup/GTDB/release86/genbank/bacteria/GCA_000755365.1/GCA_000755365.1_ASM75536v1_genomic.fna.gz; Skipping\nSamples table (Row 9): Cannot find file: /ebio/abt3_projects/databases_no-backup/GTDB/release86/genbank/bacteria/GCA_000422585.1/GCA_000422585.1_ASM42258v1_genomic.fna.gz; Skipping\nSamples table (Row 10): Cannot find file: /ebio/abt3_projects/databases_no-backup/GTDB/release86/genbank/bacteria/GCA_000298175.1/GCA_000298175.1_ASM29817v1_genomic.fna.gz; Skipping\nTotal number of skipped rows: 10\nValueError in line 44 of /tmp/tmphzxe5j76/Snakefile:\nNo genomes remaining after filtering!\n  File \"/tmp/tmphzxe5j76/Snakefile\", line 44, in \u003cmodule\u003e\n",
    "stargazers_count": 23,
    "subscribers_count": 5,
    "topics": [],
    "updated_at": 1614233328.0
  },
  {
    "data_format": 1,
    "description": "Snakemake workflow for metagenomic classification with Kraken2",
    "formatting": "[WARNING] In file \"/tmp/tmpad5t_x0i/Snakefile\":  Keyword \"input\" at line 131 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "bhattlab/kraken2_classification",
    "linting": "KeyError in line 8 of /tmp/tmpad5t_x0i/Snakefile:\n\u0027outdir\u0027\n  File \"/tmp/tmpad5t_x0i/Snakefile\", line 8, in \u003cmodule\u003e\n",
    "stargazers_count": 24,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1614301214.0
  },
  {
    "data_format": 1,
    "description": "Extract lineage CSVs from NCBI for use with sourmash lca.",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "dib-lab/2018-ncbi-lineages",
    "linting": "Lints for rule download_wgs_acc2taxid (line 11, /tmp/tmpshke7bxk/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_gb_acc2taxid (line 26, /tmp/tmpshke7bxk/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule download_taxdump (line 41, /tmp/tmpshke7bxk/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_taxid (line 57, /tmp/tmpshke7bxk/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_lineage_csv (line 78, /tmp/tmpshke7bxk/Snakefile):\n    * Do not access input and output files individually by index in shell commands:\n      When individual access to input or output files is needed (i.e., just\n      writing \u0027{input}\u0027 is impossible), use names (\u0027{input.somename}\u0027) instead\n      of index based access.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#rules\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 25,
    "subscribers_count": 2,
    "topics": [],
    "updated_at": 1592359897.0
  },
  {
    "data_format": 1,
    "description": "Variant detection with Delly and Freebayes, followed by statistical assessment with Varlociraptor",
    "formatting": "[WARNING] In file \"/tmp/tmplx8bc70r/workflow/rules/common.smk\":  Keyword \"wildcard_constraints\" at line 274 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 16 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "snakemake-workflows/dna-seq-varlociraptor",
    "linting": null,
    "stargazers_count": 31,
    "subscribers_count": 5,
    "topics": [],
    "updated_at": 1614611226.0
  },
  {
    "data_format": 1,
    "description": "CADD scripts release for offline scoring. For more information about CADD, please visit our website",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "kircherlab/CADD-scripts",
    "linting": "Lints for rule decompress (line 4, /tmp/tmpanbdh2vh/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule prepare (line 25, /tmp/tmpanbdh2vh/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule prescore (line 55, /tmp/tmpanbdh2vh/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule annotation (line 111, /tmp/tmpanbdh2vh/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule imputation (line 151, /tmp/tmpanbdh2vh/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule score (line 179, /tmp/tmpanbdh2vh/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule join (line 225, /tmp/tmpanbdh2vh/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable config from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 31,
    "subscribers_count": 5,
    "topics": [],
    "updated_at": 1610842403.0
  },
  {
    "data_format": 1,
    "description": "A workflow for RNA-seq differential expression analysis based on Kallisto and Sleuth.",
    "formatting": null,
    "full_name": "snakemake-workflows/rna-seq-kallisto-sleuth",
    "linting": null,
    "stargazers_count": 33,
    "subscribers_count": 3,
    "topics": [],
    "updated_at": 1611635281.0
  },
  {
    "data_format": 1,
    "description": "A tool for generating bacterial genomes from metagenomes with nanopore long read sequencing",
    "formatting": "[WARNING] In file \"/tmp/tmp0n_vlvq3/Snakefile\":  Keyword \"output\" at line 133 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "bhattlab/lathe",
    "linting": "KeyError in line 22 of /tmp/tmp0n_vlvq3/Snakefile:\n\u0027file_names_txt\u0027\n  File \"/tmp/tmp0n_vlvq3/Snakefile\", line 22, in \u003cmodule\u003e\n",
    "stargazers_count": 39,
    "subscribers_count": 5,
    "topics": [],
    "updated_at": 1614578957.0
  },
  {
    "data_format": 1,
    "description": "ATAC-seq snakemake pipeline",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "crazyhottommy/pyflow-ATACseq",
    "linting": "FileNotFoundError in line 11 of /tmp/tmp23a71vvu/Snakefile:\n[Errno 2] No such file or directory: \u0027./samples.json\u0027\n  File \"/tmp/tmp23a71vvu/Snakefile\", line 11, in \u003cmodule\u003e\n",
    "stargazers_count": 45,
    "subscribers_count": 5,
    "topics": [
      "atac-seq",
      "snakemake"
    ],
    "updated_at": 1613405623.0
  },
  {
    "data_format": 1,
    "description": "Plotting tools for nanopore methylation data",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "wdecoster/methplotlib",
    "linting": "KeyError in line 23 of /tmp/tmpfiwvnchj/Snakefile:\n\u0027fastq\u0027\n  File \"/tmp/tmpfiwvnchj/Snakefile\", line 23, in \u003cmodule\u003e\n",
    "stargazers_count": 47,
    "subscribers_count": 7,
    "topics": [],
    "updated_at": 1613741384.0
  },
  {
    "data_format": 1,
    "description": "Meta-pipeline to identify transposable element insertions using next generation sequencing data",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "bergmanlab/mcclintock",
    "linting": "KeyError in line 1 of /tmp/tmpdib13sic/Snakefile:\n\u0027args\u0027\n  File \"/tmp/tmpdib13sic/Snakefile\", line 1, in \u003cmodule\u003e\n",
    "stargazers_count": 50,
    "subscribers_count": 13,
    "topics": [],
    "updated_at": 1614029673.0
  },
  {
    "data_format": 1,
    "description": "Pipeline for differential gene expression (DGE) and differential transcript usage (DTU) analysis using long reads",
    "formatting": "[ERROR] In file \"/tmp/tmppk5nfr2z/Snakefile\":  \u0027NoParametersError: L92: In input definition.\u0027\n[INFO] In file \"/tmp/tmppk5nfr2z/Snakefile\":  1 file(s) raised parsing errors \ud83e\udd15\n",
    "full_name": "nanoporetech/pipeline-transcriptome-de",
    "linting": "Lints for snakefile /tmp/tmppk5nfr2z/snakelib/utils.snake:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\nLints for rule help (line 12, /tmp/tmppk5nfr2z/snakelib/utils.snake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule clean_workdir (line 25, /tmp/tmppk5nfr2z/snakelib/utils.snake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule clean_resdir (line 39, /tmp/tmppk5nfr2z/snakelib/utils.snake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule info (line 53, /tmp/tmppk5nfr2z/snakelib/utils.snake):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule dump_versions (line 27, /tmp/tmppk5nfr2z/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule build_minimap_index (line 48, /tmp/tmppk5nfr2z/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule map_reads (line 80, /tmp/tmppk5nfr2z/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n\nLints for rule count_reads (line 122, /tmp/tmppk5nfr2z/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Param tsv_dir is a prefix of input or output file but hardcoded:\n      If this is meant to represent a file path prefix, it will fail when\n      running workflow in environments without a shared filesystem. Instead,\n      provide a function that infers the appropriate prefix from the input or\n      output file, e.g.: lambda w, input: os.path.splitext(input[0])[0]\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n      https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#tutorial-input-functions\n\nLints for rule merge_counts (line 156, /tmp/tmppk5nfr2z/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SNAKEDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule write_coldata (line 181, /tmp/tmppk5nfr2z/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule write_de_params (line 206, /tmp/tmppk5nfr2z/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Migrate long run directives into scripts or notebooks:\n      Long run directives hamper workflow readability. Use the script or\n      notebook direcive instead. Note that the script or notebook directive does\n      not involve boilerplate. Similar to run, you will have direct access to\n      params, input, output, and wildcards.Only use the run direcive for a\n      handful of lines.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#external-scripts\n      https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#jupyter-notebook-integration\n\nLints for rule de_analysis (line 228, /tmp/tmppk5nfr2z/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SNAKEDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\nLints for rule plot_dtu_res (line 261, /tmp/tmppk5nfr2z/Snakefile):\n    * No log directive defined:\n      Without a log directive, all output will be printed to the terminal. In\n      distributed environments, this means that errors are harder to discover.\n      In local environments, output of concurrent jobs will be mixed and become\n      unreadable.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#log-files\n    * Shell command directly uses variable SNAKEDIR from outside of the rule:\n      It is recommended to pass all files as input and output, and non-file\n      parameters via the params directive. Otherwise, provenance tracking is\n      less accurate.\n      Also see:\n      https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#non-file-parameters-for-rules\n\n",
    "stargazers_count": 59,
    "subscribers_count": 21,
    "topics": [
      "rna-seq",
      "cdna",
      "differential-gene-expression",
      "differential-transcript-usage",
      "nanopore"
    ],
    "updated_at": 1614011030.0
  },
  {
    "data_format": 1,
    "description": "A single cell RNA-seq workflow, including highly variable gene analysis, cell type assignment and differential expression analysis.",
    "formatting": null,
    "full_name": "snakemake-workflows/single-cell-rna-seq",
    "linting": null,
    "stargazers_count": 62,
    "subscribers_count": 7,
    "topics": [],
    "updated_at": 1613637936.0
  },
  {
    "data_format": 1,
    "description": "Snakemake pipelines for nanopore sequencing data archiving and processing",
    "formatting": "[ERROR] In file \"/tmp/tmp5z_26vuq/rules/install.smk\":  \u0027InvalidParameterSyntax: L431:Invalid key lambda wildcards, config\u0027\n[ERROR] In file \"/tmp/tmp5z_26vuq/rules/methylation.smk\":  \u0027InvalidParameterSyntax: L111:Invalid key lambda wildcards, config\u0027\n[WARNING] In file \"/tmp/tmp5z_26vuq/rules/transcript.smk\":  Keyword \"input\" at line 37 has comments under a value.\n\tPEP8 recommends block comments appear before what they describe\n(see https://www.python.org/dev/peps/pep-0008/#id30)\n[ERROR] In file \"/tmp/tmp5z_26vuq/rules/asm.smk\":  \u0027InvalidParameterSyntax: 46config. get(\u0027threads_asm\u0027) or1\n\u0027\n[ERROR] In file \"/tmp/tmp5z_26vuq/rules/alignment.smk\":  \u0027InvalidParameterSyntax: 164config. get(\u0027threads_samtools\u0027) or1\n\u0027\n[INFO] 4 file(s) raised parsing errors \ud83e\udd15\n[INFO] 8 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "giesselmann/nanopype",
    "linting": "[WARNING] Genome for NC_001416_1 not found in ref/NC_001416.1.fasta, skipping entry.\n[WARNING] Genome for hg38_DNMT1 not found in ref/hg38_DNMT1.fasta, skipping entry.\n[WARNING] albacore not found as read_fast5_basecaller.py and is not available in the workflow.\n[WARNING] flappie not found as flappie and is not available in the workflow.\n[WARNING] guppy_basecaller not found as guppy_basecaller and is not available in the workflow.\n[WARNING] guppy_barcoder not found as guppy_barcoder and is not available in the workflow.\n[WARNING] bedtools not found as bedtools and is not available in the workflow.\n[WARNING] graphmap2 not found as graphmap2 and is not available in the workflow.\n[WARNING] minimap2 not found as minimap2 and is not available in the workflow.\n[WARNING] nanopolish not found as nanopolish and is not available in the workflow.\n[WARNING] ngmlr not found as ngmlr and is not available in the workflow.\n[WARNING] samtools not found as samtools and is not available in the workflow.\n[WARNING] sniffles not found as sniffles and is not available in the workflow.\n[WARNING] svim not found as svim and is not available in the workflow.\n[WARNING] deepbinner not found as deepbinner and is not available in the workflow.\n[WARNING] bedGraphToBigWig not found as bedGraphToBigWig and is not available in the workflow.\n[WARNING] racon not found as racon and is not available in the workflow.\n[WARNING] cdna_classifier not found as cdna_classifier.py and is not available in the workflow.\n[WARNING] spliced_bam2gff not found as spliced_bam2gff and is not available in the workflow.\n[WARNING] cluster_gff not found as cluster_gff and is not available in the workflow.\n[WARNING] collapse_partials not found as collapse_partials and is not available in the workflow.\n[WARNING] polish_clusters not found as polish_clusters and is not available in the workflow.\n[WARNING] strique not found as STRique.py and is not available in the workflow.\n[WARNING] flye not found as flye and is not available in the workflow.\n[WARNING] wtdbg2 not found as wtdbg2 and is not available in the workflow.\n[WARNING] wtpoa-cns not found as wtpoa-cns and is not available in the workflow.\nRuntimeError in line 255 of /tmp/tmp5z_26vuq/Snakefile:\n[ERROR] Raw data archive not found.\n  File \"/tmp/tmp5z_26vuq/Snakefile\", line 255, in \u003cmodule\u003e\n",
    "stargazers_count": 66,
    "subscribers_count": 6,
    "topics": [
      "nanopore",
      "workflow",
      "snakemake-pipelines",
      "docker",
      "pipeline",
      "singularity"
    ],
    "updated_at": 1613574288.0
  },
  {
    "data_format": 1,
    "description": "Benchmarking analysis of data integration tools",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "theislab/scib",
    "linting": "KeyError in line 5 of /tmp/tmp7qg3el76/Snakefile:\n\u0027ROOT\u0027\n  File \"/tmp/tmp7qg3el76/Snakefile\", line 5, in \u003cmodule\u003e\n  File \"/tmp/tmp7qg3el76/scripts/snakemake_parse.py\", line 29, in __init__\n",
    "stargazers_count": 71,
    "subscribers_count": 11,
    "topics": [],
    "updated_at": 1614608809.0
  },
  {
    "data_format": 1,
    "description": "a snakemake pipeline to process ChIP-seq files from GEO or in-house ",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "crazyhottommy/pyflow-ChIPseq",
    "linting": "SyntaxError:\nNot all output, log and benchmark files of rule make_inputSubtract_bigwigs contain the same wildcards. This is crucial though, in order to avoid that two or more jobs write to the same file.\n  File \"/tmp/tmpsnvqnwnz/Snakefile\", line 224, in \u003cmodule\u003e\n",
    "stargazers_count": 73,
    "subscribers_count": 8,
    "topics": [
      "chip-seq",
      "snakemake",
      "python"
    ],
    "updated_at": 1611404673.0
  },
  {
    "data_format": 1,
    "description": "PyPSA-Eur: An Open Optimisation Model of the European Transmission System",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "PyPSA/pypsa-eur",
    "linting": "Lints for snakefile /tmp/tmpgy934uch/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n    * Path composition with \u0027+\u0027 in line 8:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 186:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n    * Path composition with \u0027+\u0027 in line 201:\n      This becomes quickly unreadable. Usually, it is better to endure some\n      redundancy against having a more readable workflow. Hence, just repeat\n      common prefixes. If path composition is unavoidable, use pathlib or\n      (python \u003e= 3.6) string formatting with f\"...\".\n      Also see:\n\n\nLints for rule retrieve_databundle (line 102, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_load_data (line 119, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_powerplants (line 136, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule base_network (line 164, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_shapes (line 204, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_bus_regions (line 241, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule retrieve_cutout (line 300, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule retrieve_natura_raster (line 341, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_renewable_profiles (line 358, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_hydro_profile (line 401, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule add_electricity (line 427, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule simplify_network (line 466, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule cluster_network (line 503, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule add_extra_components (line 544, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule prepare_network (line 575, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule solve_network (line 622, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule solve_operations_network (line 657, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_network (line 694, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule make_summary (line 734, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_summary (line 754, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule plot_p_nom_max (line 780, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\nLints for rule build_country_flh (line 800, /tmp/tmpgy934uch/Snakefile):\n    * Specify a conda environment or container for each rule.:\n      This way, the used software for each specific step is documented, and the\n      workflow can be executed on any machine without prerequisites.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#integrated-package-management\n      https://snakemake.readthedocs.io/en/latest/snakefiles/deployment.html#running-jobs-in-containers\n\n",
    "stargazers_count": 77,
    "subscribers_count": 11,
    "topics": [
      "snakemake"
    ],
    "updated_at": 1612751829.0
  },
  {
    "data_format": 1,
    "description": "Light-weight Snakemake workflow for preprocessing and statistical analysis of RNA-seq data",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "csoneson/ARMOR",
    "linting": "Lints for snakefile /tmp/tmpynsplbjn/Snakefile:\n    * Mixed rules and functions in same snakefile.:\n      Small one-liner functions used only once should be defined as lambda\n      expressions. Other functions should be collected in a common module, e.g.\n      \u0027rules/common.smk\u0027. This makes the workflow steps more readable.\n      Also see:\n      https://snakemake.readthedocs.io/en/latest/snakefiles/modularization.html#includes\n\n",
    "stargazers_count": 112,
    "subscribers_count": 12,
    "topics": [
      "rna-seq",
      "workflow"
    ],
    "updated_at": 1613981246.0
  },
  {
    "data_format": 1,
    "description": "A SingleCell RNASeq pre-processing snakemake workflow",
    "formatting": "[INFO] 14 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "Hoohm/dropSeqPipe",
    "linting": "WorkflowError in line 20 of /tmp/tmpr_k9eyen/Snakefile:\nConfig file config.yaml not found.\n  File \"/tmp/tmpr_k9eyen/Snakefile\", line 20, in \u003cmodule\u003e\n",
    "stargazers_count": 127,
    "subscribers_count": 7,
    "topics": [
      "drop-seq",
      "snakemake",
      "pipeline",
      "dropseq",
      "yaml",
      "star",
      "picard",
      "reference-genome",
      "umi",
      "scrbseq",
      "scrb-seq",
      "multiqc",
      "conda",
      "plot",
      "dropseqtools"
    ],
    "updated_at": 1614184764.0
  },
  {
    "data_format": 1,
    "description": "This Snakemake pipeline implements the GATK best-practices workflow",
    "formatting": null,
    "full_name": "snakemake-workflows/dna-seq-gatk-variant-calling",
    "linting": null,
    "stargazers_count": 130,
    "subscribers_count": 2,
    "topics": [
      "reproducibility",
      "snakemake",
      "sciworkflows"
    ],
    "updated_at": 1614240127.0
  },
  {
    "data_format": 1,
    "description": "RNA-seq workflow using STAR and DESeq2",
    "formatting": null,
    "full_name": "snakemake-workflows/rna-seq-star-deseq2",
    "linting": null,
    "stargazers_count": 158,
    "subscribers_count": 5,
    "topics": [
      "snakemake",
      "snakemake-workflows",
      "ngs",
      "rna-seq",
      "reproducible-science"
    ],
    "updated_at": 1614544462.0
  },
  {
    "data_format": 1,
    "description": "A benchmark dataset for data-driven weather forecasting",
    "formatting": "[INFO] 1 file(s) would be changed \ud83d\ude2c\n",
    "full_name": "pangeo-data/WeatherBench",
    "linting": "KeyError in line 9 of /tmp/tmpv22c2xdv/Snakefile:\n\u0027datadir\u0027\n  File \"/tmp/tmpv22c2xdv/Snakefile\", line 9, in \u003cmodule\u003e\n",
    "stargazers_count": 224,
    "subscribers_count": 25,
    "topics": [
      "dataset",
      "benchmark",
      "weather-forecast",
      "deep-learning"
    ],
    "updated_at": 1614400194.0
  }
]
