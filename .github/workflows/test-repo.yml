name: Test repo

on:
  issue_comment:
    types:
      - created
      - edited

jobs:
  test-repo:
    runs-on: ubuntu-latest
    if: >-
      startsWith(github.event.comment.body, '/catalog test repo')
    steps:
      - uses: actions/github-script@v5
        id: info
        env:
          BODY: ${{ github.event.comment.body }}
        with:
          script: |
            const process = require("process")
            const sleep = require('util').promisify(setTimeout)

            const test_repo = process.env.BODY.match(/\/catalog test repo ([^\/]+\/[^\/]+)/)[1]

            if (core.rate_limit.remaining <= 0) {
              const tosleep = core.rate_limit.reset - Date.now() + 5
              console.log(`Rate limit exceeded, waiting for ${tosleep} seconds.`)
              sleep(tosleep)
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Testing catalog parsing for repository https://github.com/${test_repo}.\nResults: https://github.com/snakemake/snakemake-workflow-catalog/actions/workflows/test-repo.yml`
            })

            return {
              test_repo: test_repo
            }
      - name: Post action link
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Testing catalog parsing for repository https://github.com/${{ fromJSON(steps.info.outputs.result).test_repo }}.
            Results: https://github.com/snakemake/snakemake-workflow-catalog/actions/workflows/test-repo.yml
      - uses: actions/checkout@v1
      - name: deployment
        uses: mamba-org/provision-with-micromamba@main
      - name: generate-catalog
        shell: bash -l {0}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TEST_REPO: ${{ fromJSON(steps.info.outputs.result).test_repo }}
        run: |
          python scripts/generate-catalog.py

